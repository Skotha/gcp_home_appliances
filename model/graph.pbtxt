node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/cond/Switch"
  op: "Switch"
  input: "global_step/IsVariableInitialized"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_t"
  op: "Identity"
  input: "global_step/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_f"
  op: "Identity"
  input: "global_step/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/pred_id"
  op: "Identity"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read"
  op: "Identity"
  input: "global_step/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read/Switch"
  op: "RefSwitch"
  input: "global_step"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Switch_1"
  op: "Switch"
  input: "global_step/Initializer/zeros"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Merge"
  op: "Merge"
  input: "global_step/cond/Switch_1"
  input: "global_step/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/add"
  op: "AddV2"
  input: "global_step/cond/Merge"
  input: "global_step/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "filenames"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "gs://gcp_blog/e2e_demo/train.csv"
      }
    }
  }
}
node {
  name: "compression_type"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Const_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Const_3"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Const_4"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Const_5"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Const_6"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Const_7"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Const_8"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "buffer_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 4194304
      }
    }
  }
}
node {
  name: "header"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "field_delim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ","
      }
    }
  }
}
node {
  name: "use_quote_delim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "na_value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "select_cols"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 9
          }
        }
        tensor_content: "\023\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\026\000\000\000\000\000\000\000\027\000\000\000\000\000\000\000\030\000\000\000\000\000\000\000\031\000\000\000\000\000\000\000\032\000\000\000\000\000\000\000\033\000\000\000\000\000\000\000\034\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "CSVDataset"
  op: "CSVDataset"
  input: "filenames"
  input: "compression_type"
  input: "buffer_size"
  input: "header"
  input: "field_delim"
  input: "use_quote_delim"
  input: "na_value"
  input: "select_cols"
  input: "Const"
  input: "Const_1"
  input: "Const_2"
  input: "Const_3"
  input: "Const_4"
  input: "Const_5"
  input: "Const_6"
  input: "Const_7"
  input: "Const_8"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_DOUBLE
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
      }
    }
  }
}
node {
  name: "window_stride"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 5
      }
    }
  }
}
node {
  name: "window_stride_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "window_shift"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "SlidingWindowDataset"
  op: "SlidingWindowDataset"
  input: "CSVDataset"
  input: "window_stride"
  input: "window_shift"
  input: "window_stride_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_DOUBLE
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
      }
    }
  }
}
node {
  name: "MapDataset"
  op: "MapDataset"
  input: "SlidingWindowDataset"
  device: "/device:CPU:0"
  attr {
    key: "Targuments"
    value {
      list {
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_Dataset_map__mk_data_9011"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_UINT8
      }
    }
  }
  attr {
    key: "preserve_cardinality"
    value {
      b: false
    }
  }
  attr {
    key: "use_inter_op_parallelism"
    value {
      b: true
    }
  }
}
node {
  name: "FilterDataset"
  op: "FilterDataset"
  input: "MapDataset"
  device: "/device:CPU:0"
  attr {
    key: "Targuments"
    value {
      list {
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_UINT8
      }
    }
  }
  attr {
    key: "predicate"
    value {
      func {
        name: "__inference_Dataset_filter__filter_data_9036"
      }
    }
  }
}
node {
  name: "buffer_size_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 604800
      }
    }
  }
}
node {
  name: "seed"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "seed2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "ShuffleDataset"
  op: "ShuffleDataset"
  input: "FilterDataset"
  input: "buffer_size_1"
  input: "seed"
  input: "seed2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_UINT8
      }
    }
  }
  attr {
    key: "reshuffle_each_iteration"
    value {
      b: true
    }
  }
}
node {
  name: "count"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 40
      }
    }
  }
}
node {
  name: "RepeatDataset"
  op: "RepeatDataset"
  input: "ShuffleDataset"
  input: "count"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_UINT8
      }
    }
  }
}
node {
  name: "batch_size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 64
      }
    }
  }
}
node {
  name: "drop_remainder"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "BatchDatasetV2"
  op: "BatchDatasetV2"
  input: "RepeatDataset"
  input: "batch_size"
  input: "drop_remainder"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_UINT8
      }
    }
  }
  attr {
    key: "parallel_copy"
    value {
      b: false
    }
  }
}
node {
  name: "buffer_size_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "PrefetchDataset"
  op: "PrefetchDataset"
  input: "BatchDatasetV2"
  input: "buffer_size_2"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "legacy_autotune"
    value {
      b: true
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_UINT8
      }
    }
  }
  attr {
    key: "slack_period"
    value {
      i: 0
    }
  }
}
node {
  name: "OneShotIterator"
  op: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_OMyCPSyA45M"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_UINT8
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "IteratorToStringHandle"
  op: "IteratorToStringHandle"
  input: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "IteratorGetNext"
  op: "IteratorGetNext"
  input: "OneShotIterator"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_DOUBLE
        type: DT_UINT8
      }
    }
  }
}
node {
  name: "input_layer/ActivePower_1/Cast"
  op: "Cast"
  input: "IteratorGetNext"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "input_layer/ActivePower_1/Shape"
  op: "Shape"
  input: "input_layer/ActivePower_1/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input_layer/ActivePower_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "input_layer/ActivePower_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "input_layer/ActivePower_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "input_layer/ActivePower_1/strided_slice"
  op: "StridedSlice"
  input: "input_layer/ActivePower_1/Shape"
  input: "input_layer/ActivePower_1/strided_slice/stack"
  input: "input_layer/ActivePower_1/strided_slice/stack_1"
  input: "input_layer/ActivePower_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "input_layer/ActivePower_1/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "input_layer/ActivePower_1/Reshape/shape"
  op: "Pack"
  input: "input_layer/ActivePower_1/strided_slice"
  input: "input_layer/ActivePower_1/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "input_layer/ActivePower_1/Reshape"
  op: "Reshape"
  input: "input_layer/ActivePower_1/Cast"
  input: "input_layer/ActivePower_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "input_layer/ActivePower_2/Cast"
  op: "Cast"
  input: "IteratorGetNext:1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "input_layer/ActivePower_2/Shape"
  op: "Shape"
  input: "input_layer/ActivePower_2/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input_layer/ActivePower_2/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "input_layer/ActivePower_2/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "input_layer/ActivePower_2/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "input_layer/ActivePower_2/strided_slice"
  op: "StridedSlice"
  input: "input_layer/ActivePower_2/Shape"
  input: "input_layer/ActivePower_2/strided_slice/stack"
  input: "input_layer/ActivePower_2/strided_slice/stack_1"
  input: "input_layer/ActivePower_2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "input_layer/ActivePower_2/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "input_layer/ActivePower_2/Reshape/shape"
  op: "Pack"
  input: "input_layer/ActivePower_2/strided_slice"
  input: "input_layer/ActivePower_2/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "input_layer/ActivePower_2/Reshape"
  op: "Reshape"
  input: "input_layer/ActivePower_2/Cast"
  input: "input_layer/ActivePower_2/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "input_layer/ActivePower_3/Cast"
  op: "Cast"
  input: "IteratorGetNext:2"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "input_layer/ActivePower_3/Shape"
  op: "Shape"
  input: "input_layer/ActivePower_3/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input_layer/ActivePower_3/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "input_layer/ActivePower_3/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "input_layer/ActivePower_3/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "input_layer/ActivePower_3/strided_slice"
  op: "StridedSlice"
  input: "input_layer/ActivePower_3/Shape"
  input: "input_layer/ActivePower_3/strided_slice/stack"
  input: "input_layer/ActivePower_3/strided_slice/stack_1"
  input: "input_layer/ActivePower_3/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "input_layer/ActivePower_3/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "input_layer/ActivePower_3/Reshape/shape"
  op: "Pack"
  input: "input_layer/ActivePower_3/strided_slice"
  input: "input_layer/ActivePower_3/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "input_layer/ActivePower_3/Reshape"
  op: "Reshape"
  input: "input_layer/ActivePower_3/Cast"
  input: "input_layer/ActivePower_3/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "input_layer/ActivePower_4/Cast"
  op: "Cast"
  input: "IteratorGetNext:3"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "input_layer/ActivePower_4/Shape"
  op: "Shape"
  input: "input_layer/ActivePower_4/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input_layer/ActivePower_4/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "input_layer/ActivePower_4/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "input_layer/ActivePower_4/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "input_layer/ActivePower_4/strided_slice"
  op: "StridedSlice"
  input: "input_layer/ActivePower_4/Shape"
  input: "input_layer/ActivePower_4/strided_slice/stack"
  input: "input_layer/ActivePower_4/strided_slice/stack_1"
  input: "input_layer/ActivePower_4/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "input_layer/ActivePower_4/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "input_layer/ActivePower_4/Reshape/shape"
  op: "Pack"
  input: "input_layer/ActivePower_4/strided_slice"
  input: "input_layer/ActivePower_4/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "input_layer/ActivePower_4/Reshape"
  op: "Reshape"
  input: "input_layer/ActivePower_4/Cast"
  input: "input_layer/ActivePower_4/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "input_layer/ActivePower_5/Cast"
  op: "Cast"
  input: "IteratorGetNext:4"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "input_layer/ActivePower_5/Shape"
  op: "Shape"
  input: "input_layer/ActivePower_5/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input_layer/ActivePower_5/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "input_layer/ActivePower_5/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "input_layer/ActivePower_5/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "input_layer/ActivePower_5/strided_slice"
  op: "StridedSlice"
  input: "input_layer/ActivePower_5/Shape"
  input: "input_layer/ActivePower_5/strided_slice/stack"
  input: "input_layer/ActivePower_5/strided_slice/stack_1"
  input: "input_layer/ActivePower_5/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "input_layer/ActivePower_5/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "input_layer/ActivePower_5/Reshape/shape"
  op: "Pack"
  input: "input_layer/ActivePower_5/strided_slice"
  input: "input_layer/ActivePower_5/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "input_layer/ActivePower_5/Reshape"
  op: "Reshape"
  input: "input_layer/ActivePower_5/Cast"
  input: "input_layer/ActivePower_5/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "input_layer/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "input_layer/concat"
  op: "ConcatV2"
  input: "input_layer/ActivePower_1/Reshape"
  input: "input_layer/ActivePower_2/Reshape"
  input: "input_layer/ActivePower_3/Reshape"
  input: "input_layer/ActivePower_4/Reshape"
  input: "input_layer/ActivePower_5/Reshape"
  input: "input_layer/concat/axis"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "ExpandDims"
  op: "ExpandDims"
  input: "input_layer/concat"
  input: "ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10690449923276901
      }
    }
  }
}
node {
  name: "sequential/lstm/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10690449923276901
      }
    }
  }
}
node {
  name: "sequential/lstm/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "sequential/lstm/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "sequential/lstm/kernel/Initializer/random_uniform/max"
  input: "sequential/lstm/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "sequential/lstm/kernel/Initializer/random_uniform/RandomUniform"
  input: "sequential/lstm/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/kernel/Initializer/random_uniform"
  op: "Add"
  input: "sequential/lstm/kernel/Initializer/random_uniform/mul"
  input: "sequential/lstm/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 524
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/lstm/kernel"
    }
  }
}
node {
  name: "sequential/lstm/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/kernel/Assign"
  op: "AssignVariableOp"
  input: "sequential/lstm/kernel"
  input: "sequential/lstm/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm/recurrent_kernel/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\002\000\000\203\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm/recurrent_kernel/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm/recurrent_kernel/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm/recurrent_kernel/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "sequential/lstm/recurrent_kernel/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm/recurrent_kernel/Initializer/random_normal/mul"
  op: "Mul"
  input: "sequential/lstm/recurrent_kernel/Initializer/random_normal/RandomStandardNormal"
  input: "sequential/lstm/recurrent_kernel/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/recurrent_kernel/Initializer/random_normal"
  op: "Add"
  input: "sequential/lstm/recurrent_kernel/Initializer/random_normal/mul"
  input: "sequential/lstm/recurrent_kernel/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/recurrent_kernel/Initializer/Qr"
  op: "Qr"
  input: "sequential/lstm/recurrent_kernel/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm/recurrent_kernel/Initializer/DiagPart"
  op: "DiagPart"
  input: "sequential/lstm/recurrent_kernel/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/recurrent_kernel/Initializer/Sign"
  op: "Sign"
  input: "sequential/lstm/recurrent_kernel/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/recurrent_kernel/Initializer/mul"
  op: "Mul"
  input: "sequential/lstm/recurrent_kernel/Initializer/Qr"
  input: "sequential/lstm/recurrent_kernel/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/recurrent_kernel/Initializer/matrix_transpose/transpose/perm"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm/recurrent_kernel/Initializer/matrix_transpose/transpose"
  op: "Transpose"
  input: "sequential/lstm/recurrent_kernel/Initializer/mul"
  input: "sequential/lstm/recurrent_kernel/Initializer/matrix_transpose/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/recurrent_kernel/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm/recurrent_kernel/Initializer/Reshape"
  op: "Reshape"
  input: "sequential/lstm/recurrent_kernel/Initializer/matrix_transpose/transpose"
  input: "sequential/lstm/recurrent_kernel/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/recurrent_kernel/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm/recurrent_kernel/Initializer/mul_1"
  op: "Mul"
  input: "sequential/lstm/recurrent_kernel/Initializer/mul_1/x"
  input: "sequential/lstm/recurrent_kernel/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/recurrent_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 131
        }
        dim {
          size: 524
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/lstm/recurrent_kernel"
    }
  }
}
node {
  name: "sequential/lstm/recurrent_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/recurrent_kernel/Assign"
  op: "AssignVariableOp"
  input: "sequential/lstm/recurrent_kernel"
  input: "sequential/lstm/recurrent_kernel/Initializer/mul_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm/recurrent_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 131
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm/bias/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 131
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm/bias/Initializer/zeros_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 262
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 262
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm/bias/Initializer/concat/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm/bias/Initializer/concat"
  op: "ConcatV2"
  input: "sequential/lstm/bias/Initializer/zeros"
  input: "sequential/lstm/bias/Initializer/ones"
  input: "sequential/lstm/bias/Initializer/zeros_1"
  input: "sequential/lstm/bias/Initializer/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 524
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/lstm/bias"
    }
  }
}
node {
  name: "sequential/lstm/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/bias/Assign"
  op: "AssignVariableOp"
  input: "sequential/lstm/bias"
  input: "sequential/lstm/bias/Initializer/concat"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm/Shape"
  op: "Shape"
  input: "ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm/strided_slice"
  op: "StridedSlice"
  input: "sequential/lstm/Shape"
  input: "sequential/lstm/strided_slice/stack"
  input: "sequential/lstm/strided_slice/stack_1"
  input: "sequential/lstm/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "sequential/lstm/zeros/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 131
      }
    }
  }
}
node {
  name: "sequential/lstm/zeros/mul"
  op: "Mul"
  input: "sequential/lstm/strided_slice"
  input: "sequential/lstm/zeros/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/zeros/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "sequential/lstm/zeros/Less"
  op: "Less"
  input: "sequential/lstm/zeros/mul"
  input: "sequential/lstm/zeros/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/zeros/packed/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 131
      }
    }
  }
}
node {
  name: "sequential/lstm/zeros/packed"
  op: "Pack"
  input: "sequential/lstm/strided_slice"
  input: "sequential/lstm/zeros/packed/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm/zeros"
  op: "Fill"
  input: "sequential/lstm/zeros/packed"
  input: "sequential/lstm/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm/zeros_1/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 131
      }
    }
  }
}
node {
  name: "sequential/lstm/zeros_1/mul"
  op: "Mul"
  input: "sequential/lstm/strided_slice"
  input: "sequential/lstm/zeros_1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/zeros_1/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "sequential/lstm/zeros_1/Less"
  op: "Less"
  input: "sequential/lstm/zeros_1/mul"
  input: "sequential/lstm/zeros_1/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/zeros_1/packed/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 131
      }
    }
  }
}
node {
  name: "sequential/lstm/zeros_1/packed"
  op: "Pack"
  input: "sequential/lstm/strided_slice"
  input: "sequential/lstm/zeros_1/packed/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm/zeros_1"
  op: "Fill"
  input: "sequential/lstm/zeros_1/packed"
  input: "sequential/lstm/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm/transpose"
  op: "Transpose"
  input: "ExpandDims"
  input: "sequential/lstm/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/Shape_1"
  op: "Shape"
  input: "sequential/lstm/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm/strided_slice_1"
  op: "StridedSlice"
  input: "sequential/lstm/Shape_1"
  input: "sequential/lstm/strided_slice_1/stack"
  input: "sequential/lstm/strided_slice_1/stack_1"
  input: "sequential/lstm/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "sequential/lstm/TensorArray"
  op: "TensorArrayV3"
  input: "sequential/lstm/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "input_ta_0"
    }
  }
}
node {
  name: "sequential/lstm/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "sequential/lstm/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "sequential/lstm/TensorArrayUnstack/Shape"
  input: "sequential/lstm/TensorArrayUnstack/strided_slice/stack"
  input: "sequential/lstm/TensorArrayUnstack/strided_slice/stack_1"
  input: "sequential/lstm/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "sequential/lstm/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm/TensorArrayUnstack/range"
  op: "Range"
  input: "sequential/lstm/TensorArrayUnstack/range/start"
  input: "sequential/lstm/TensorArrayUnstack/strided_slice"
  input: "sequential/lstm/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "sequential/lstm/TensorArray"
  input: "sequential/lstm/TensorArrayUnstack/range"
  input: "sequential/lstm/transpose"
  input: "sequential/lstm/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm/strided_slice_2"
  op: "StridedSlice"
  input: "sequential/lstm/transpose"
  input: "sequential/lstm/strided_slice_2/stack"
  input: "sequential/lstm/strided_slice_2/stack_1"
  input: "sequential/lstm/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "sequential/lstm/ones_like/Shape"
  op: "Shape"
  input: "sequential/lstm/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm/ones_like"
  op: "Fill"
  input: "sequential/lstm/ones_like/Shape"
  input: "sequential/lstm/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "keras_learning_phase/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "keras_learning_phase"
  op: "PlaceholderWithDefault"
  input: "keras_learning_phase/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "sequential/lstm/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond/switch_t"
  op: "Identity"
  input: "sequential/lstm/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond/switch_f"
  op: "Identity"
  input: "sequential/lstm/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond/dropout/rate"
  op: "Const"
  input: "^sequential/lstm/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3203999996185303
      }
    }
  }
}
node {
  name: "sequential/lstm/cond/dropout/Shape"
  op: "Shape"
  input: "sequential/lstm/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "sequential/lstm/ones_like"
  input: "sequential/lstm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/ones_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^sequential/lstm/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^sequential/lstm/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "sequential/lstm/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7627678
    }
  }
}
node {
  name: "sequential/lstm/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "sequential/lstm/cond/dropout/random_uniform/max"
  input: "sequential/lstm/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "sequential/lstm/cond/dropout/random_uniform/RandomUniform"
  input: "sequential/lstm/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond/dropout/random_uniform"
  op: "Add"
  input: "sequential/lstm/cond/dropout/random_uniform/mul"
  input: "sequential/lstm/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond/dropout/sub/x"
  op: "Const"
  input: "^sequential/lstm/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm/cond/dropout/sub"
  op: "Sub"
  input: "sequential/lstm/cond/dropout/sub/x"
  input: "sequential/lstm/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond/dropout/truediv/x"
  op: "Const"
  input: "^sequential/lstm/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm/cond/dropout/truediv"
  op: "RealDiv"
  input: "sequential/lstm/cond/dropout/truediv/x"
  input: "sequential/lstm/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "sequential/lstm/cond/dropout/random_uniform"
  input: "sequential/lstm/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond/dropout/mul"
  op: "Mul"
  input: "sequential/lstm/cond/dropout/Shape/Switch:1"
  input: "sequential/lstm/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond/dropout/Cast"
  op: "Cast"
  input: "sequential/lstm/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond/dropout/mul_1"
  op: "Mul"
  input: "sequential/lstm/cond/dropout/mul"
  input: "sequential/lstm/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond/Switch_1"
  op: "Switch"
  input: "sequential/lstm/ones_like"
  input: "sequential/lstm/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/ones_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond/Merge"
  op: "Merge"
  input: "sequential/lstm/cond/Switch_1"
  input: "sequential/lstm/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_1/switch_t"
  op: "Identity"
  input: "sequential/lstm/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_1/switch_f"
  op: "Identity"
  input: "sequential/lstm/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_1/dropout/rate"
  op: "Const"
  input: "^sequential/lstm/cond_1/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3203999996185303
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_1/dropout/Shape"
  op: "Shape"
  input: "sequential/lstm/cond_1/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm/cond_1/dropout/Shape/Switch"
  op: "Switch"
  input: "sequential/lstm/ones_like"
  input: "sequential/lstm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/ones_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_1/dropout/random_uniform/min"
  op: "Const"
  input: "^sequential/lstm/cond_1/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_1/dropout/random_uniform/max"
  op: "Const"
  input: "^sequential/lstm/cond_1/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_1/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "sequential/lstm/cond_1/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2450197
    }
  }
}
node {
  name: "sequential/lstm/cond_1/dropout/random_uniform/sub"
  op: "Sub"
  input: "sequential/lstm/cond_1/dropout/random_uniform/max"
  input: "sequential/lstm/cond_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_1/dropout/random_uniform/mul"
  op: "Mul"
  input: "sequential/lstm/cond_1/dropout/random_uniform/RandomUniform"
  input: "sequential/lstm/cond_1/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_1/dropout/random_uniform"
  op: "Add"
  input: "sequential/lstm/cond_1/dropout/random_uniform/mul"
  input: "sequential/lstm/cond_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_1/dropout/sub/x"
  op: "Const"
  input: "^sequential/lstm/cond_1/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_1/dropout/sub"
  op: "Sub"
  input: "sequential/lstm/cond_1/dropout/sub/x"
  input: "sequential/lstm/cond_1/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_1/dropout/truediv/x"
  op: "Const"
  input: "^sequential/lstm/cond_1/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_1/dropout/truediv"
  op: "RealDiv"
  input: "sequential/lstm/cond_1/dropout/truediv/x"
  input: "sequential/lstm/cond_1/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_1/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "sequential/lstm/cond_1/dropout/random_uniform"
  input: "sequential/lstm/cond_1/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_1/dropout/mul"
  op: "Mul"
  input: "sequential/lstm/cond_1/dropout/Shape/Switch:1"
  input: "sequential/lstm/cond_1/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_1/dropout/Cast"
  op: "Cast"
  input: "sequential/lstm/cond_1/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_1/dropout/mul_1"
  op: "Mul"
  input: "sequential/lstm/cond_1/dropout/mul"
  input: "sequential/lstm/cond_1/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_1/Switch_1"
  op: "Switch"
  input: "sequential/lstm/ones_like"
  input: "sequential/lstm/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/ones_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_1/Merge"
  op: "Merge"
  input: "sequential/lstm/cond_1/Switch_1"
  input: "sequential/lstm/cond_1/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_2/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_2/switch_t"
  op: "Identity"
  input: "sequential/lstm/cond_2/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_2/switch_f"
  op: "Identity"
  input: "sequential/lstm/cond_2/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_2/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_2/dropout/rate"
  op: "Const"
  input: "^sequential/lstm/cond_2/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3203999996185303
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_2/dropout/Shape"
  op: "Shape"
  input: "sequential/lstm/cond_2/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm/cond_2/dropout/Shape/Switch"
  op: "Switch"
  input: "sequential/lstm/ones_like"
  input: "sequential/lstm/cond_2/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/ones_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_2/dropout/random_uniform/min"
  op: "Const"
  input: "^sequential/lstm/cond_2/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_2/dropout/random_uniform/max"
  op: "Const"
  input: "^sequential/lstm/cond_2/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_2/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "sequential/lstm/cond_2/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3838369
    }
  }
}
node {
  name: "sequential/lstm/cond_2/dropout/random_uniform/sub"
  op: "Sub"
  input: "sequential/lstm/cond_2/dropout/random_uniform/max"
  input: "sequential/lstm/cond_2/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_2/dropout/random_uniform/mul"
  op: "Mul"
  input: "sequential/lstm/cond_2/dropout/random_uniform/RandomUniform"
  input: "sequential/lstm/cond_2/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_2/dropout/random_uniform"
  op: "Add"
  input: "sequential/lstm/cond_2/dropout/random_uniform/mul"
  input: "sequential/lstm/cond_2/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_2/dropout/sub/x"
  op: "Const"
  input: "^sequential/lstm/cond_2/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_2/dropout/sub"
  op: "Sub"
  input: "sequential/lstm/cond_2/dropout/sub/x"
  input: "sequential/lstm/cond_2/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_2/dropout/truediv/x"
  op: "Const"
  input: "^sequential/lstm/cond_2/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_2/dropout/truediv"
  op: "RealDiv"
  input: "sequential/lstm/cond_2/dropout/truediv/x"
  input: "sequential/lstm/cond_2/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_2/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "sequential/lstm/cond_2/dropout/random_uniform"
  input: "sequential/lstm/cond_2/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_2/dropout/mul"
  op: "Mul"
  input: "sequential/lstm/cond_2/dropout/Shape/Switch:1"
  input: "sequential/lstm/cond_2/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_2/dropout/Cast"
  op: "Cast"
  input: "sequential/lstm/cond_2/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_2/dropout/mul_1"
  op: "Mul"
  input: "sequential/lstm/cond_2/dropout/mul"
  input: "sequential/lstm/cond_2/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_2/Switch_1"
  op: "Switch"
  input: "sequential/lstm/ones_like"
  input: "sequential/lstm/cond_2/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/ones_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_2/Merge"
  op: "Merge"
  input: "sequential/lstm/cond_2/Switch_1"
  input: "sequential/lstm/cond_2/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_3/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_3/switch_t"
  op: "Identity"
  input: "sequential/lstm/cond_3/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_3/switch_f"
  op: "Identity"
  input: "sequential/lstm/cond_3/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_3/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_3/dropout/rate"
  op: "Const"
  input: "^sequential/lstm/cond_3/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3203999996185303
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_3/dropout/Shape"
  op: "Shape"
  input: "sequential/lstm/cond_3/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm/cond_3/dropout/Shape/Switch"
  op: "Switch"
  input: "sequential/lstm/ones_like"
  input: "sequential/lstm/cond_3/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/ones_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_3/dropout/random_uniform/min"
  op: "Const"
  input: "^sequential/lstm/cond_3/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_3/dropout/random_uniform/max"
  op: "Const"
  input: "^sequential/lstm/cond_3/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_3/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "sequential/lstm/cond_3/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3005595
    }
  }
}
node {
  name: "sequential/lstm/cond_3/dropout/random_uniform/sub"
  op: "Sub"
  input: "sequential/lstm/cond_3/dropout/random_uniform/max"
  input: "sequential/lstm/cond_3/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_3/dropout/random_uniform/mul"
  op: "Mul"
  input: "sequential/lstm/cond_3/dropout/random_uniform/RandomUniform"
  input: "sequential/lstm/cond_3/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_3/dropout/random_uniform"
  op: "Add"
  input: "sequential/lstm/cond_3/dropout/random_uniform/mul"
  input: "sequential/lstm/cond_3/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_3/dropout/sub/x"
  op: "Const"
  input: "^sequential/lstm/cond_3/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_3/dropout/sub"
  op: "Sub"
  input: "sequential/lstm/cond_3/dropout/sub/x"
  input: "sequential/lstm/cond_3/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_3/dropout/truediv/x"
  op: "Const"
  input: "^sequential/lstm/cond_3/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_3/dropout/truediv"
  op: "RealDiv"
  input: "sequential/lstm/cond_3/dropout/truediv/x"
  input: "sequential/lstm/cond_3/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_3/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "sequential/lstm/cond_3/dropout/random_uniform"
  input: "sequential/lstm/cond_3/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_3/dropout/mul"
  op: "Mul"
  input: "sequential/lstm/cond_3/dropout/Shape/Switch:1"
  input: "sequential/lstm/cond_3/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_3/dropout/Cast"
  op: "Cast"
  input: "sequential/lstm/cond_3/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_3/dropout/mul_1"
  op: "Mul"
  input: "sequential/lstm/cond_3/dropout/mul"
  input: "sequential/lstm/cond_3/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_3/Switch_1"
  op: "Switch"
  input: "sequential/lstm/ones_like"
  input: "sequential/lstm/cond_3/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/ones_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/cond_3/Merge"
  op: "Merge"
  input: "sequential/lstm/cond_3/Switch_1"
  input: "sequential/lstm/cond_3/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/mul"
  op: "Mul"
  input: "sequential/lstm/strided_slice_2"
  input: "sequential/lstm/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/mul_1"
  op: "Mul"
  input: "sequential/lstm/strided_slice_2"
  input: "sequential/lstm/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/mul_2"
  op: "Mul"
  input: "sequential/lstm/strided_slice_2"
  input: "sequential/lstm/cond_2/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/mul_3"
  op: "Mul"
  input: "sequential/lstm/strided_slice_2"
  input: "sequential/lstm/cond_3/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "sequential/lstm/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm/split/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm/split"
  op: "Split"
  input: "sequential/lstm/split/split_dim"
  input: "sequential/lstm/split/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "sequential/lstm/MatMul"
  op: "MatMul"
  input: "sequential/lstm/mul"
  input: "sequential/lstm/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm/MatMul_1"
  op: "MatMul"
  input: "sequential/lstm/mul_1"
  input: "sequential/lstm/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm/MatMul_2"
  op: "MatMul"
  input: "sequential/lstm/mul_2"
  input: "sequential/lstm/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm/MatMul_3"
  op: "MatMul"
  input: "sequential/lstm/mul_3"
  input: "sequential/lstm/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "sequential/lstm/split_1/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm/split_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm/split_1"
  op: "Split"
  input: "sequential/lstm/split_1/split_dim"
  input: "sequential/lstm/split_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "sequential/lstm/BiasAdd"
  op: "BiasAdd"
  input: "sequential/lstm/MatMul"
  input: "sequential/lstm/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/lstm/BiasAdd_1"
  op: "BiasAdd"
  input: "sequential/lstm/MatMul_1"
  input: "sequential/lstm/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/lstm/BiasAdd_2"
  op: "BiasAdd"
  input: "sequential/lstm/MatMul_2"
  input: "sequential/lstm/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/lstm/BiasAdd_3"
  op: "BiasAdd"
  input: "sequential/lstm/MatMul_3"
  input: "sequential/lstm/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/lstm/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\203\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm/strided_slice_3"
  op: "StridedSlice"
  input: "sequential/lstm/ReadVariableOp"
  input: "sequential/lstm/strided_slice_3/stack"
  input: "sequential/lstm/strided_slice_3/stack_1"
  input: "sequential/lstm/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm/MatMul_4"
  op: "MatMul"
  input: "sequential/lstm/zeros"
  input: "sequential/lstm/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm/add"
  op: "AddV2"
  input: "sequential/lstm/BiasAdd"
  input: "sequential/lstm/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "sequential/lstm/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "sequential/lstm/Mul_4"
  op: "Mul"
  input: "sequential/lstm/add"
  input: "sequential/lstm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/Add_1"
  op: "Add"
  input: "sequential/lstm/Mul_4"
  input: "sequential/lstm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/clip_by_value/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm/clip_by_value/Minimum"
  op: "Minimum"
  input: "sequential/lstm/Add_1"
  input: "sequential/lstm/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/clip_by_value/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm/clip_by_value"
  op: "Maximum"
  input: "sequential/lstm/clip_by_value/Minimum"
  input: "sequential/lstm/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "sequential/lstm/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\203\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\006\001\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm/strided_slice_4"
  op: "StridedSlice"
  input: "sequential/lstm/ReadVariableOp_1"
  input: "sequential/lstm/strided_slice_4/stack"
  input: "sequential/lstm/strided_slice_4/stack_1"
  input: "sequential/lstm/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm/MatMul_5"
  op: "MatMul"
  input: "sequential/lstm/zeros"
  input: "sequential/lstm/strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm/add_2"
  op: "AddV2"
  input: "sequential/lstm/BiasAdd_1"
  input: "sequential/lstm/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "sequential/lstm/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "sequential/lstm/Mul_5"
  op: "Mul"
  input: "sequential/lstm/add_2"
  input: "sequential/lstm/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/Add_3"
  op: "Add"
  input: "sequential/lstm/Mul_5"
  input: "sequential/lstm/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/clip_by_value_1/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "sequential/lstm/Add_3"
  input: "sequential/lstm/clip_by_value_1/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/clip_by_value_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm/clip_by_value_1"
  op: "Maximum"
  input: "sequential/lstm/clip_by_value_1/Minimum"
  input: "sequential/lstm/clip_by_value_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/mul_6"
  op: "Mul"
  input: "sequential/lstm/clip_by_value_1"
  input: "sequential/lstm/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "sequential/lstm/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\006\001\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\211\001\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm/strided_slice_5"
  op: "StridedSlice"
  input: "sequential/lstm/ReadVariableOp_2"
  input: "sequential/lstm/strided_slice_5/stack"
  input: "sequential/lstm/strided_slice_5/stack_1"
  input: "sequential/lstm/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm/MatMul_6"
  op: "MatMul"
  input: "sequential/lstm/zeros"
  input: "sequential/lstm/strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm/add_4"
  op: "AddV2"
  input: "sequential/lstm/BiasAdd_2"
  input: "sequential/lstm/MatMul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/Tanh"
  op: "Tanh"
  input: "sequential/lstm/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/mul_7"
  op: "Mul"
  input: "sequential/lstm/clip_by_value"
  input: "sequential/lstm/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/add_5"
  op: "AddV2"
  input: "sequential/lstm/mul_6"
  input: "sequential/lstm/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "sequential/lstm/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\211\001\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm/strided_slice_6"
  op: "StridedSlice"
  input: "sequential/lstm/ReadVariableOp_3"
  input: "sequential/lstm/strided_slice_6/stack"
  input: "sequential/lstm/strided_slice_6/stack_1"
  input: "sequential/lstm/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm/MatMul_7"
  op: "MatMul"
  input: "sequential/lstm/zeros"
  input: "sequential/lstm/strided_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm/add_6"
  op: "AddV2"
  input: "sequential/lstm/BiasAdd_3"
  input: "sequential/lstm/MatMul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "sequential/lstm/Const_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "sequential/lstm/Mul_8"
  op: "Mul"
  input: "sequential/lstm/add_6"
  input: "sequential/lstm/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/Add_7"
  op: "Add"
  input: "sequential/lstm/Mul_8"
  input: "sequential/lstm/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/clip_by_value_2/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm/clip_by_value_2/Minimum"
  op: "Minimum"
  input: "sequential/lstm/Add_7"
  input: "sequential/lstm/clip_by_value_2/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/clip_by_value_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm/clip_by_value_2"
  op: "Maximum"
  input: "sequential/lstm/clip_by_value_2/Minimum"
  input: "sequential/lstm/clip_by_value_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/Tanh_1"
  op: "Tanh"
  input: "sequential/lstm/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/mul_9"
  op: "Mul"
  input: "sequential/lstm/clip_by_value_2"
  input: "sequential/lstm/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/TensorArray_1"
  op: "TensorArrayV3"
  input: "sequential/lstm/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 131
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "output_ta_0"
    }
  }
}
node {
  name: "sequential/lstm/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm/while/Enter"
  op: "Enter"
  input: "sequential/lstm/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm/while/Enter_1"
  op: "Enter"
  input: "sequential/lstm/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm/while/Enter_2"
  op: "Enter"
  input: "sequential/lstm/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm/while/Enter_3"
  op: "Enter"
  input: "sequential/lstm/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm/while/Merge"
  op: "Merge"
  input: "sequential/lstm/while/Enter"
  input: "sequential/lstm/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/Merge_1"
  op: "Merge"
  input: "sequential/lstm/while/Enter_1"
  input: "sequential/lstm/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/Merge_2"
  op: "Merge"
  input: "sequential/lstm/while/Enter_2"
  input: "sequential/lstm/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/Merge_3"
  op: "Merge"
  input: "sequential/lstm/while/Enter_3"
  input: "sequential/lstm/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/Less"
  op: "Less"
  input: "sequential/lstm/while/Merge"
  input: "sequential/lstm/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/Less/Enter"
  op: "Enter"
  input: "sequential/lstm/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm/while/LoopCond"
  op: "LoopCond"
  input: "sequential/lstm/while/Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/Switch"
  op: "Switch"
  input: "sequential/lstm/while/Merge"
  input: "sequential/lstm/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/Switch_1"
  op: "Switch"
  input: "sequential/lstm/while/Merge_1"
  input: "sequential/lstm/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/Switch_2"
  op: "Switch"
  input: "sequential/lstm/while/Merge_2"
  input: "sequential/lstm/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/Switch_3"
  op: "Switch"
  input: "sequential/lstm/while/Merge_3"
  input: "sequential/lstm/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/Identity"
  op: "Identity"
  input: "sequential/lstm/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/Identity_1"
  op: "Identity"
  input: "sequential/lstm/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/Identity_2"
  op: "Identity"
  input: "sequential/lstm/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/Identity_3"
  op: "Identity"
  input: "sequential/lstm/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "sequential/lstm/while/TensorArrayReadV3/Enter"
  input: "sequential/lstm/while/Identity"
  input: "sequential/lstm/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "sequential/lstm/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "sequential/lstm/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm/while/mul"
  op: "Mul"
  input: "sequential/lstm/while/TensorArrayReadV3"
  input: "sequential/lstm/while/mul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/mul/Enter"
  op: "Enter"
  input: "sequential/lstm/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm/while/mul_1"
  op: "Mul"
  input: "sequential/lstm/while/TensorArrayReadV3"
  input: "sequential/lstm/while/mul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/mul_1/Enter"
  op: "Enter"
  input: "sequential/lstm/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm/while/mul_2"
  op: "Mul"
  input: "sequential/lstm/while/TensorArrayReadV3"
  input: "sequential/lstm/while/mul_2/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/mul_2/Enter"
  op: "Enter"
  input: "sequential/lstm/cond_2/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm/while/mul_3"
  op: "Mul"
  input: "sequential/lstm/while/TensorArrayReadV3"
  input: "sequential/lstm/while/mul_3/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/mul_3/Enter"
  op: "Enter"
  input: "sequential/lstm/cond_3/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm/while/Const"
  op: "Const"
  input: "^sequential/lstm/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "sequential/lstm/while/split/split_dim"
  op: "Const"
  input: "^sequential/lstm/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm/while/split/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm/while/split/ReadVariableOp/Enter"
  input: "^sequential/lstm/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm/while/split/ReadVariableOp/Enter"
  op: "Enter"
  input: "sequential/lstm/kernel"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm/while/split"
  op: "Split"
  input: "sequential/lstm/while/split/split_dim"
  input: "sequential/lstm/while/split/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "sequential/lstm/while/MatMul"
  op: "MatMul"
  input: "sequential/lstm/while/mul"
  input: "sequential/lstm/while/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm/while/MatMul_1"
  op: "MatMul"
  input: "sequential/lstm/while/mul_1"
  input: "sequential/lstm/while/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm/while/MatMul_2"
  op: "MatMul"
  input: "sequential/lstm/while/mul_2"
  input: "sequential/lstm/while/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm/while/MatMul_3"
  op: "MatMul"
  input: "sequential/lstm/while/mul_3"
  input: "sequential/lstm/while/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm/while/Const_1"
  op: "Const"
  input: "^sequential/lstm/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "sequential/lstm/while/split_1/split_dim"
  op: "Const"
  input: "^sequential/lstm/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm/while/split_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm/while/split_1/ReadVariableOp/Enter"
  input: "^sequential/lstm/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm/while/split_1/ReadVariableOp/Enter"
  op: "Enter"
  input: "sequential/lstm/bias"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm/while/split_1"
  op: "Split"
  input: "sequential/lstm/while/split_1/split_dim"
  input: "sequential/lstm/while/split_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "sequential/lstm/while/BiasAdd"
  op: "BiasAdd"
  input: "sequential/lstm/while/MatMul"
  input: "sequential/lstm/while/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/lstm/while/BiasAdd_1"
  op: "BiasAdd"
  input: "sequential/lstm/while/MatMul_1"
  input: "sequential/lstm/while/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/lstm/while/BiasAdd_2"
  op: "BiasAdd"
  input: "sequential/lstm/while/MatMul_2"
  input: "sequential/lstm/while/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/lstm/while/BiasAdd_3"
  op: "BiasAdd"
  input: "sequential/lstm/while/MatMul_3"
  input: "sequential/lstm/while/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/lstm/while/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm/while/ReadVariableOp/Enter"
  input: "^sequential/lstm/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm/while/ReadVariableOp/Enter"
  op: "Enter"
  input: "sequential/lstm/recurrent_kernel"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm/while/strided_slice/stack"
  op: "Const"
  input: "^sequential/lstm/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm/while/strided_slice/stack_1"
  op: "Const"
  input: "^sequential/lstm/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\203\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm/while/strided_slice/stack_2"
  op: "Const"
  input: "^sequential/lstm/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm/while/strided_slice"
  op: "StridedSlice"
  input: "sequential/lstm/while/ReadVariableOp"
  input: "sequential/lstm/while/strided_slice/stack"
  input: "sequential/lstm/while/strided_slice/stack_1"
  input: "sequential/lstm/while/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm/while/MatMul_4"
  op: "MatMul"
  input: "sequential/lstm/while/Identity_2"
  input: "sequential/lstm/while/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm/while/add"
  op: "AddV2"
  input: "sequential/lstm/while/BiasAdd"
  input: "sequential/lstm/while/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/Const_2"
  op: "Const"
  input: "^sequential/lstm/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "sequential/lstm/while/Const_3"
  op: "Const"
  input: "^sequential/lstm/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "sequential/lstm/while/Mul_4"
  op: "Mul"
  input: "sequential/lstm/while/add"
  input: "sequential/lstm/while/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/Add_1"
  op: "Add"
  input: "sequential/lstm/while/Mul_4"
  input: "sequential/lstm/while/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/clip_by_value/Minimum/y"
  op: "Const"
  input: "^sequential/lstm/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm/while/clip_by_value/Minimum"
  op: "Minimum"
  input: "sequential/lstm/while/Add_1"
  input: "sequential/lstm/while/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/clip_by_value/y"
  op: "Const"
  input: "^sequential/lstm/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm/while/clip_by_value"
  op: "Maximum"
  input: "sequential/lstm/while/clip_by_value/Minimum"
  input: "sequential/lstm/while/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "sequential/lstm/while/ReadVariableOp/Enter"
  input: "^sequential/lstm/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm/while/strided_slice_1/stack"
  op: "Const"
  input: "^sequential/lstm/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\203\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm/while/strided_slice_1/stack_1"
  op: "Const"
  input: "^sequential/lstm/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\006\001\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm/while/strided_slice_1/stack_2"
  op: "Const"
  input: "^sequential/lstm/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm/while/strided_slice_1"
  op: "StridedSlice"
  input: "sequential/lstm/while/ReadVariableOp_1"
  input: "sequential/lstm/while/strided_slice_1/stack"
  input: "sequential/lstm/while/strided_slice_1/stack_1"
  input: "sequential/lstm/while/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm/while/MatMul_5"
  op: "MatMul"
  input: "sequential/lstm/while/Identity_2"
  input: "sequential/lstm/while/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm/while/add_2"
  op: "AddV2"
  input: "sequential/lstm/while/BiasAdd_1"
  input: "sequential/lstm/while/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/Const_4"
  op: "Const"
  input: "^sequential/lstm/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "sequential/lstm/while/Const_5"
  op: "Const"
  input: "^sequential/lstm/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "sequential/lstm/while/Mul_5"
  op: "Mul"
  input: "sequential/lstm/while/add_2"
  input: "sequential/lstm/while/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/Add_3"
  op: "Add"
  input: "sequential/lstm/while/Mul_5"
  input: "sequential/lstm/while/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/clip_by_value_1/Minimum/y"
  op: "Const"
  input: "^sequential/lstm/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm/while/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "sequential/lstm/while/Add_3"
  input: "sequential/lstm/while/clip_by_value_1/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/clip_by_value_1/y"
  op: "Const"
  input: "^sequential/lstm/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm/while/clip_by_value_1"
  op: "Maximum"
  input: "sequential/lstm/while/clip_by_value_1/Minimum"
  input: "sequential/lstm/while/clip_by_value_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/mul_6"
  op: "Mul"
  input: "sequential/lstm/while/clip_by_value_1"
  input: "sequential/lstm/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "sequential/lstm/while/ReadVariableOp/Enter"
  input: "^sequential/lstm/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm/while/strided_slice_2/stack"
  op: "Const"
  input: "^sequential/lstm/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\006\001\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm/while/strided_slice_2/stack_1"
  op: "Const"
  input: "^sequential/lstm/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\211\001\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm/while/strided_slice_2/stack_2"
  op: "Const"
  input: "^sequential/lstm/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm/while/strided_slice_2"
  op: "StridedSlice"
  input: "sequential/lstm/while/ReadVariableOp_2"
  input: "sequential/lstm/while/strided_slice_2/stack"
  input: "sequential/lstm/while/strided_slice_2/stack_1"
  input: "sequential/lstm/while/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm/while/MatMul_6"
  op: "MatMul"
  input: "sequential/lstm/while/Identity_2"
  input: "sequential/lstm/while/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm/while/add_4"
  op: "AddV2"
  input: "sequential/lstm/while/BiasAdd_2"
  input: "sequential/lstm/while/MatMul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/Tanh"
  op: "Tanh"
  input: "sequential/lstm/while/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/mul_7"
  op: "Mul"
  input: "sequential/lstm/while/clip_by_value"
  input: "sequential/lstm/while/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/add_5"
  op: "AddV2"
  input: "sequential/lstm/while/mul_6"
  input: "sequential/lstm/while/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "sequential/lstm/while/ReadVariableOp/Enter"
  input: "^sequential/lstm/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm/while/strided_slice_3/stack"
  op: "Const"
  input: "^sequential/lstm/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\211\001\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm/while/strided_slice_3/stack_1"
  op: "Const"
  input: "^sequential/lstm/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm/while/strided_slice_3/stack_2"
  op: "Const"
  input: "^sequential/lstm/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm/while/strided_slice_3"
  op: "StridedSlice"
  input: "sequential/lstm/while/ReadVariableOp_3"
  input: "sequential/lstm/while/strided_slice_3/stack"
  input: "sequential/lstm/while/strided_slice_3/stack_1"
  input: "sequential/lstm/while/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm/while/MatMul_7"
  op: "MatMul"
  input: "sequential/lstm/while/Identity_2"
  input: "sequential/lstm/while/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm/while/add_6"
  op: "AddV2"
  input: "sequential/lstm/while/BiasAdd_3"
  input: "sequential/lstm/while/MatMul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/Const_6"
  op: "Const"
  input: "^sequential/lstm/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "sequential/lstm/while/Const_7"
  op: "Const"
  input: "^sequential/lstm/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "sequential/lstm/while/Mul_8"
  op: "Mul"
  input: "sequential/lstm/while/add_6"
  input: "sequential/lstm/while/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/Add_7"
  op: "Add"
  input: "sequential/lstm/while/Mul_8"
  input: "sequential/lstm/while/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/clip_by_value_2/Minimum/y"
  op: "Const"
  input: "^sequential/lstm/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm/while/clip_by_value_2/Minimum"
  op: "Minimum"
  input: "sequential/lstm/while/Add_7"
  input: "sequential/lstm/while/clip_by_value_2/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/clip_by_value_2/y"
  op: "Const"
  input: "^sequential/lstm/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm/while/clip_by_value_2"
  op: "Maximum"
  input: "sequential/lstm/while/clip_by_value_2/Minimum"
  input: "sequential/lstm/while/clip_by_value_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/Tanh_1"
  op: "Tanh"
  input: "sequential/lstm/while/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/mul_9"
  op: "Mul"
  input: "sequential/lstm/while/clip_by_value_2"
  input: "sequential/lstm/while/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "sequential/lstm/while/Identity"
  input: "sequential/lstm/while/mul_9"
  input: "sequential/lstm/while/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/mul_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "sequential/lstm/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/mul_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm/while/add_8/y"
  op: "Const"
  input: "^sequential/lstm/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm/while/add_8"
  op: "AddV2"
  input: "sequential/lstm/while/Identity"
  input: "sequential/lstm/while/add_8/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/NextIteration"
  op: "NextIteration"
  input: "sequential/lstm/while/add_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/NextIteration_1"
  op: "NextIteration"
  input: "sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/NextIteration_2"
  op: "NextIteration"
  input: "sequential/lstm/while/mul_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/NextIteration_3"
  op: "NextIteration"
  input: "sequential/lstm/while/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/Exit"
  op: "Exit"
  input: "sequential/lstm/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/Exit_1"
  op: "Exit"
  input: "sequential/lstm/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/Exit_2"
  op: "Exit"
  input: "sequential/lstm/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/while/Exit_3"
  op: "Exit"
  input: "sequential/lstm/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "sequential/lstm/TensorArray_1"
  input: "sequential/lstm/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm/TensorArrayStack/range"
  op: "Range"
  input: "sequential/lstm/TensorArrayStack/range/start"
  input: "sequential/lstm/TensorArrayStack/TensorArraySizeV3"
  input: "sequential/lstm/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "sequential/lstm/TensorArray_1"
  input: "sequential/lstm/TensorArrayStack/range"
  input: "sequential/lstm/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 131
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/strided_slice_7/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "sequential/lstm/strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm/strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm/strided_slice_7"
  op: "StridedSlice"
  input: "sequential/lstm/TensorArrayStack/TensorArrayGatherV3"
  input: "sequential/lstm/strided_slice_7/stack"
  input: "sequential/lstm/strided_slice_7/stack_1"
  input: "sequential/lstm/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "sequential/lstm/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm/transpose_1"
  op: "Transpose"
  input: "sequential/lstm/TensorArrayStack/TensorArrayGatherV3"
  input: "sequential/lstm/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_1/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09570948779582977
      }
    }
  }
}
node {
  name: "sequential/lstm_1/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09570948779582977
      }
    }
  }
}
node {
  name: "sequential/lstm_1/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "sequential/lstm_1/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm_1/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "sequential/lstm_1/kernel/Initializer/random_uniform/max"
  input: "sequential/lstm_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "sequential/lstm_1/kernel/Initializer/random_uniform/RandomUniform"
  input: "sequential/lstm_1/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/kernel/Initializer/random_uniform"
  op: "Add"
  input: "sequential/lstm_1/kernel/Initializer/random_uniform/mul"
  input: "sequential/lstm_1/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 131
        }
        dim {
          size: 524
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/lstm_1/kernel"
    }
  }
}
node {
  name: "sequential/lstm_1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/kernel/Assign"
  op: "AssignVariableOp"
  input: "sequential/lstm_1/kernel"
  input: "sequential/lstm_1/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_1/recurrent_kernel/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\002\000\000\203\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_1/recurrent_kernel/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/recurrent_kernel/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/recurrent_kernel/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "sequential/lstm_1/recurrent_kernel/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm_1/recurrent_kernel/Initializer/random_normal/mul"
  op: "Mul"
  input: "sequential/lstm_1/recurrent_kernel/Initializer/random_normal/RandomStandardNormal"
  input: "sequential/lstm_1/recurrent_kernel/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/recurrent_kernel/Initializer/random_normal"
  op: "Add"
  input: "sequential/lstm_1/recurrent_kernel/Initializer/random_normal/mul"
  input: "sequential/lstm_1/recurrent_kernel/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/recurrent_kernel/Initializer/Qr"
  op: "Qr"
  input: "sequential/lstm_1/recurrent_kernel/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_1/recurrent_kernel/Initializer/DiagPart"
  op: "DiagPart"
  input: "sequential/lstm_1/recurrent_kernel/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/recurrent_kernel/Initializer/Sign"
  op: "Sign"
  input: "sequential/lstm_1/recurrent_kernel/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/recurrent_kernel/Initializer/mul"
  op: "Mul"
  input: "sequential/lstm_1/recurrent_kernel/Initializer/Qr"
  input: "sequential/lstm_1/recurrent_kernel/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/recurrent_kernel/Initializer/matrix_transpose/transpose/perm"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_1/recurrent_kernel/Initializer/matrix_transpose/transpose"
  op: "Transpose"
  input: "sequential/lstm_1/recurrent_kernel/Initializer/mul"
  input: "sequential/lstm_1/recurrent_kernel/Initializer/matrix_transpose/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/recurrent_kernel/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_1/recurrent_kernel/Initializer/Reshape"
  op: "Reshape"
  input: "sequential/lstm_1/recurrent_kernel/Initializer/matrix_transpose/transpose"
  input: "sequential/lstm_1/recurrent_kernel/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/recurrent_kernel/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/recurrent_kernel/Initializer/mul_1"
  op: "Mul"
  input: "sequential/lstm_1/recurrent_kernel/Initializer/mul_1/x"
  input: "sequential/lstm_1/recurrent_kernel/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/recurrent_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 131
        }
        dim {
          size: 524
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/lstm_1/recurrent_kernel"
    }
  }
}
node {
  name: "sequential/lstm_1/recurrent_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_1/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/recurrent_kernel/Assign"
  op: "AssignVariableOp"
  input: "sequential/lstm_1/recurrent_kernel"
  input: "sequential/lstm_1/recurrent_kernel/Initializer/mul_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_1/recurrent_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_1/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 131
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/bias/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 131
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/bias/Initializer/zeros_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 262
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 262
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/bias/Initializer/concat/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/bias/Initializer/concat"
  op: "ConcatV2"
  input: "sequential/lstm_1/bias/Initializer/zeros"
  input: "sequential/lstm_1/bias/Initializer/ones"
  input: "sequential/lstm_1/bias/Initializer/zeros_1"
  input: "sequential/lstm_1/bias/Initializer/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 524
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/lstm_1/bias"
    }
  }
}
node {
  name: "sequential/lstm_1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/bias/Assign"
  op: "AssignVariableOp"
  input: "sequential/lstm_1/bias"
  input: "sequential/lstm_1/bias/Initializer/concat"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_1/Shape"
  op: "Shape"
  input: "sequential/lstm/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_1/strided_slice"
  op: "StridedSlice"
  input: "sequential/lstm_1/Shape"
  input: "sequential/lstm_1/strided_slice/stack"
  input: "sequential/lstm_1/strided_slice/stack_1"
  input: "sequential/lstm_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "sequential/lstm_1/zeros/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 131
      }
    }
  }
}
node {
  name: "sequential/lstm_1/zeros/mul"
  op: "Mul"
  input: "sequential/lstm_1/strided_slice"
  input: "sequential/lstm_1/zeros/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/zeros/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "sequential/lstm_1/zeros/Less"
  op: "Less"
  input: "sequential/lstm_1/zeros/mul"
  input: "sequential/lstm_1/zeros/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/zeros/packed/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 131
      }
    }
  }
}
node {
  name: "sequential/lstm_1/zeros/packed"
  op: "Pack"
  input: "sequential/lstm_1/strided_slice"
  input: "sequential/lstm_1/zeros/packed/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm_1/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/zeros"
  op: "Fill"
  input: "sequential/lstm_1/zeros/packed"
  input: "sequential/lstm_1/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_1/zeros_1/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 131
      }
    }
  }
}
node {
  name: "sequential/lstm_1/zeros_1/mul"
  op: "Mul"
  input: "sequential/lstm_1/strided_slice"
  input: "sequential/lstm_1/zeros_1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/zeros_1/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "sequential/lstm_1/zeros_1/Less"
  op: "Less"
  input: "sequential/lstm_1/zeros_1/mul"
  input: "sequential/lstm_1/zeros_1/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/zeros_1/packed/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 131
      }
    }
  }
}
node {
  name: "sequential/lstm_1/zeros_1/packed"
  op: "Pack"
  input: "sequential/lstm_1/strided_slice"
  input: "sequential/lstm_1/zeros_1/packed/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm_1/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/zeros_1"
  op: "Fill"
  input: "sequential/lstm_1/zeros_1/packed"
  input: "sequential/lstm_1/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_1/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_1/transpose"
  op: "Transpose"
  input: "sequential/lstm/transpose_1"
  input: "sequential/lstm_1/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/Shape_1"
  op: "Shape"
  input: "sequential/lstm_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_1/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_1/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_1/strided_slice_1"
  op: "StridedSlice"
  input: "sequential/lstm_1/Shape_1"
  input: "sequential/lstm_1/strided_slice_1/stack"
  input: "sequential/lstm_1/strided_slice_1/stack_1"
  input: "sequential/lstm_1/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "sequential/lstm_1/TensorArray"
  op: "TensorArrayV3"
  input: "sequential/lstm_1/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "input_ta_0"
    }
  }
}
node {
  name: "sequential/lstm_1/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "sequential/lstm_1/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_1/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_1/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_1/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "sequential/lstm_1/TensorArrayUnstack/Shape"
  input: "sequential/lstm_1/TensorArrayUnstack/strided_slice/stack"
  input: "sequential/lstm_1/TensorArrayUnstack/strided_slice/stack_1"
  input: "sequential/lstm_1/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "sequential/lstm_1/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_1/TensorArrayUnstack/range"
  op: "Range"
  input: "sequential/lstm_1/TensorArrayUnstack/range/start"
  input: "sequential/lstm_1/TensorArrayUnstack/strided_slice"
  input: "sequential/lstm_1/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "sequential/lstm_1/TensorArray"
  input: "sequential/lstm_1/TensorArrayUnstack/range"
  input: "sequential/lstm_1/transpose"
  input: "sequential/lstm_1/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_1/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_1/strided_slice_2"
  op: "StridedSlice"
  input: "sequential/lstm_1/transpose"
  input: "sequential/lstm_1/strided_slice_2/stack"
  input: "sequential/lstm_1/strided_slice_2/stack_1"
  input: "sequential/lstm_1/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "sequential/lstm_1/ones_like/Shape"
  op: "Shape"
  input: "sequential/lstm_1/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_1/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/ones_like"
  op: "Fill"
  input: "sequential/lstm_1/ones_like/Shape"
  input: "sequential/lstm_1/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_1/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond/switch_t"
  op: "Identity"
  input: "sequential/lstm_1/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond/switch_f"
  op: "Identity"
  input: "sequential/lstm_1/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond/dropout/rate"
  op: "Const"
  input: "^sequential/lstm_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3203999996185303
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond/dropout/Shape"
  op: "Shape"
  input: "sequential/lstm_1/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_1/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "sequential/lstm_1/ones_like"
  input: "sequential/lstm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/ones_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^sequential/lstm_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^sequential/lstm_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "sequential/lstm_1/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 707359
    }
  }
}
node {
  name: "sequential/lstm_1/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "sequential/lstm_1/cond/dropout/random_uniform/max"
  input: "sequential/lstm_1/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "sequential/lstm_1/cond/dropout/random_uniform/RandomUniform"
  input: "sequential/lstm_1/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond/dropout/random_uniform"
  op: "Add"
  input: "sequential/lstm_1/cond/dropout/random_uniform/mul"
  input: "sequential/lstm_1/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond/dropout/sub/x"
  op: "Const"
  input: "^sequential/lstm_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond/dropout/sub"
  op: "Sub"
  input: "sequential/lstm_1/cond/dropout/sub/x"
  input: "sequential/lstm_1/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond/dropout/truediv/x"
  op: "Const"
  input: "^sequential/lstm_1/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond/dropout/truediv"
  op: "RealDiv"
  input: "sequential/lstm_1/cond/dropout/truediv/x"
  input: "sequential/lstm_1/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "sequential/lstm_1/cond/dropout/random_uniform"
  input: "sequential/lstm_1/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond/dropout/mul"
  op: "Mul"
  input: "sequential/lstm_1/cond/dropout/Shape/Switch:1"
  input: "sequential/lstm_1/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond/dropout/Cast"
  op: "Cast"
  input: "sequential/lstm_1/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond/dropout/mul_1"
  op: "Mul"
  input: "sequential/lstm_1/cond/dropout/mul"
  input: "sequential/lstm_1/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond/Switch_1"
  op: "Switch"
  input: "sequential/lstm_1/ones_like"
  input: "sequential/lstm_1/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/ones_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond/Merge"
  op: "Merge"
  input: "sequential/lstm_1/cond/Switch_1"
  input: "sequential/lstm_1/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_1/switch_t"
  op: "Identity"
  input: "sequential/lstm_1/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_1/switch_f"
  op: "Identity"
  input: "sequential/lstm_1/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_1/dropout/rate"
  op: "Const"
  input: "^sequential/lstm_1/cond_1/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3203999996185303
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_1/dropout/Shape"
  op: "Shape"
  input: "sequential/lstm_1/cond_1/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_1/cond_1/dropout/Shape/Switch"
  op: "Switch"
  input: "sequential/lstm_1/ones_like"
  input: "sequential/lstm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/ones_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_1/dropout/random_uniform/min"
  op: "Const"
  input: "^sequential/lstm_1/cond_1/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_1/dropout/random_uniform/max"
  op: "Const"
  input: "^sequential/lstm_1/cond_1/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_1/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "sequential/lstm_1/cond_1/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7175809
    }
  }
}
node {
  name: "sequential/lstm_1/cond_1/dropout/random_uniform/sub"
  op: "Sub"
  input: "sequential/lstm_1/cond_1/dropout/random_uniform/max"
  input: "sequential/lstm_1/cond_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_1/dropout/random_uniform/mul"
  op: "Mul"
  input: "sequential/lstm_1/cond_1/dropout/random_uniform/RandomUniform"
  input: "sequential/lstm_1/cond_1/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_1/dropout/random_uniform"
  op: "Add"
  input: "sequential/lstm_1/cond_1/dropout/random_uniform/mul"
  input: "sequential/lstm_1/cond_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_1/dropout/sub/x"
  op: "Const"
  input: "^sequential/lstm_1/cond_1/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_1/dropout/sub"
  op: "Sub"
  input: "sequential/lstm_1/cond_1/dropout/sub/x"
  input: "sequential/lstm_1/cond_1/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_1/dropout/truediv/x"
  op: "Const"
  input: "^sequential/lstm_1/cond_1/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_1/dropout/truediv"
  op: "RealDiv"
  input: "sequential/lstm_1/cond_1/dropout/truediv/x"
  input: "sequential/lstm_1/cond_1/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_1/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "sequential/lstm_1/cond_1/dropout/random_uniform"
  input: "sequential/lstm_1/cond_1/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_1/dropout/mul"
  op: "Mul"
  input: "sequential/lstm_1/cond_1/dropout/Shape/Switch:1"
  input: "sequential/lstm_1/cond_1/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_1/dropout/Cast"
  op: "Cast"
  input: "sequential/lstm_1/cond_1/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_1/dropout/mul_1"
  op: "Mul"
  input: "sequential/lstm_1/cond_1/dropout/mul"
  input: "sequential/lstm_1/cond_1/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_1/Switch_1"
  op: "Switch"
  input: "sequential/lstm_1/ones_like"
  input: "sequential/lstm_1/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/ones_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_1/Merge"
  op: "Merge"
  input: "sequential/lstm_1/cond_1/Switch_1"
  input: "sequential/lstm_1/cond_1/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_2/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_2/switch_t"
  op: "Identity"
  input: "sequential/lstm_1/cond_2/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_2/switch_f"
  op: "Identity"
  input: "sequential/lstm_1/cond_2/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_2/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_2/dropout/rate"
  op: "Const"
  input: "^sequential/lstm_1/cond_2/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3203999996185303
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_2/dropout/Shape"
  op: "Shape"
  input: "sequential/lstm_1/cond_2/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_1/cond_2/dropout/Shape/Switch"
  op: "Switch"
  input: "sequential/lstm_1/ones_like"
  input: "sequential/lstm_1/cond_2/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/ones_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_2/dropout/random_uniform/min"
  op: "Const"
  input: "^sequential/lstm_1/cond_2/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_2/dropout/random_uniform/max"
  op: "Const"
  input: "^sequential/lstm_1/cond_2/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_2/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "sequential/lstm_1/cond_2/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1755850
    }
  }
}
node {
  name: "sequential/lstm_1/cond_2/dropout/random_uniform/sub"
  op: "Sub"
  input: "sequential/lstm_1/cond_2/dropout/random_uniform/max"
  input: "sequential/lstm_1/cond_2/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_2/dropout/random_uniform/mul"
  op: "Mul"
  input: "sequential/lstm_1/cond_2/dropout/random_uniform/RandomUniform"
  input: "sequential/lstm_1/cond_2/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_2/dropout/random_uniform"
  op: "Add"
  input: "sequential/lstm_1/cond_2/dropout/random_uniform/mul"
  input: "sequential/lstm_1/cond_2/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_2/dropout/sub/x"
  op: "Const"
  input: "^sequential/lstm_1/cond_2/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_2/dropout/sub"
  op: "Sub"
  input: "sequential/lstm_1/cond_2/dropout/sub/x"
  input: "sequential/lstm_1/cond_2/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_2/dropout/truediv/x"
  op: "Const"
  input: "^sequential/lstm_1/cond_2/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_2/dropout/truediv"
  op: "RealDiv"
  input: "sequential/lstm_1/cond_2/dropout/truediv/x"
  input: "sequential/lstm_1/cond_2/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_2/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "sequential/lstm_1/cond_2/dropout/random_uniform"
  input: "sequential/lstm_1/cond_2/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_2/dropout/mul"
  op: "Mul"
  input: "sequential/lstm_1/cond_2/dropout/Shape/Switch:1"
  input: "sequential/lstm_1/cond_2/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_2/dropout/Cast"
  op: "Cast"
  input: "sequential/lstm_1/cond_2/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_2/dropout/mul_1"
  op: "Mul"
  input: "sequential/lstm_1/cond_2/dropout/mul"
  input: "sequential/lstm_1/cond_2/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_2/Switch_1"
  op: "Switch"
  input: "sequential/lstm_1/ones_like"
  input: "sequential/lstm_1/cond_2/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/ones_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_2/Merge"
  op: "Merge"
  input: "sequential/lstm_1/cond_2/Switch_1"
  input: "sequential/lstm_1/cond_2/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_3/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_3/switch_t"
  op: "Identity"
  input: "sequential/lstm_1/cond_3/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_3/switch_f"
  op: "Identity"
  input: "sequential/lstm_1/cond_3/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_3/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_3/dropout/rate"
  op: "Const"
  input: "^sequential/lstm_1/cond_3/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3203999996185303
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_3/dropout/Shape"
  op: "Shape"
  input: "sequential/lstm_1/cond_3/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_1/cond_3/dropout/Shape/Switch"
  op: "Switch"
  input: "sequential/lstm_1/ones_like"
  input: "sequential/lstm_1/cond_3/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/ones_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_3/dropout/random_uniform/min"
  op: "Const"
  input: "^sequential/lstm_1/cond_3/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_3/dropout/random_uniform/max"
  op: "Const"
  input: "^sequential/lstm_1/cond_3/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_3/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "sequential/lstm_1/cond_3/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3872932
    }
  }
}
node {
  name: "sequential/lstm_1/cond_3/dropout/random_uniform/sub"
  op: "Sub"
  input: "sequential/lstm_1/cond_3/dropout/random_uniform/max"
  input: "sequential/lstm_1/cond_3/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_3/dropout/random_uniform/mul"
  op: "Mul"
  input: "sequential/lstm_1/cond_3/dropout/random_uniform/RandomUniform"
  input: "sequential/lstm_1/cond_3/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_3/dropout/random_uniform"
  op: "Add"
  input: "sequential/lstm_1/cond_3/dropout/random_uniform/mul"
  input: "sequential/lstm_1/cond_3/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_3/dropout/sub/x"
  op: "Const"
  input: "^sequential/lstm_1/cond_3/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_3/dropout/sub"
  op: "Sub"
  input: "sequential/lstm_1/cond_3/dropout/sub/x"
  input: "sequential/lstm_1/cond_3/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_3/dropout/truediv/x"
  op: "Const"
  input: "^sequential/lstm_1/cond_3/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_3/dropout/truediv"
  op: "RealDiv"
  input: "sequential/lstm_1/cond_3/dropout/truediv/x"
  input: "sequential/lstm_1/cond_3/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_3/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "sequential/lstm_1/cond_3/dropout/random_uniform"
  input: "sequential/lstm_1/cond_3/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_3/dropout/mul"
  op: "Mul"
  input: "sequential/lstm_1/cond_3/dropout/Shape/Switch:1"
  input: "sequential/lstm_1/cond_3/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_3/dropout/Cast"
  op: "Cast"
  input: "sequential/lstm_1/cond_3/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_3/dropout/mul_1"
  op: "Mul"
  input: "sequential/lstm_1/cond_3/dropout/mul"
  input: "sequential/lstm_1/cond_3/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_3/Switch_1"
  op: "Switch"
  input: "sequential/lstm_1/ones_like"
  input: "sequential/lstm_1/cond_3/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/ones_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/cond_3/Merge"
  op: "Merge"
  input: "sequential/lstm_1/cond_3/Switch_1"
  input: "sequential/lstm_1/cond_3/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/mul"
  op: "Mul"
  input: "sequential/lstm_1/strided_slice_2"
  input: "sequential/lstm_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/mul_1"
  op: "Mul"
  input: "sequential/lstm_1/strided_slice_2"
  input: "sequential/lstm_1/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/mul_2"
  op: "Mul"
  input: "sequential/lstm_1/strided_slice_2"
  input: "sequential/lstm_1/cond_2/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/mul_3"
  op: "Mul"
  input: "sequential/lstm_1/strided_slice_2"
  input: "sequential/lstm_1/cond_3/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "sequential/lstm_1/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_1/split/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_1/split"
  op: "Split"
  input: "sequential/lstm_1/split/split_dim"
  input: "sequential/lstm_1/split/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "sequential/lstm_1/MatMul"
  op: "MatMul"
  input: "sequential/lstm_1/mul"
  input: "sequential/lstm_1/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_1/MatMul_1"
  op: "MatMul"
  input: "sequential/lstm_1/mul_1"
  input: "sequential/lstm_1/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_1/MatMul_2"
  op: "MatMul"
  input: "sequential/lstm_1/mul_2"
  input: "sequential/lstm_1/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_1/MatMul_3"
  op: "MatMul"
  input: "sequential/lstm_1/mul_3"
  input: "sequential/lstm_1/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_1/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "sequential/lstm_1/split_1/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/split_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_1/split_1"
  op: "Split"
  input: "sequential/lstm_1/split_1/split_dim"
  input: "sequential/lstm_1/split_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "sequential/lstm_1/BiasAdd"
  op: "BiasAdd"
  input: "sequential/lstm_1/MatMul"
  input: "sequential/lstm_1/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/lstm_1/BiasAdd_1"
  op: "BiasAdd"
  input: "sequential/lstm_1/MatMul_1"
  input: "sequential/lstm_1/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/lstm_1/BiasAdd_2"
  op: "BiasAdd"
  input: "sequential/lstm_1/MatMul_2"
  input: "sequential/lstm_1/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/lstm_1/BiasAdd_3"
  op: "BiasAdd"
  input: "sequential/lstm_1/MatMul_3"
  input: "sequential/lstm_1/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/lstm_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_1/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_1/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_1/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\203\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_1/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_1/strided_slice_3"
  op: "StridedSlice"
  input: "sequential/lstm_1/ReadVariableOp"
  input: "sequential/lstm_1/strided_slice_3/stack"
  input: "sequential/lstm_1/strided_slice_3/stack_1"
  input: "sequential/lstm_1/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm_1/MatMul_4"
  op: "MatMul"
  input: "sequential/lstm_1/zeros"
  input: "sequential/lstm_1/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_1/add"
  op: "AddV2"
  input: "sequential/lstm_1/BiasAdd"
  input: "sequential/lstm_1/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "sequential/lstm_1/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "sequential/lstm_1/Mul_4"
  op: "Mul"
  input: "sequential/lstm_1/add"
  input: "sequential/lstm_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/Add_1"
  op: "Add"
  input: "sequential/lstm_1/Mul_4"
  input: "sequential/lstm_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/clip_by_value/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/clip_by_value/Minimum"
  op: "Minimum"
  input: "sequential/lstm_1/Add_1"
  input: "sequential/lstm_1/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/clip_by_value/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/clip_by_value"
  op: "Maximum"
  input: "sequential/lstm_1/clip_by_value/Minimum"
  input: "sequential/lstm_1/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "sequential/lstm_1/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_1/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\203\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_1/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\006\001\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_1/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_1/strided_slice_4"
  op: "StridedSlice"
  input: "sequential/lstm_1/ReadVariableOp_1"
  input: "sequential/lstm_1/strided_slice_4/stack"
  input: "sequential/lstm_1/strided_slice_4/stack_1"
  input: "sequential/lstm_1/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm_1/MatMul_5"
  op: "MatMul"
  input: "sequential/lstm_1/zeros"
  input: "sequential/lstm_1/strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_1/add_2"
  op: "AddV2"
  input: "sequential/lstm_1/BiasAdd_1"
  input: "sequential/lstm_1/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "sequential/lstm_1/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "sequential/lstm_1/Mul_5"
  op: "Mul"
  input: "sequential/lstm_1/add_2"
  input: "sequential/lstm_1/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/Add_3"
  op: "Add"
  input: "sequential/lstm_1/Mul_5"
  input: "sequential/lstm_1/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/clip_by_value_1/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "sequential/lstm_1/Add_3"
  input: "sequential/lstm_1/clip_by_value_1/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/clip_by_value_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/clip_by_value_1"
  op: "Maximum"
  input: "sequential/lstm_1/clip_by_value_1/Minimum"
  input: "sequential/lstm_1/clip_by_value_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/mul_6"
  op: "Mul"
  input: "sequential/lstm_1/clip_by_value_1"
  input: "sequential/lstm_1/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "sequential/lstm_1/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_1/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\006\001\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_1/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\211\001\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_1/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_1/strided_slice_5"
  op: "StridedSlice"
  input: "sequential/lstm_1/ReadVariableOp_2"
  input: "sequential/lstm_1/strided_slice_5/stack"
  input: "sequential/lstm_1/strided_slice_5/stack_1"
  input: "sequential/lstm_1/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm_1/MatMul_6"
  op: "MatMul"
  input: "sequential/lstm_1/zeros"
  input: "sequential/lstm_1/strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_1/add_4"
  op: "AddV2"
  input: "sequential/lstm_1/BiasAdd_2"
  input: "sequential/lstm_1/MatMul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/Tanh"
  op: "Tanh"
  input: "sequential/lstm_1/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/mul_7"
  op: "Mul"
  input: "sequential/lstm_1/clip_by_value"
  input: "sequential/lstm_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/add_5"
  op: "AddV2"
  input: "sequential/lstm_1/mul_6"
  input: "sequential/lstm_1/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "sequential/lstm_1/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_1/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\211\001\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_1/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_1/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_1/strided_slice_6"
  op: "StridedSlice"
  input: "sequential/lstm_1/ReadVariableOp_3"
  input: "sequential/lstm_1/strided_slice_6/stack"
  input: "sequential/lstm_1/strided_slice_6/stack_1"
  input: "sequential/lstm_1/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm_1/MatMul_7"
  op: "MatMul"
  input: "sequential/lstm_1/zeros"
  input: "sequential/lstm_1/strided_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_1/add_6"
  op: "AddV2"
  input: "sequential/lstm_1/BiasAdd_3"
  input: "sequential/lstm_1/MatMul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "sequential/lstm_1/Const_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "sequential/lstm_1/Mul_8"
  op: "Mul"
  input: "sequential/lstm_1/add_6"
  input: "sequential/lstm_1/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/Add_7"
  op: "Add"
  input: "sequential/lstm_1/Mul_8"
  input: "sequential/lstm_1/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/clip_by_value_2/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/clip_by_value_2/Minimum"
  op: "Minimum"
  input: "sequential/lstm_1/Add_7"
  input: "sequential/lstm_1/clip_by_value_2/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/clip_by_value_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/clip_by_value_2"
  op: "Maximum"
  input: "sequential/lstm_1/clip_by_value_2/Minimum"
  input: "sequential/lstm_1/clip_by_value_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/Tanh_1"
  op: "Tanh"
  input: "sequential/lstm_1/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/mul_9"
  op: "Mul"
  input: "sequential/lstm_1/clip_by_value_2"
  input: "sequential/lstm_1/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/TensorArray_1"
  op: "TensorArrayV3"
  input: "sequential/lstm_1/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 131
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "output_ta_0"
    }
  }
}
node {
  name: "sequential/lstm_1/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/Enter"
  op: "Enter"
  input: "sequential/lstm_1/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_1/while/Enter_1"
  op: "Enter"
  input: "sequential/lstm_1/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_1/while/Enter_2"
  op: "Enter"
  input: "sequential/lstm_1/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_1/while/Enter_3"
  op: "Enter"
  input: "sequential/lstm_1/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_1/while/Merge"
  op: "Merge"
  input: "sequential/lstm_1/while/Enter"
  input: "sequential/lstm_1/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/Merge_1"
  op: "Merge"
  input: "sequential/lstm_1/while/Enter_1"
  input: "sequential/lstm_1/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/Merge_2"
  op: "Merge"
  input: "sequential/lstm_1/while/Enter_2"
  input: "sequential/lstm_1/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/Merge_3"
  op: "Merge"
  input: "sequential/lstm_1/while/Enter_3"
  input: "sequential/lstm_1/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/Less"
  op: "Less"
  input: "sequential/lstm_1/while/Merge"
  input: "sequential/lstm_1/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/Less/Enter"
  op: "Enter"
  input: "sequential/lstm_1/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_1/while/LoopCond"
  op: "LoopCond"
  input: "sequential/lstm_1/while/Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/Switch"
  op: "Switch"
  input: "sequential/lstm_1/while/Merge"
  input: "sequential/lstm_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/Switch_1"
  op: "Switch"
  input: "sequential/lstm_1/while/Merge_1"
  input: "sequential/lstm_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/Switch_2"
  op: "Switch"
  input: "sequential/lstm_1/while/Merge_2"
  input: "sequential/lstm_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/Switch_3"
  op: "Switch"
  input: "sequential/lstm_1/while/Merge_3"
  input: "sequential/lstm_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/Identity"
  op: "Identity"
  input: "sequential/lstm_1/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/Identity_1"
  op: "Identity"
  input: "sequential/lstm_1/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/Identity_2"
  op: "Identity"
  input: "sequential/lstm_1/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/Identity_3"
  op: "Identity"
  input: "sequential/lstm_1/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "sequential/lstm_1/while/TensorArrayReadV3/Enter"
  input: "sequential/lstm_1/while/Identity"
  input: "sequential/lstm_1/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_1/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "sequential/lstm_1/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_1/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "sequential/lstm_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_1/while/mul"
  op: "Mul"
  input: "sequential/lstm_1/while/TensorArrayReadV3"
  input: "sequential/lstm_1/while/mul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/mul/Enter"
  op: "Enter"
  input: "sequential/lstm_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_1/while/mul_1"
  op: "Mul"
  input: "sequential/lstm_1/while/TensorArrayReadV3"
  input: "sequential/lstm_1/while/mul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/mul_1/Enter"
  op: "Enter"
  input: "sequential/lstm_1/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_1/while/mul_2"
  op: "Mul"
  input: "sequential/lstm_1/while/TensorArrayReadV3"
  input: "sequential/lstm_1/while/mul_2/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/mul_2/Enter"
  op: "Enter"
  input: "sequential/lstm_1/cond_2/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_1/while/mul_3"
  op: "Mul"
  input: "sequential/lstm_1/while/TensorArrayReadV3"
  input: "sequential/lstm_1/while/mul_3/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/mul_3/Enter"
  op: "Enter"
  input: "sequential/lstm_1/cond_3/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_1/while/Const"
  op: "Const"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/split/split_dim"
  op: "Const"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/split/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_1/while/split/ReadVariableOp/Enter"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_1/while/split/ReadVariableOp/Enter"
  op: "Enter"
  input: "sequential/lstm_1/kernel"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_1/while/split"
  op: "Split"
  input: "sequential/lstm_1/while/split/split_dim"
  input: "sequential/lstm_1/while/split/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "sequential/lstm_1/while/MatMul"
  op: "MatMul"
  input: "sequential/lstm_1/while/mul"
  input: "sequential/lstm_1/while/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_1/while/MatMul_1"
  op: "MatMul"
  input: "sequential/lstm_1/while/mul_1"
  input: "sequential/lstm_1/while/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_1/while/MatMul_2"
  op: "MatMul"
  input: "sequential/lstm_1/while/mul_2"
  input: "sequential/lstm_1/while/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_1/while/MatMul_3"
  op: "MatMul"
  input: "sequential/lstm_1/while/mul_3"
  input: "sequential/lstm_1/while/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_1/while/Const_1"
  op: "Const"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/split_1/split_dim"
  op: "Const"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/split_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_1/while/split_1/ReadVariableOp/Enter"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_1/while/split_1/ReadVariableOp/Enter"
  op: "Enter"
  input: "sequential/lstm_1/bias"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_1/while/split_1"
  op: "Split"
  input: "sequential/lstm_1/while/split_1/split_dim"
  input: "sequential/lstm_1/while/split_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "sequential/lstm_1/while/BiasAdd"
  op: "BiasAdd"
  input: "sequential/lstm_1/while/MatMul"
  input: "sequential/lstm_1/while/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/lstm_1/while/BiasAdd_1"
  op: "BiasAdd"
  input: "sequential/lstm_1/while/MatMul_1"
  input: "sequential/lstm_1/while/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/lstm_1/while/BiasAdd_2"
  op: "BiasAdd"
  input: "sequential/lstm_1/while/MatMul_2"
  input: "sequential/lstm_1/while/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/lstm_1/while/BiasAdd_3"
  op: "BiasAdd"
  input: "sequential/lstm_1/while/MatMul_3"
  input: "sequential/lstm_1/while/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/lstm_1/while/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_1/while/ReadVariableOp/Enter"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_1/while/ReadVariableOp/Enter"
  op: "Enter"
  input: "sequential/lstm_1/recurrent_kernel"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_1/while/strided_slice/stack"
  op: "Const"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/strided_slice/stack_1"
  op: "Const"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\203\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/strided_slice/stack_2"
  op: "Const"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/strided_slice"
  op: "StridedSlice"
  input: "sequential/lstm_1/while/ReadVariableOp"
  input: "sequential/lstm_1/while/strided_slice/stack"
  input: "sequential/lstm_1/while/strided_slice/stack_1"
  input: "sequential/lstm_1/while/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm_1/while/MatMul_4"
  op: "MatMul"
  input: "sequential/lstm_1/while/Identity_2"
  input: "sequential/lstm_1/while/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_1/while/add"
  op: "AddV2"
  input: "sequential/lstm_1/while/BiasAdd"
  input: "sequential/lstm_1/while/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/Const_2"
  op: "Const"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/Const_3"
  op: "Const"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/Mul_4"
  op: "Mul"
  input: "sequential/lstm_1/while/add"
  input: "sequential/lstm_1/while/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/Add_1"
  op: "Add"
  input: "sequential/lstm_1/while/Mul_4"
  input: "sequential/lstm_1/while/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/clip_by_value/Minimum/y"
  op: "Const"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/clip_by_value/Minimum"
  op: "Minimum"
  input: "sequential/lstm_1/while/Add_1"
  input: "sequential/lstm_1/while/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/clip_by_value/y"
  op: "Const"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/clip_by_value"
  op: "Maximum"
  input: "sequential/lstm_1/while/clip_by_value/Minimum"
  input: "sequential/lstm_1/while/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "sequential/lstm_1/while/ReadVariableOp/Enter"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_1/while/strided_slice_1/stack"
  op: "Const"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\203\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/strided_slice_1/stack_1"
  op: "Const"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\006\001\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/strided_slice_1/stack_2"
  op: "Const"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/strided_slice_1"
  op: "StridedSlice"
  input: "sequential/lstm_1/while/ReadVariableOp_1"
  input: "sequential/lstm_1/while/strided_slice_1/stack"
  input: "sequential/lstm_1/while/strided_slice_1/stack_1"
  input: "sequential/lstm_1/while/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm_1/while/MatMul_5"
  op: "MatMul"
  input: "sequential/lstm_1/while/Identity_2"
  input: "sequential/lstm_1/while/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_1/while/add_2"
  op: "AddV2"
  input: "sequential/lstm_1/while/BiasAdd_1"
  input: "sequential/lstm_1/while/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/Const_4"
  op: "Const"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/Const_5"
  op: "Const"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/Mul_5"
  op: "Mul"
  input: "sequential/lstm_1/while/add_2"
  input: "sequential/lstm_1/while/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/Add_3"
  op: "Add"
  input: "sequential/lstm_1/while/Mul_5"
  input: "sequential/lstm_1/while/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/clip_by_value_1/Minimum/y"
  op: "Const"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "sequential/lstm_1/while/Add_3"
  input: "sequential/lstm_1/while/clip_by_value_1/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/clip_by_value_1/y"
  op: "Const"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/clip_by_value_1"
  op: "Maximum"
  input: "sequential/lstm_1/while/clip_by_value_1/Minimum"
  input: "sequential/lstm_1/while/clip_by_value_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/mul_6"
  op: "Mul"
  input: "sequential/lstm_1/while/clip_by_value_1"
  input: "sequential/lstm_1/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "sequential/lstm_1/while/ReadVariableOp/Enter"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_1/while/strided_slice_2/stack"
  op: "Const"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\006\001\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/strided_slice_2/stack_1"
  op: "Const"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\211\001\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/strided_slice_2/stack_2"
  op: "Const"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/strided_slice_2"
  op: "StridedSlice"
  input: "sequential/lstm_1/while/ReadVariableOp_2"
  input: "sequential/lstm_1/while/strided_slice_2/stack"
  input: "sequential/lstm_1/while/strided_slice_2/stack_1"
  input: "sequential/lstm_1/while/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm_1/while/MatMul_6"
  op: "MatMul"
  input: "sequential/lstm_1/while/Identity_2"
  input: "sequential/lstm_1/while/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_1/while/add_4"
  op: "AddV2"
  input: "sequential/lstm_1/while/BiasAdd_2"
  input: "sequential/lstm_1/while/MatMul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/Tanh"
  op: "Tanh"
  input: "sequential/lstm_1/while/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/mul_7"
  op: "Mul"
  input: "sequential/lstm_1/while/clip_by_value"
  input: "sequential/lstm_1/while/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/add_5"
  op: "AddV2"
  input: "sequential/lstm_1/while/mul_6"
  input: "sequential/lstm_1/while/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "sequential/lstm_1/while/ReadVariableOp/Enter"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_1/while/strided_slice_3/stack"
  op: "Const"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\211\001\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/strided_slice_3/stack_1"
  op: "Const"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/strided_slice_3/stack_2"
  op: "Const"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/strided_slice_3"
  op: "StridedSlice"
  input: "sequential/lstm_1/while/ReadVariableOp_3"
  input: "sequential/lstm_1/while/strided_slice_3/stack"
  input: "sequential/lstm_1/while/strided_slice_3/stack_1"
  input: "sequential/lstm_1/while/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm_1/while/MatMul_7"
  op: "MatMul"
  input: "sequential/lstm_1/while/Identity_2"
  input: "sequential/lstm_1/while/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_1/while/add_6"
  op: "AddV2"
  input: "sequential/lstm_1/while/BiasAdd_3"
  input: "sequential/lstm_1/while/MatMul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/Const_6"
  op: "Const"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/Const_7"
  op: "Const"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/Mul_8"
  op: "Mul"
  input: "sequential/lstm_1/while/add_6"
  input: "sequential/lstm_1/while/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/Add_7"
  op: "Add"
  input: "sequential/lstm_1/while/Mul_8"
  input: "sequential/lstm_1/while/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/clip_by_value_2/Minimum/y"
  op: "Const"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/clip_by_value_2/Minimum"
  op: "Minimum"
  input: "sequential/lstm_1/while/Add_7"
  input: "sequential/lstm_1/while/clip_by_value_2/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/clip_by_value_2/y"
  op: "Const"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/clip_by_value_2"
  op: "Maximum"
  input: "sequential/lstm_1/while/clip_by_value_2/Minimum"
  input: "sequential/lstm_1/while/clip_by_value_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/Tanh_1"
  op: "Tanh"
  input: "sequential/lstm_1/while/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/mul_9"
  op: "Mul"
  input: "sequential/lstm_1/while/clip_by_value_2"
  input: "sequential/lstm_1/while/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "sequential/lstm_1/while/Identity"
  input: "sequential/lstm_1/while/mul_9"
  input: "sequential/lstm_1/while/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/mul_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "sequential/lstm_1/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/mul_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_1/while/add_8/y"
  op: "Const"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/add_8"
  op: "AddV2"
  input: "sequential/lstm_1/while/Identity"
  input: "sequential/lstm_1/while/add_8/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/NextIteration"
  op: "NextIteration"
  input: "sequential/lstm_1/while/add_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/NextIteration_1"
  op: "NextIteration"
  input: "sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/NextIteration_2"
  op: "NextIteration"
  input: "sequential/lstm_1/while/mul_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/NextIteration_3"
  op: "NextIteration"
  input: "sequential/lstm_1/while/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/Exit"
  op: "Exit"
  input: "sequential/lstm_1/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/Exit_1"
  op: "Exit"
  input: "sequential/lstm_1/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/Exit_2"
  op: "Exit"
  input: "sequential/lstm_1/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/while/Exit_3"
  op: "Exit"
  input: "sequential/lstm_1/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "sequential/lstm_1/TensorArray_1"
  input: "sequential/lstm_1/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_1/TensorArrayStack/range"
  op: "Range"
  input: "sequential/lstm_1/TensorArrayStack/range/start"
  input: "sequential/lstm_1/TensorArrayStack/TensorArraySizeV3"
  input: "sequential/lstm_1/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "sequential/lstm_1/TensorArray_1"
  input: "sequential/lstm_1/TensorArrayStack/range"
  input: "sequential/lstm_1/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 131
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/strided_slice_7/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "sequential/lstm_1/strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_1/strided_slice_7"
  op: "StridedSlice"
  input: "sequential/lstm_1/TensorArrayStack/TensorArrayGatherV3"
  input: "sequential/lstm_1/strided_slice_7/stack"
  input: "sequential/lstm_1/strided_slice_7/stack_1"
  input: "sequential/lstm_1/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "sequential/lstm_1/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_1/transpose_1"
  op: "Transpose"
  input: "sequential/lstm_1/TensorArrayStack/TensorArrayGatherV3"
  input: "sequential/lstm_1/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_2/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09570948779582977
      }
    }
  }
}
node {
  name: "sequential/lstm_2/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09570948779582977
      }
    }
  }
}
node {
  name: "sequential/lstm_2/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "sequential/lstm_2/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm_2/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "sequential/lstm_2/kernel/Initializer/random_uniform/max"
  input: "sequential/lstm_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "sequential/lstm_2/kernel/Initializer/random_uniform/RandomUniform"
  input: "sequential/lstm_2/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/kernel/Initializer/random_uniform"
  op: "Add"
  input: "sequential/lstm_2/kernel/Initializer/random_uniform/mul"
  input: "sequential/lstm_2/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 131
        }
        dim {
          size: 524
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/lstm_2/kernel"
    }
  }
}
node {
  name: "sequential/lstm_2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/kernel/Assign"
  op: "AssignVariableOp"
  input: "sequential/lstm_2/kernel"
  input: "sequential/lstm_2/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_2/recurrent_kernel/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\002\000\000\203\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_2/recurrent_kernel/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/recurrent_kernel/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/recurrent_kernel/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "sequential/lstm_2/recurrent_kernel/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm_2/recurrent_kernel/Initializer/random_normal/mul"
  op: "Mul"
  input: "sequential/lstm_2/recurrent_kernel/Initializer/random_normal/RandomStandardNormal"
  input: "sequential/lstm_2/recurrent_kernel/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/recurrent_kernel/Initializer/random_normal"
  op: "Add"
  input: "sequential/lstm_2/recurrent_kernel/Initializer/random_normal/mul"
  input: "sequential/lstm_2/recurrent_kernel/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/recurrent_kernel/Initializer/Qr"
  op: "Qr"
  input: "sequential/lstm_2/recurrent_kernel/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_2/recurrent_kernel/Initializer/DiagPart"
  op: "DiagPart"
  input: "sequential/lstm_2/recurrent_kernel/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/recurrent_kernel/Initializer/Sign"
  op: "Sign"
  input: "sequential/lstm_2/recurrent_kernel/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/recurrent_kernel/Initializer/mul"
  op: "Mul"
  input: "sequential/lstm_2/recurrent_kernel/Initializer/Qr"
  input: "sequential/lstm_2/recurrent_kernel/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/recurrent_kernel/Initializer/matrix_transpose/transpose/perm"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_2/recurrent_kernel/Initializer/matrix_transpose/transpose"
  op: "Transpose"
  input: "sequential/lstm_2/recurrent_kernel/Initializer/mul"
  input: "sequential/lstm_2/recurrent_kernel/Initializer/matrix_transpose/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/recurrent_kernel/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_2/recurrent_kernel/Initializer/Reshape"
  op: "Reshape"
  input: "sequential/lstm_2/recurrent_kernel/Initializer/matrix_transpose/transpose"
  input: "sequential/lstm_2/recurrent_kernel/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/recurrent_kernel/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/recurrent_kernel/Initializer/mul_1"
  op: "Mul"
  input: "sequential/lstm_2/recurrent_kernel/Initializer/mul_1/x"
  input: "sequential/lstm_2/recurrent_kernel/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/recurrent_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 131
        }
        dim {
          size: 524
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/lstm_2/recurrent_kernel"
    }
  }
}
node {
  name: "sequential/lstm_2/recurrent_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_2/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/recurrent_kernel/Assign"
  op: "AssignVariableOp"
  input: "sequential/lstm_2/recurrent_kernel"
  input: "sequential/lstm_2/recurrent_kernel/Initializer/mul_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_2/recurrent_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_2/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 131
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/bias/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 131
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/bias/Initializer/zeros_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 262
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 262
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/bias/Initializer/concat/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/bias/Initializer/concat"
  op: "ConcatV2"
  input: "sequential/lstm_2/bias/Initializer/zeros"
  input: "sequential/lstm_2/bias/Initializer/ones"
  input: "sequential/lstm_2/bias/Initializer/zeros_1"
  input: "sequential/lstm_2/bias/Initializer/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 524
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/lstm_2/bias"
    }
  }
}
node {
  name: "sequential/lstm_2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/bias/Assign"
  op: "AssignVariableOp"
  input: "sequential/lstm_2/bias"
  input: "sequential/lstm_2/bias/Initializer/concat"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_2/Shape"
  op: "Shape"
  input: "sequential/lstm_1/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_2/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_2/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_2/strided_slice"
  op: "StridedSlice"
  input: "sequential/lstm_2/Shape"
  input: "sequential/lstm_2/strided_slice/stack"
  input: "sequential/lstm_2/strided_slice/stack_1"
  input: "sequential/lstm_2/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "sequential/lstm_2/zeros/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 131
      }
    }
  }
}
node {
  name: "sequential/lstm_2/zeros/mul"
  op: "Mul"
  input: "sequential/lstm_2/strided_slice"
  input: "sequential/lstm_2/zeros/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/zeros/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "sequential/lstm_2/zeros/Less"
  op: "Less"
  input: "sequential/lstm_2/zeros/mul"
  input: "sequential/lstm_2/zeros/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/zeros/packed/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 131
      }
    }
  }
}
node {
  name: "sequential/lstm_2/zeros/packed"
  op: "Pack"
  input: "sequential/lstm_2/strided_slice"
  input: "sequential/lstm_2/zeros/packed/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm_2/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/zeros"
  op: "Fill"
  input: "sequential/lstm_2/zeros/packed"
  input: "sequential/lstm_2/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_2/zeros_1/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 131
      }
    }
  }
}
node {
  name: "sequential/lstm_2/zeros_1/mul"
  op: "Mul"
  input: "sequential/lstm_2/strided_slice"
  input: "sequential/lstm_2/zeros_1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/zeros_1/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "sequential/lstm_2/zeros_1/Less"
  op: "Less"
  input: "sequential/lstm_2/zeros_1/mul"
  input: "sequential/lstm_2/zeros_1/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/zeros_1/packed/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 131
      }
    }
  }
}
node {
  name: "sequential/lstm_2/zeros_1/packed"
  op: "Pack"
  input: "sequential/lstm_2/strided_slice"
  input: "sequential/lstm_2/zeros_1/packed/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm_2/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/zeros_1"
  op: "Fill"
  input: "sequential/lstm_2/zeros_1/packed"
  input: "sequential/lstm_2/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_2/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_2/transpose"
  op: "Transpose"
  input: "sequential/lstm_1/transpose_1"
  input: "sequential/lstm_2/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/Shape_1"
  op: "Shape"
  input: "sequential/lstm_2/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_2/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_2/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_2/strided_slice_1"
  op: "StridedSlice"
  input: "sequential/lstm_2/Shape_1"
  input: "sequential/lstm_2/strided_slice_1/stack"
  input: "sequential/lstm_2/strided_slice_1/stack_1"
  input: "sequential/lstm_2/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "sequential/lstm_2/TensorArray"
  op: "TensorArrayV3"
  input: "sequential/lstm_2/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "input_ta_0"
    }
  }
}
node {
  name: "sequential/lstm_2/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "sequential/lstm_2/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_2/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_2/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_2/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "sequential/lstm_2/TensorArrayUnstack/Shape"
  input: "sequential/lstm_2/TensorArrayUnstack/strided_slice/stack"
  input: "sequential/lstm_2/TensorArrayUnstack/strided_slice/stack_1"
  input: "sequential/lstm_2/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "sequential/lstm_2/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_2/TensorArrayUnstack/range"
  op: "Range"
  input: "sequential/lstm_2/TensorArrayUnstack/range/start"
  input: "sequential/lstm_2/TensorArrayUnstack/strided_slice"
  input: "sequential/lstm_2/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "sequential/lstm_2/TensorArray"
  input: "sequential/lstm_2/TensorArrayUnstack/range"
  input: "sequential/lstm_2/transpose"
  input: "sequential/lstm_2/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_2/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_2/strided_slice_2"
  op: "StridedSlice"
  input: "sequential/lstm_2/transpose"
  input: "sequential/lstm_2/strided_slice_2/stack"
  input: "sequential/lstm_2/strided_slice_2/stack_1"
  input: "sequential/lstm_2/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "sequential/lstm_2/ones_like/Shape"
  op: "Shape"
  input: "sequential/lstm_2/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_2/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/ones_like"
  op: "Fill"
  input: "sequential/lstm_2/ones_like/Shape"
  input: "sequential/lstm_2/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_2/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond/switch_t"
  op: "Identity"
  input: "sequential/lstm_2/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond/switch_f"
  op: "Identity"
  input: "sequential/lstm_2/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond/dropout/rate"
  op: "Const"
  input: "^sequential/lstm_2/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3203999996185303
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond/dropout/Shape"
  op: "Shape"
  input: "sequential/lstm_2/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_2/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "sequential/lstm_2/ones_like"
  input: "sequential/lstm_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/ones_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^sequential/lstm_2/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^sequential/lstm_2/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "sequential/lstm_2/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 616821
    }
  }
}
node {
  name: "sequential/lstm_2/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "sequential/lstm_2/cond/dropout/random_uniform/max"
  input: "sequential/lstm_2/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "sequential/lstm_2/cond/dropout/random_uniform/RandomUniform"
  input: "sequential/lstm_2/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond/dropout/random_uniform"
  op: "Add"
  input: "sequential/lstm_2/cond/dropout/random_uniform/mul"
  input: "sequential/lstm_2/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond/dropout/sub/x"
  op: "Const"
  input: "^sequential/lstm_2/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond/dropout/sub"
  op: "Sub"
  input: "sequential/lstm_2/cond/dropout/sub/x"
  input: "sequential/lstm_2/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond/dropout/truediv/x"
  op: "Const"
  input: "^sequential/lstm_2/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond/dropout/truediv"
  op: "RealDiv"
  input: "sequential/lstm_2/cond/dropout/truediv/x"
  input: "sequential/lstm_2/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "sequential/lstm_2/cond/dropout/random_uniform"
  input: "sequential/lstm_2/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond/dropout/mul"
  op: "Mul"
  input: "sequential/lstm_2/cond/dropout/Shape/Switch:1"
  input: "sequential/lstm_2/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond/dropout/Cast"
  op: "Cast"
  input: "sequential/lstm_2/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond/dropout/mul_1"
  op: "Mul"
  input: "sequential/lstm_2/cond/dropout/mul"
  input: "sequential/lstm_2/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond/Switch_1"
  op: "Switch"
  input: "sequential/lstm_2/ones_like"
  input: "sequential/lstm_2/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/ones_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond/Merge"
  op: "Merge"
  input: "sequential/lstm_2/cond/Switch_1"
  input: "sequential/lstm_2/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_1/switch_t"
  op: "Identity"
  input: "sequential/lstm_2/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_1/switch_f"
  op: "Identity"
  input: "sequential/lstm_2/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_1/dropout/rate"
  op: "Const"
  input: "^sequential/lstm_2/cond_1/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3203999996185303
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_1/dropout/Shape"
  op: "Shape"
  input: "sequential/lstm_2/cond_1/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_2/cond_1/dropout/Shape/Switch"
  op: "Switch"
  input: "sequential/lstm_2/ones_like"
  input: "sequential/lstm_2/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/ones_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_1/dropout/random_uniform/min"
  op: "Const"
  input: "^sequential/lstm_2/cond_1/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_1/dropout/random_uniform/max"
  op: "Const"
  input: "^sequential/lstm_2/cond_1/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_1/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "sequential/lstm_2/cond_1/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6721679
    }
  }
}
node {
  name: "sequential/lstm_2/cond_1/dropout/random_uniform/sub"
  op: "Sub"
  input: "sequential/lstm_2/cond_1/dropout/random_uniform/max"
  input: "sequential/lstm_2/cond_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_1/dropout/random_uniform/mul"
  op: "Mul"
  input: "sequential/lstm_2/cond_1/dropout/random_uniform/RandomUniform"
  input: "sequential/lstm_2/cond_1/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_1/dropout/random_uniform"
  op: "Add"
  input: "sequential/lstm_2/cond_1/dropout/random_uniform/mul"
  input: "sequential/lstm_2/cond_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_1/dropout/sub/x"
  op: "Const"
  input: "^sequential/lstm_2/cond_1/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_1/dropout/sub"
  op: "Sub"
  input: "sequential/lstm_2/cond_1/dropout/sub/x"
  input: "sequential/lstm_2/cond_1/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_1/dropout/truediv/x"
  op: "Const"
  input: "^sequential/lstm_2/cond_1/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_1/dropout/truediv"
  op: "RealDiv"
  input: "sequential/lstm_2/cond_1/dropout/truediv/x"
  input: "sequential/lstm_2/cond_1/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_1/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "sequential/lstm_2/cond_1/dropout/random_uniform"
  input: "sequential/lstm_2/cond_1/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_1/dropout/mul"
  op: "Mul"
  input: "sequential/lstm_2/cond_1/dropout/Shape/Switch:1"
  input: "sequential/lstm_2/cond_1/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_1/dropout/Cast"
  op: "Cast"
  input: "sequential/lstm_2/cond_1/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_1/dropout/mul_1"
  op: "Mul"
  input: "sequential/lstm_2/cond_1/dropout/mul"
  input: "sequential/lstm_2/cond_1/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_1/Switch_1"
  op: "Switch"
  input: "sequential/lstm_2/ones_like"
  input: "sequential/lstm_2/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/ones_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_1/Merge"
  op: "Merge"
  input: "sequential/lstm_2/cond_1/Switch_1"
  input: "sequential/lstm_2/cond_1/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_2/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_2/switch_t"
  op: "Identity"
  input: "sequential/lstm_2/cond_2/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_2/switch_f"
  op: "Identity"
  input: "sequential/lstm_2/cond_2/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_2/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_2/dropout/rate"
  op: "Const"
  input: "^sequential/lstm_2/cond_2/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3203999996185303
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_2/dropout/Shape"
  op: "Shape"
  input: "sequential/lstm_2/cond_2/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_2/cond_2/dropout/Shape/Switch"
  op: "Switch"
  input: "sequential/lstm_2/ones_like"
  input: "sequential/lstm_2/cond_2/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/ones_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_2/dropout/random_uniform/min"
  op: "Const"
  input: "^sequential/lstm_2/cond_2/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_2/dropout/random_uniform/max"
  op: "Const"
  input: "^sequential/lstm_2/cond_2/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_2/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "sequential/lstm_2/cond_2/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 3596532
    }
  }
}
node {
  name: "sequential/lstm_2/cond_2/dropout/random_uniform/sub"
  op: "Sub"
  input: "sequential/lstm_2/cond_2/dropout/random_uniform/max"
  input: "sequential/lstm_2/cond_2/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_2/dropout/random_uniform/mul"
  op: "Mul"
  input: "sequential/lstm_2/cond_2/dropout/random_uniform/RandomUniform"
  input: "sequential/lstm_2/cond_2/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_2/dropout/random_uniform"
  op: "Add"
  input: "sequential/lstm_2/cond_2/dropout/random_uniform/mul"
  input: "sequential/lstm_2/cond_2/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_2/dropout/sub/x"
  op: "Const"
  input: "^sequential/lstm_2/cond_2/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_2/dropout/sub"
  op: "Sub"
  input: "sequential/lstm_2/cond_2/dropout/sub/x"
  input: "sequential/lstm_2/cond_2/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_2/dropout/truediv/x"
  op: "Const"
  input: "^sequential/lstm_2/cond_2/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_2/dropout/truediv"
  op: "RealDiv"
  input: "sequential/lstm_2/cond_2/dropout/truediv/x"
  input: "sequential/lstm_2/cond_2/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_2/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "sequential/lstm_2/cond_2/dropout/random_uniform"
  input: "sequential/lstm_2/cond_2/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_2/dropout/mul"
  op: "Mul"
  input: "sequential/lstm_2/cond_2/dropout/Shape/Switch:1"
  input: "sequential/lstm_2/cond_2/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_2/dropout/Cast"
  op: "Cast"
  input: "sequential/lstm_2/cond_2/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_2/dropout/mul_1"
  op: "Mul"
  input: "sequential/lstm_2/cond_2/dropout/mul"
  input: "sequential/lstm_2/cond_2/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_2/Switch_1"
  op: "Switch"
  input: "sequential/lstm_2/ones_like"
  input: "sequential/lstm_2/cond_2/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/ones_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_2/Merge"
  op: "Merge"
  input: "sequential/lstm_2/cond_2/Switch_1"
  input: "sequential/lstm_2/cond_2/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_3/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_3/switch_t"
  op: "Identity"
  input: "sequential/lstm_2/cond_3/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_3/switch_f"
  op: "Identity"
  input: "sequential/lstm_2/cond_3/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_3/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_3/dropout/rate"
  op: "Const"
  input: "^sequential/lstm_2/cond_3/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3203999996185303
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_3/dropout/Shape"
  op: "Shape"
  input: "sequential/lstm_2/cond_3/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_2/cond_3/dropout/Shape/Switch"
  op: "Switch"
  input: "sequential/lstm_2/ones_like"
  input: "sequential/lstm_2/cond_3/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/ones_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_3/dropout/random_uniform/min"
  op: "Const"
  input: "^sequential/lstm_2/cond_3/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_3/dropout/random_uniform/max"
  op: "Const"
  input: "^sequential/lstm_2/cond_3/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_3/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "sequential/lstm_2/cond_3/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6510277
    }
  }
}
node {
  name: "sequential/lstm_2/cond_3/dropout/random_uniform/sub"
  op: "Sub"
  input: "sequential/lstm_2/cond_3/dropout/random_uniform/max"
  input: "sequential/lstm_2/cond_3/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_3/dropout/random_uniform/mul"
  op: "Mul"
  input: "sequential/lstm_2/cond_3/dropout/random_uniform/RandomUniform"
  input: "sequential/lstm_2/cond_3/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_3/dropout/random_uniform"
  op: "Add"
  input: "sequential/lstm_2/cond_3/dropout/random_uniform/mul"
  input: "sequential/lstm_2/cond_3/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_3/dropout/sub/x"
  op: "Const"
  input: "^sequential/lstm_2/cond_3/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_3/dropout/sub"
  op: "Sub"
  input: "sequential/lstm_2/cond_3/dropout/sub/x"
  input: "sequential/lstm_2/cond_3/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_3/dropout/truediv/x"
  op: "Const"
  input: "^sequential/lstm_2/cond_3/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_3/dropout/truediv"
  op: "RealDiv"
  input: "sequential/lstm_2/cond_3/dropout/truediv/x"
  input: "sequential/lstm_2/cond_3/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_3/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "sequential/lstm_2/cond_3/dropout/random_uniform"
  input: "sequential/lstm_2/cond_3/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_3/dropout/mul"
  op: "Mul"
  input: "sequential/lstm_2/cond_3/dropout/Shape/Switch:1"
  input: "sequential/lstm_2/cond_3/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_3/dropout/Cast"
  op: "Cast"
  input: "sequential/lstm_2/cond_3/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_3/dropout/mul_1"
  op: "Mul"
  input: "sequential/lstm_2/cond_3/dropout/mul"
  input: "sequential/lstm_2/cond_3/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_3/Switch_1"
  op: "Switch"
  input: "sequential/lstm_2/ones_like"
  input: "sequential/lstm_2/cond_3/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/ones_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/cond_3/Merge"
  op: "Merge"
  input: "sequential/lstm_2/cond_3/Switch_1"
  input: "sequential/lstm_2/cond_3/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/mul"
  op: "Mul"
  input: "sequential/lstm_2/strided_slice_2"
  input: "sequential/lstm_2/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/mul_1"
  op: "Mul"
  input: "sequential/lstm_2/strided_slice_2"
  input: "sequential/lstm_2/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/mul_2"
  op: "Mul"
  input: "sequential/lstm_2/strided_slice_2"
  input: "sequential/lstm_2/cond_2/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/mul_3"
  op: "Mul"
  input: "sequential/lstm_2/strided_slice_2"
  input: "sequential/lstm_2/cond_3/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "sequential/lstm_2/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_2/split/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_2/split"
  op: "Split"
  input: "sequential/lstm_2/split/split_dim"
  input: "sequential/lstm_2/split/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "sequential/lstm_2/MatMul"
  op: "MatMul"
  input: "sequential/lstm_2/mul"
  input: "sequential/lstm_2/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_2/MatMul_1"
  op: "MatMul"
  input: "sequential/lstm_2/mul_1"
  input: "sequential/lstm_2/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_2/MatMul_2"
  op: "MatMul"
  input: "sequential/lstm_2/mul_2"
  input: "sequential/lstm_2/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_2/MatMul_3"
  op: "MatMul"
  input: "sequential/lstm_2/mul_3"
  input: "sequential/lstm_2/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_2/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "sequential/lstm_2/split_1/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/split_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_2/split_1"
  op: "Split"
  input: "sequential/lstm_2/split_1/split_dim"
  input: "sequential/lstm_2/split_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "sequential/lstm_2/BiasAdd"
  op: "BiasAdd"
  input: "sequential/lstm_2/MatMul"
  input: "sequential/lstm_2/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/lstm_2/BiasAdd_1"
  op: "BiasAdd"
  input: "sequential/lstm_2/MatMul_1"
  input: "sequential/lstm_2/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/lstm_2/BiasAdd_2"
  op: "BiasAdd"
  input: "sequential/lstm_2/MatMul_2"
  input: "sequential/lstm_2/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/lstm_2/BiasAdd_3"
  op: "BiasAdd"
  input: "sequential/lstm_2/MatMul_3"
  input: "sequential/lstm_2/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/lstm_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_2/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_2/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_2/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\203\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_2/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_2/strided_slice_3"
  op: "StridedSlice"
  input: "sequential/lstm_2/ReadVariableOp"
  input: "sequential/lstm_2/strided_slice_3/stack"
  input: "sequential/lstm_2/strided_slice_3/stack_1"
  input: "sequential/lstm_2/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm_2/MatMul_4"
  op: "MatMul"
  input: "sequential/lstm_2/zeros"
  input: "sequential/lstm_2/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_2/add"
  op: "AddV2"
  input: "sequential/lstm_2/BiasAdd"
  input: "sequential/lstm_2/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "sequential/lstm_2/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "sequential/lstm_2/Mul_4"
  op: "Mul"
  input: "sequential/lstm_2/add"
  input: "sequential/lstm_2/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/Add_1"
  op: "Add"
  input: "sequential/lstm_2/Mul_4"
  input: "sequential/lstm_2/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/clip_by_value/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/clip_by_value/Minimum"
  op: "Minimum"
  input: "sequential/lstm_2/Add_1"
  input: "sequential/lstm_2/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/clip_by_value/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/clip_by_value"
  op: "Maximum"
  input: "sequential/lstm_2/clip_by_value/Minimum"
  input: "sequential/lstm_2/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "sequential/lstm_2/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_2/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\203\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_2/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\006\001\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_2/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_2/strided_slice_4"
  op: "StridedSlice"
  input: "sequential/lstm_2/ReadVariableOp_1"
  input: "sequential/lstm_2/strided_slice_4/stack"
  input: "sequential/lstm_2/strided_slice_4/stack_1"
  input: "sequential/lstm_2/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm_2/MatMul_5"
  op: "MatMul"
  input: "sequential/lstm_2/zeros"
  input: "sequential/lstm_2/strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_2/add_2"
  op: "AddV2"
  input: "sequential/lstm_2/BiasAdd_1"
  input: "sequential/lstm_2/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "sequential/lstm_2/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "sequential/lstm_2/Mul_5"
  op: "Mul"
  input: "sequential/lstm_2/add_2"
  input: "sequential/lstm_2/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/Add_3"
  op: "Add"
  input: "sequential/lstm_2/Mul_5"
  input: "sequential/lstm_2/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/clip_by_value_1/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "sequential/lstm_2/Add_3"
  input: "sequential/lstm_2/clip_by_value_1/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/clip_by_value_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/clip_by_value_1"
  op: "Maximum"
  input: "sequential/lstm_2/clip_by_value_1/Minimum"
  input: "sequential/lstm_2/clip_by_value_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/mul_6"
  op: "Mul"
  input: "sequential/lstm_2/clip_by_value_1"
  input: "sequential/lstm_2/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "sequential/lstm_2/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_2/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\006\001\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_2/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\211\001\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_2/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_2/strided_slice_5"
  op: "StridedSlice"
  input: "sequential/lstm_2/ReadVariableOp_2"
  input: "sequential/lstm_2/strided_slice_5/stack"
  input: "sequential/lstm_2/strided_slice_5/stack_1"
  input: "sequential/lstm_2/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm_2/MatMul_6"
  op: "MatMul"
  input: "sequential/lstm_2/zeros"
  input: "sequential/lstm_2/strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_2/add_4"
  op: "AddV2"
  input: "sequential/lstm_2/BiasAdd_2"
  input: "sequential/lstm_2/MatMul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/Tanh"
  op: "Tanh"
  input: "sequential/lstm_2/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/mul_7"
  op: "Mul"
  input: "sequential/lstm_2/clip_by_value"
  input: "sequential/lstm_2/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/add_5"
  op: "AddV2"
  input: "sequential/lstm_2/mul_6"
  input: "sequential/lstm_2/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "sequential/lstm_2/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_2/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\211\001\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_2/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_2/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_2/strided_slice_6"
  op: "StridedSlice"
  input: "sequential/lstm_2/ReadVariableOp_3"
  input: "sequential/lstm_2/strided_slice_6/stack"
  input: "sequential/lstm_2/strided_slice_6/stack_1"
  input: "sequential/lstm_2/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm_2/MatMul_7"
  op: "MatMul"
  input: "sequential/lstm_2/zeros"
  input: "sequential/lstm_2/strided_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_2/add_6"
  op: "AddV2"
  input: "sequential/lstm_2/BiasAdd_3"
  input: "sequential/lstm_2/MatMul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "sequential/lstm_2/Const_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "sequential/lstm_2/Mul_8"
  op: "Mul"
  input: "sequential/lstm_2/add_6"
  input: "sequential/lstm_2/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/Add_7"
  op: "Add"
  input: "sequential/lstm_2/Mul_8"
  input: "sequential/lstm_2/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/clip_by_value_2/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/clip_by_value_2/Minimum"
  op: "Minimum"
  input: "sequential/lstm_2/Add_7"
  input: "sequential/lstm_2/clip_by_value_2/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/clip_by_value_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/clip_by_value_2"
  op: "Maximum"
  input: "sequential/lstm_2/clip_by_value_2/Minimum"
  input: "sequential/lstm_2/clip_by_value_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/Tanh_1"
  op: "Tanh"
  input: "sequential/lstm_2/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/mul_9"
  op: "Mul"
  input: "sequential/lstm_2/clip_by_value_2"
  input: "sequential/lstm_2/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/TensorArray_1"
  op: "TensorArrayV3"
  input: "sequential/lstm_2/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 131
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "output_ta_0"
    }
  }
}
node {
  name: "sequential/lstm_2/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/Enter"
  op: "Enter"
  input: "sequential/lstm_2/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_2/while/Enter_1"
  op: "Enter"
  input: "sequential/lstm_2/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_2/while/Enter_2"
  op: "Enter"
  input: "sequential/lstm_2/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_2/while/Enter_3"
  op: "Enter"
  input: "sequential/lstm_2/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_2/while/Merge"
  op: "Merge"
  input: "sequential/lstm_2/while/Enter"
  input: "sequential/lstm_2/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/Merge_1"
  op: "Merge"
  input: "sequential/lstm_2/while/Enter_1"
  input: "sequential/lstm_2/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/Merge_2"
  op: "Merge"
  input: "sequential/lstm_2/while/Enter_2"
  input: "sequential/lstm_2/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/Merge_3"
  op: "Merge"
  input: "sequential/lstm_2/while/Enter_3"
  input: "sequential/lstm_2/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/Less"
  op: "Less"
  input: "sequential/lstm_2/while/Merge"
  input: "sequential/lstm_2/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/Less/Enter"
  op: "Enter"
  input: "sequential/lstm_2/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_2/while/LoopCond"
  op: "LoopCond"
  input: "sequential/lstm_2/while/Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/Switch"
  op: "Switch"
  input: "sequential/lstm_2/while/Merge"
  input: "sequential/lstm_2/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/Switch_1"
  op: "Switch"
  input: "sequential/lstm_2/while/Merge_1"
  input: "sequential/lstm_2/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/Switch_2"
  op: "Switch"
  input: "sequential/lstm_2/while/Merge_2"
  input: "sequential/lstm_2/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/Switch_3"
  op: "Switch"
  input: "sequential/lstm_2/while/Merge_3"
  input: "sequential/lstm_2/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/Identity"
  op: "Identity"
  input: "sequential/lstm_2/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/Identity_1"
  op: "Identity"
  input: "sequential/lstm_2/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/Identity_2"
  op: "Identity"
  input: "sequential/lstm_2/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/Identity_3"
  op: "Identity"
  input: "sequential/lstm_2/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "sequential/lstm_2/while/TensorArrayReadV3/Enter"
  input: "sequential/lstm_2/while/Identity"
  input: "sequential/lstm_2/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_2/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "sequential/lstm_2/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_2/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "sequential/lstm_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_2/while/mul"
  op: "Mul"
  input: "sequential/lstm_2/while/TensorArrayReadV3"
  input: "sequential/lstm_2/while/mul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/mul/Enter"
  op: "Enter"
  input: "sequential/lstm_2/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_2/while/mul_1"
  op: "Mul"
  input: "sequential/lstm_2/while/TensorArrayReadV3"
  input: "sequential/lstm_2/while/mul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/mul_1/Enter"
  op: "Enter"
  input: "sequential/lstm_2/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_2/while/mul_2"
  op: "Mul"
  input: "sequential/lstm_2/while/TensorArrayReadV3"
  input: "sequential/lstm_2/while/mul_2/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/mul_2/Enter"
  op: "Enter"
  input: "sequential/lstm_2/cond_2/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_2/while/mul_3"
  op: "Mul"
  input: "sequential/lstm_2/while/TensorArrayReadV3"
  input: "sequential/lstm_2/while/mul_3/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/mul_3/Enter"
  op: "Enter"
  input: "sequential/lstm_2/cond_3/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_2/while/Const"
  op: "Const"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/split/split_dim"
  op: "Const"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/split/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_2/while/split/ReadVariableOp/Enter"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_2/while/split/ReadVariableOp/Enter"
  op: "Enter"
  input: "sequential/lstm_2/kernel"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_2/while/split"
  op: "Split"
  input: "sequential/lstm_2/while/split/split_dim"
  input: "sequential/lstm_2/while/split/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "sequential/lstm_2/while/MatMul"
  op: "MatMul"
  input: "sequential/lstm_2/while/mul"
  input: "sequential/lstm_2/while/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_2/while/MatMul_1"
  op: "MatMul"
  input: "sequential/lstm_2/while/mul_1"
  input: "sequential/lstm_2/while/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_2/while/MatMul_2"
  op: "MatMul"
  input: "sequential/lstm_2/while/mul_2"
  input: "sequential/lstm_2/while/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_2/while/MatMul_3"
  op: "MatMul"
  input: "sequential/lstm_2/while/mul_3"
  input: "sequential/lstm_2/while/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_2/while/Const_1"
  op: "Const"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/split_1/split_dim"
  op: "Const"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/split_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_2/while/split_1/ReadVariableOp/Enter"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_2/while/split_1/ReadVariableOp/Enter"
  op: "Enter"
  input: "sequential/lstm_2/bias"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_2/while/split_1"
  op: "Split"
  input: "sequential/lstm_2/while/split_1/split_dim"
  input: "sequential/lstm_2/while/split_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "sequential/lstm_2/while/BiasAdd"
  op: "BiasAdd"
  input: "sequential/lstm_2/while/MatMul"
  input: "sequential/lstm_2/while/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/lstm_2/while/BiasAdd_1"
  op: "BiasAdd"
  input: "sequential/lstm_2/while/MatMul_1"
  input: "sequential/lstm_2/while/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/lstm_2/while/BiasAdd_2"
  op: "BiasAdd"
  input: "sequential/lstm_2/while/MatMul_2"
  input: "sequential/lstm_2/while/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/lstm_2/while/BiasAdd_3"
  op: "BiasAdd"
  input: "sequential/lstm_2/while/MatMul_3"
  input: "sequential/lstm_2/while/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/lstm_2/while/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_2/while/ReadVariableOp/Enter"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_2/while/ReadVariableOp/Enter"
  op: "Enter"
  input: "sequential/lstm_2/recurrent_kernel"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_2/while/strided_slice/stack"
  op: "Const"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/strided_slice/stack_1"
  op: "Const"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\203\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/strided_slice/stack_2"
  op: "Const"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/strided_slice"
  op: "StridedSlice"
  input: "sequential/lstm_2/while/ReadVariableOp"
  input: "sequential/lstm_2/while/strided_slice/stack"
  input: "sequential/lstm_2/while/strided_slice/stack_1"
  input: "sequential/lstm_2/while/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm_2/while/MatMul_4"
  op: "MatMul"
  input: "sequential/lstm_2/while/Identity_2"
  input: "sequential/lstm_2/while/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_2/while/add"
  op: "AddV2"
  input: "sequential/lstm_2/while/BiasAdd"
  input: "sequential/lstm_2/while/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/Const_2"
  op: "Const"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/Const_3"
  op: "Const"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/Mul_4"
  op: "Mul"
  input: "sequential/lstm_2/while/add"
  input: "sequential/lstm_2/while/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/Add_1"
  op: "Add"
  input: "sequential/lstm_2/while/Mul_4"
  input: "sequential/lstm_2/while/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/clip_by_value/Minimum/y"
  op: "Const"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/clip_by_value/Minimum"
  op: "Minimum"
  input: "sequential/lstm_2/while/Add_1"
  input: "sequential/lstm_2/while/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/clip_by_value/y"
  op: "Const"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/clip_by_value"
  op: "Maximum"
  input: "sequential/lstm_2/while/clip_by_value/Minimum"
  input: "sequential/lstm_2/while/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "sequential/lstm_2/while/ReadVariableOp/Enter"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_2/while/strided_slice_1/stack"
  op: "Const"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\203\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/strided_slice_1/stack_1"
  op: "Const"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\006\001\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/strided_slice_1/stack_2"
  op: "Const"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/strided_slice_1"
  op: "StridedSlice"
  input: "sequential/lstm_2/while/ReadVariableOp_1"
  input: "sequential/lstm_2/while/strided_slice_1/stack"
  input: "sequential/lstm_2/while/strided_slice_1/stack_1"
  input: "sequential/lstm_2/while/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm_2/while/MatMul_5"
  op: "MatMul"
  input: "sequential/lstm_2/while/Identity_2"
  input: "sequential/lstm_2/while/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_2/while/add_2"
  op: "AddV2"
  input: "sequential/lstm_2/while/BiasAdd_1"
  input: "sequential/lstm_2/while/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/Const_4"
  op: "Const"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/Const_5"
  op: "Const"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/Mul_5"
  op: "Mul"
  input: "sequential/lstm_2/while/add_2"
  input: "sequential/lstm_2/while/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/Add_3"
  op: "Add"
  input: "sequential/lstm_2/while/Mul_5"
  input: "sequential/lstm_2/while/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/clip_by_value_1/Minimum/y"
  op: "Const"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "sequential/lstm_2/while/Add_3"
  input: "sequential/lstm_2/while/clip_by_value_1/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/clip_by_value_1/y"
  op: "Const"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/clip_by_value_1"
  op: "Maximum"
  input: "sequential/lstm_2/while/clip_by_value_1/Minimum"
  input: "sequential/lstm_2/while/clip_by_value_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/mul_6"
  op: "Mul"
  input: "sequential/lstm_2/while/clip_by_value_1"
  input: "sequential/lstm_2/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "sequential/lstm_2/while/ReadVariableOp/Enter"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_2/while/strided_slice_2/stack"
  op: "Const"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\006\001\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/strided_slice_2/stack_1"
  op: "Const"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\211\001\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/strided_slice_2/stack_2"
  op: "Const"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/strided_slice_2"
  op: "StridedSlice"
  input: "sequential/lstm_2/while/ReadVariableOp_2"
  input: "sequential/lstm_2/while/strided_slice_2/stack"
  input: "sequential/lstm_2/while/strided_slice_2/stack_1"
  input: "sequential/lstm_2/while/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm_2/while/MatMul_6"
  op: "MatMul"
  input: "sequential/lstm_2/while/Identity_2"
  input: "sequential/lstm_2/while/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_2/while/add_4"
  op: "AddV2"
  input: "sequential/lstm_2/while/BiasAdd_2"
  input: "sequential/lstm_2/while/MatMul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/Tanh"
  op: "Tanh"
  input: "sequential/lstm_2/while/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/mul_7"
  op: "Mul"
  input: "sequential/lstm_2/while/clip_by_value"
  input: "sequential/lstm_2/while/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/add_5"
  op: "AddV2"
  input: "sequential/lstm_2/while/mul_6"
  input: "sequential/lstm_2/while/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "sequential/lstm_2/while/ReadVariableOp/Enter"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_2/while/strided_slice_3/stack"
  op: "Const"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\211\001\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/strided_slice_3/stack_1"
  op: "Const"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/strided_slice_3/stack_2"
  op: "Const"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/strided_slice_3"
  op: "StridedSlice"
  input: "sequential/lstm_2/while/ReadVariableOp_3"
  input: "sequential/lstm_2/while/strided_slice_3/stack"
  input: "sequential/lstm_2/while/strided_slice_3/stack_1"
  input: "sequential/lstm_2/while/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm_2/while/MatMul_7"
  op: "MatMul"
  input: "sequential/lstm_2/while/Identity_2"
  input: "sequential/lstm_2/while/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_2/while/add_6"
  op: "AddV2"
  input: "sequential/lstm_2/while/BiasAdd_3"
  input: "sequential/lstm_2/while/MatMul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/Const_6"
  op: "Const"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/Const_7"
  op: "Const"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/Mul_8"
  op: "Mul"
  input: "sequential/lstm_2/while/add_6"
  input: "sequential/lstm_2/while/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/Add_7"
  op: "Add"
  input: "sequential/lstm_2/while/Mul_8"
  input: "sequential/lstm_2/while/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/clip_by_value_2/Minimum/y"
  op: "Const"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/clip_by_value_2/Minimum"
  op: "Minimum"
  input: "sequential/lstm_2/while/Add_7"
  input: "sequential/lstm_2/while/clip_by_value_2/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/clip_by_value_2/y"
  op: "Const"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/clip_by_value_2"
  op: "Maximum"
  input: "sequential/lstm_2/while/clip_by_value_2/Minimum"
  input: "sequential/lstm_2/while/clip_by_value_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/Tanh_1"
  op: "Tanh"
  input: "sequential/lstm_2/while/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/mul_9"
  op: "Mul"
  input: "sequential/lstm_2/while/clip_by_value_2"
  input: "sequential/lstm_2/while/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "sequential/lstm_2/while/Identity"
  input: "sequential/lstm_2/while/mul_9"
  input: "sequential/lstm_2/while/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/mul_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "sequential/lstm_2/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/mul_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_2/while/add_8/y"
  op: "Const"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/add_8"
  op: "AddV2"
  input: "sequential/lstm_2/while/Identity"
  input: "sequential/lstm_2/while/add_8/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/NextIteration"
  op: "NextIteration"
  input: "sequential/lstm_2/while/add_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/NextIteration_1"
  op: "NextIteration"
  input: "sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/NextIteration_2"
  op: "NextIteration"
  input: "sequential/lstm_2/while/mul_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/NextIteration_3"
  op: "NextIteration"
  input: "sequential/lstm_2/while/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/Exit"
  op: "Exit"
  input: "sequential/lstm_2/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/Exit_1"
  op: "Exit"
  input: "sequential/lstm_2/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/Exit_2"
  op: "Exit"
  input: "sequential/lstm_2/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/while/Exit_3"
  op: "Exit"
  input: "sequential/lstm_2/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "sequential/lstm_2/TensorArray_1"
  input: "sequential/lstm_2/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_2/TensorArrayStack/range"
  op: "Range"
  input: "sequential/lstm_2/TensorArrayStack/range/start"
  input: "sequential/lstm_2/TensorArrayStack/TensorArraySizeV3"
  input: "sequential/lstm_2/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "sequential/lstm_2/TensorArray_1"
  input: "sequential/lstm_2/TensorArrayStack/range"
  input: "sequential/lstm_2/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 131
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/strided_slice_7/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "sequential/lstm_2/strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_2/strided_slice_7"
  op: "StridedSlice"
  input: "sequential/lstm_2/TensorArrayStack/TensorArrayGatherV3"
  input: "sequential/lstm_2/strided_slice_7/stack"
  input: "sequential/lstm_2/strided_slice_7/stack_1"
  input: "sequential/lstm_2/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "sequential/lstm_2/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_2/transpose_1"
  op: "Transpose"
  input: "sequential/lstm_2/TensorArrayStack/TensorArrayGatherV3"
  input: "sequential/lstm_2/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_3/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09570948779582977
      }
    }
  }
}
node {
  name: "sequential/lstm_3/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09570948779582977
      }
    }
  }
}
node {
  name: "sequential/lstm_3/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "sequential/lstm_3/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm_3/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "sequential/lstm_3/kernel/Initializer/random_uniform/max"
  input: "sequential/lstm_3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "sequential/lstm_3/kernel/Initializer/random_uniform/RandomUniform"
  input: "sequential/lstm_3/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/kernel/Initializer/random_uniform"
  op: "Add"
  input: "sequential/lstm_3/kernel/Initializer/random_uniform/mul"
  input: "sequential/lstm_3/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 131
        }
        dim {
          size: 524
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/lstm_3/kernel"
    }
  }
}
node {
  name: "sequential/lstm_3/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/kernel/Assign"
  op: "AssignVariableOp"
  input: "sequential/lstm_3/kernel"
  input: "sequential/lstm_3/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_3/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_3/recurrent_kernel/Initializer/random_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\002\000\000\203\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_3/recurrent_kernel/Initializer/random_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/recurrent_kernel/Initializer/random_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/recurrent_kernel/Initializer/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "sequential/lstm_3/recurrent_kernel/Initializer/random_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm_3/recurrent_kernel/Initializer/random_normal/mul"
  op: "Mul"
  input: "sequential/lstm_3/recurrent_kernel/Initializer/random_normal/RandomStandardNormal"
  input: "sequential/lstm_3/recurrent_kernel/Initializer/random_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/recurrent_kernel/Initializer/random_normal"
  op: "Add"
  input: "sequential/lstm_3/recurrent_kernel/Initializer/random_normal/mul"
  input: "sequential/lstm_3/recurrent_kernel/Initializer/random_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/recurrent_kernel/Initializer/Qr"
  op: "Qr"
  input: "sequential/lstm_3/recurrent_kernel/Initializer/random_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "full_matrices"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_3/recurrent_kernel/Initializer/DiagPart"
  op: "DiagPart"
  input: "sequential/lstm_3/recurrent_kernel/Initializer/Qr:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/recurrent_kernel/Initializer/Sign"
  op: "Sign"
  input: "sequential/lstm_3/recurrent_kernel/Initializer/DiagPart"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/recurrent_kernel/Initializer/mul"
  op: "Mul"
  input: "sequential/lstm_3/recurrent_kernel/Initializer/Qr"
  input: "sequential/lstm_3/recurrent_kernel/Initializer/Sign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/recurrent_kernel/Initializer/matrix_transpose/transpose/perm"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_3/recurrent_kernel/Initializer/matrix_transpose/transpose"
  op: "Transpose"
  input: "sequential/lstm_3/recurrent_kernel/Initializer/mul"
  input: "sequential/lstm_3/recurrent_kernel/Initializer/matrix_transpose/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/recurrent_kernel/Initializer/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_3/recurrent_kernel/Initializer/Reshape"
  op: "Reshape"
  input: "sequential/lstm_3/recurrent_kernel/Initializer/matrix_transpose/transpose"
  input: "sequential/lstm_3/recurrent_kernel/Initializer/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/recurrent_kernel/Initializer/mul_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/recurrent_kernel/Initializer/mul_1"
  op: "Mul"
  input: "sequential/lstm_3/recurrent_kernel/Initializer/mul_1/x"
  input: "sequential/lstm_3/recurrent_kernel/Initializer/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/recurrent_kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 131
        }
        dim {
          size: 524
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/lstm_3/recurrent_kernel"
    }
  }
}
node {
  name: "sequential/lstm_3/recurrent_kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_3/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/recurrent_kernel/Assign"
  op: "AssignVariableOp"
  input: "sequential/lstm_3/recurrent_kernel"
  input: "sequential/lstm_3/recurrent_kernel/Initializer/mul_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_3/recurrent_kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_3/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_3/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 131
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/bias/Initializer/ones"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 131
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/bias/Initializer/zeros_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 262
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 262
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/bias/Initializer/concat/axis"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/bias/Initializer/concat"
  op: "ConcatV2"
  input: "sequential/lstm_3/bias/Initializer/zeros"
  input: "sequential/lstm_3/bias/Initializer/ones"
  input: "sequential/lstm_3/bias/Initializer/zeros_1"
  input: "sequential/lstm_3/bias/Initializer/concat/axis"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 524
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/lstm_3/bias"
    }
  }
}
node {
  name: "sequential/lstm_3/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/bias/Assign"
  op: "AssignVariableOp"
  input: "sequential/lstm_3/bias"
  input: "sequential/lstm_3/bias/Initializer/concat"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_3/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_3/Shape"
  op: "Shape"
  input: "sequential/lstm_2/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_3/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_3/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_3/strided_slice"
  op: "StridedSlice"
  input: "sequential/lstm_3/Shape"
  input: "sequential/lstm_3/strided_slice/stack"
  input: "sequential/lstm_3/strided_slice/stack_1"
  input: "sequential/lstm_3/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "sequential/lstm_3/zeros/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 131
      }
    }
  }
}
node {
  name: "sequential/lstm_3/zeros/mul"
  op: "Mul"
  input: "sequential/lstm_3/strided_slice"
  input: "sequential/lstm_3/zeros/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/zeros/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "sequential/lstm_3/zeros/Less"
  op: "Less"
  input: "sequential/lstm_3/zeros/mul"
  input: "sequential/lstm_3/zeros/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/zeros/packed/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 131
      }
    }
  }
}
node {
  name: "sequential/lstm_3/zeros/packed"
  op: "Pack"
  input: "sequential/lstm_3/strided_slice"
  input: "sequential/lstm_3/zeros/packed/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm_3/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/zeros"
  op: "Fill"
  input: "sequential/lstm_3/zeros/packed"
  input: "sequential/lstm_3/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_3/zeros_1/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 131
      }
    }
  }
}
node {
  name: "sequential/lstm_3/zeros_1/mul"
  op: "Mul"
  input: "sequential/lstm_3/strided_slice"
  input: "sequential/lstm_3/zeros_1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/zeros_1/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "sequential/lstm_3/zeros_1/Less"
  op: "Less"
  input: "sequential/lstm_3/zeros_1/mul"
  input: "sequential/lstm_3/zeros_1/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/zeros_1/packed/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 131
      }
    }
  }
}
node {
  name: "sequential/lstm_3/zeros_1/packed"
  op: "Pack"
  input: "sequential/lstm_3/strided_slice"
  input: "sequential/lstm_3/zeros_1/packed/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm_3/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/zeros_1"
  op: "Fill"
  input: "sequential/lstm_3/zeros_1/packed"
  input: "sequential/lstm_3/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_3/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_3/transpose"
  op: "Transpose"
  input: "sequential/lstm_2/transpose_1"
  input: "sequential/lstm_3/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/Shape_1"
  op: "Shape"
  input: "sequential/lstm_3/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_3/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_3/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_3/strided_slice_1"
  op: "StridedSlice"
  input: "sequential/lstm_3/Shape_1"
  input: "sequential/lstm_3/strided_slice_1/stack"
  input: "sequential/lstm_3/strided_slice_1/stack_1"
  input: "sequential/lstm_3/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "sequential/lstm_3/TensorArray"
  op: "TensorArrayV3"
  input: "sequential/lstm_3/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "input_ta_0"
    }
  }
}
node {
  name: "sequential/lstm_3/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "sequential/lstm_3/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_3/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_3/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_3/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "sequential/lstm_3/TensorArrayUnstack/Shape"
  input: "sequential/lstm_3/TensorArrayUnstack/strided_slice/stack"
  input: "sequential/lstm_3/TensorArrayUnstack/strided_slice/stack_1"
  input: "sequential/lstm_3/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "sequential/lstm_3/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_3/TensorArrayUnstack/range"
  op: "Range"
  input: "sequential/lstm_3/TensorArrayUnstack/range/start"
  input: "sequential/lstm_3/TensorArrayUnstack/strided_slice"
  input: "sequential/lstm_3/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "sequential/lstm_3/TensorArray"
  input: "sequential/lstm_3/TensorArrayUnstack/range"
  input: "sequential/lstm_3/transpose"
  input: "sequential/lstm_3/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_3/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_3/strided_slice_2"
  op: "StridedSlice"
  input: "sequential/lstm_3/transpose"
  input: "sequential/lstm_3/strided_slice_2/stack"
  input: "sequential/lstm_3/strided_slice_2/stack_1"
  input: "sequential/lstm_3/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "sequential/lstm_3/ones_like/Shape"
  op: "Shape"
  input: "sequential/lstm_3/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_3/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/ones_like"
  op: "Fill"
  input: "sequential/lstm_3/ones_like/Shape"
  input: "sequential/lstm_3/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_3/cond/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond/switch_t"
  op: "Identity"
  input: "sequential/lstm_3/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond/switch_f"
  op: "Identity"
  input: "sequential/lstm_3/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond/dropout/rate"
  op: "Const"
  input: "^sequential/lstm_3/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3203999996185303
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond/dropout/Shape"
  op: "Shape"
  input: "sequential/lstm_3/cond/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_3/cond/dropout/Shape/Switch"
  op: "Switch"
  input: "sequential/lstm_3/ones_like"
  input: "sequential/lstm_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/ones_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond/dropout/random_uniform/min"
  op: "Const"
  input: "^sequential/lstm_3/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond/dropout/random_uniform/max"
  op: "Const"
  input: "^sequential/lstm_3/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "sequential/lstm_3/cond/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9698472
    }
  }
}
node {
  name: "sequential/lstm_3/cond/dropout/random_uniform/sub"
  op: "Sub"
  input: "sequential/lstm_3/cond/dropout/random_uniform/max"
  input: "sequential/lstm_3/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond/dropout/random_uniform/mul"
  op: "Mul"
  input: "sequential/lstm_3/cond/dropout/random_uniform/RandomUniform"
  input: "sequential/lstm_3/cond/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond/dropout/random_uniform"
  op: "Add"
  input: "sequential/lstm_3/cond/dropout/random_uniform/mul"
  input: "sequential/lstm_3/cond/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond/dropout/sub/x"
  op: "Const"
  input: "^sequential/lstm_3/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond/dropout/sub"
  op: "Sub"
  input: "sequential/lstm_3/cond/dropout/sub/x"
  input: "sequential/lstm_3/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond/dropout/truediv/x"
  op: "Const"
  input: "^sequential/lstm_3/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond/dropout/truediv"
  op: "RealDiv"
  input: "sequential/lstm_3/cond/dropout/truediv/x"
  input: "sequential/lstm_3/cond/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "sequential/lstm_3/cond/dropout/random_uniform"
  input: "sequential/lstm_3/cond/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond/dropout/mul"
  op: "Mul"
  input: "sequential/lstm_3/cond/dropout/Shape/Switch:1"
  input: "sequential/lstm_3/cond/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond/dropout/Cast"
  op: "Cast"
  input: "sequential/lstm_3/cond/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond/dropout/mul_1"
  op: "Mul"
  input: "sequential/lstm_3/cond/dropout/mul"
  input: "sequential/lstm_3/cond/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond/Switch_1"
  op: "Switch"
  input: "sequential/lstm_3/ones_like"
  input: "sequential/lstm_3/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/ones_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond/Merge"
  op: "Merge"
  input: "sequential/lstm_3/cond/Switch_1"
  input: "sequential/lstm_3/cond/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_1/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_1/switch_t"
  op: "Identity"
  input: "sequential/lstm_3/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_1/switch_f"
  op: "Identity"
  input: "sequential/lstm_3/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_1/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_1/dropout/rate"
  op: "Const"
  input: "^sequential/lstm_3/cond_1/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3203999996185303
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_1/dropout/Shape"
  op: "Shape"
  input: "sequential/lstm_3/cond_1/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_3/cond_1/dropout/Shape/Switch"
  op: "Switch"
  input: "sequential/lstm_3/ones_like"
  input: "sequential/lstm_3/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/ones_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_1/dropout/random_uniform/min"
  op: "Const"
  input: "^sequential/lstm_3/cond_1/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_1/dropout/random_uniform/max"
  op: "Const"
  input: "^sequential/lstm_3/cond_1/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_1/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "sequential/lstm_3/cond_1/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7253133
    }
  }
}
node {
  name: "sequential/lstm_3/cond_1/dropout/random_uniform/sub"
  op: "Sub"
  input: "sequential/lstm_3/cond_1/dropout/random_uniform/max"
  input: "sequential/lstm_3/cond_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_1/dropout/random_uniform/mul"
  op: "Mul"
  input: "sequential/lstm_3/cond_1/dropout/random_uniform/RandomUniform"
  input: "sequential/lstm_3/cond_1/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_1/dropout/random_uniform"
  op: "Add"
  input: "sequential/lstm_3/cond_1/dropout/random_uniform/mul"
  input: "sequential/lstm_3/cond_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_1/dropout/sub/x"
  op: "Const"
  input: "^sequential/lstm_3/cond_1/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_1/dropout/sub"
  op: "Sub"
  input: "sequential/lstm_3/cond_1/dropout/sub/x"
  input: "sequential/lstm_3/cond_1/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_1/dropout/truediv/x"
  op: "Const"
  input: "^sequential/lstm_3/cond_1/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_1/dropout/truediv"
  op: "RealDiv"
  input: "sequential/lstm_3/cond_1/dropout/truediv/x"
  input: "sequential/lstm_3/cond_1/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_1/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "sequential/lstm_3/cond_1/dropout/random_uniform"
  input: "sequential/lstm_3/cond_1/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_1/dropout/mul"
  op: "Mul"
  input: "sequential/lstm_3/cond_1/dropout/Shape/Switch:1"
  input: "sequential/lstm_3/cond_1/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_1/dropout/Cast"
  op: "Cast"
  input: "sequential/lstm_3/cond_1/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_1/dropout/mul_1"
  op: "Mul"
  input: "sequential/lstm_3/cond_1/dropout/mul"
  input: "sequential/lstm_3/cond_1/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_1/Switch_1"
  op: "Switch"
  input: "sequential/lstm_3/ones_like"
  input: "sequential/lstm_3/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/ones_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_1/Merge"
  op: "Merge"
  input: "sequential/lstm_3/cond_1/Switch_1"
  input: "sequential/lstm_3/cond_1/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_2/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_2/switch_t"
  op: "Identity"
  input: "sequential/lstm_3/cond_2/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_2/switch_f"
  op: "Identity"
  input: "sequential/lstm_3/cond_2/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_2/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_2/dropout/rate"
  op: "Const"
  input: "^sequential/lstm_3/cond_2/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3203999996185303
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_2/dropout/Shape"
  op: "Shape"
  input: "sequential/lstm_3/cond_2/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_3/cond_2/dropout/Shape/Switch"
  op: "Switch"
  input: "sequential/lstm_3/ones_like"
  input: "sequential/lstm_3/cond_2/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/ones_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_2/dropout/random_uniform/min"
  op: "Const"
  input: "^sequential/lstm_3/cond_2/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_2/dropout/random_uniform/max"
  op: "Const"
  input: "^sequential/lstm_3/cond_2/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_2/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "sequential/lstm_3/cond_2/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 1415328
    }
  }
}
node {
  name: "sequential/lstm_3/cond_2/dropout/random_uniform/sub"
  op: "Sub"
  input: "sequential/lstm_3/cond_2/dropout/random_uniform/max"
  input: "sequential/lstm_3/cond_2/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_2/dropout/random_uniform/mul"
  op: "Mul"
  input: "sequential/lstm_3/cond_2/dropout/random_uniform/RandomUniform"
  input: "sequential/lstm_3/cond_2/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_2/dropout/random_uniform"
  op: "Add"
  input: "sequential/lstm_3/cond_2/dropout/random_uniform/mul"
  input: "sequential/lstm_3/cond_2/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_2/dropout/sub/x"
  op: "Const"
  input: "^sequential/lstm_3/cond_2/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_2/dropout/sub"
  op: "Sub"
  input: "sequential/lstm_3/cond_2/dropout/sub/x"
  input: "sequential/lstm_3/cond_2/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_2/dropout/truediv/x"
  op: "Const"
  input: "^sequential/lstm_3/cond_2/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_2/dropout/truediv"
  op: "RealDiv"
  input: "sequential/lstm_3/cond_2/dropout/truediv/x"
  input: "sequential/lstm_3/cond_2/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_2/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "sequential/lstm_3/cond_2/dropout/random_uniform"
  input: "sequential/lstm_3/cond_2/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_2/dropout/mul"
  op: "Mul"
  input: "sequential/lstm_3/cond_2/dropout/Shape/Switch:1"
  input: "sequential/lstm_3/cond_2/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_2/dropout/Cast"
  op: "Cast"
  input: "sequential/lstm_3/cond_2/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_2/dropout/mul_1"
  op: "Mul"
  input: "sequential/lstm_3/cond_2/dropout/mul"
  input: "sequential/lstm_3/cond_2/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_2/Switch_1"
  op: "Switch"
  input: "sequential/lstm_3/ones_like"
  input: "sequential/lstm_3/cond_2/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/ones_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_2/Merge"
  op: "Merge"
  input: "sequential/lstm_3/cond_2/Switch_1"
  input: "sequential/lstm_3/cond_2/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_3/Switch"
  op: "Switch"
  input: "keras_learning_phase"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_3/switch_t"
  op: "Identity"
  input: "sequential/lstm_3/cond_3/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_3/switch_f"
  op: "Identity"
  input: "sequential/lstm_3/cond_3/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_3/pred_id"
  op: "Identity"
  input: "keras_learning_phase"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_3/dropout/rate"
  op: "Const"
  input: "^sequential/lstm_3/cond_3/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.3203999996185303
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_3/dropout/Shape"
  op: "Shape"
  input: "sequential/lstm_3/cond_3/dropout/Shape/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_3/cond_3/dropout/Shape/Switch"
  op: "Switch"
  input: "sequential/lstm_3/ones_like"
  input: "sequential/lstm_3/cond_3/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/ones_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_3/dropout/random_uniform/min"
  op: "Const"
  input: "^sequential/lstm_3/cond_3/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_3/dropout/random_uniform/max"
  op: "Const"
  input: "^sequential/lstm_3/cond_3/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_3/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "sequential/lstm_3/cond_3/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5665679
    }
  }
}
node {
  name: "sequential/lstm_3/cond_3/dropout/random_uniform/sub"
  op: "Sub"
  input: "sequential/lstm_3/cond_3/dropout/random_uniform/max"
  input: "sequential/lstm_3/cond_3/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_3/dropout/random_uniform/mul"
  op: "Mul"
  input: "sequential/lstm_3/cond_3/dropout/random_uniform/RandomUniform"
  input: "sequential/lstm_3/cond_3/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_3/dropout/random_uniform"
  op: "Add"
  input: "sequential/lstm_3/cond_3/dropout/random_uniform/mul"
  input: "sequential/lstm_3/cond_3/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_3/dropout/sub/x"
  op: "Const"
  input: "^sequential/lstm_3/cond_3/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_3/dropout/sub"
  op: "Sub"
  input: "sequential/lstm_3/cond_3/dropout/sub/x"
  input: "sequential/lstm_3/cond_3/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_3/dropout/truediv/x"
  op: "Const"
  input: "^sequential/lstm_3/cond_3/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_3/dropout/truediv"
  op: "RealDiv"
  input: "sequential/lstm_3/cond_3/dropout/truediv/x"
  input: "sequential/lstm_3/cond_3/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_3/dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "sequential/lstm_3/cond_3/dropout/random_uniform"
  input: "sequential/lstm_3/cond_3/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_3/dropout/mul"
  op: "Mul"
  input: "sequential/lstm_3/cond_3/dropout/Shape/Switch:1"
  input: "sequential/lstm_3/cond_3/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_3/dropout/Cast"
  op: "Cast"
  input: "sequential/lstm_3/cond_3/dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_3/dropout/mul_1"
  op: "Mul"
  input: "sequential/lstm_3/cond_3/dropout/mul"
  input: "sequential/lstm_3/cond_3/dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_3/Switch_1"
  op: "Switch"
  input: "sequential/lstm_3/ones_like"
  input: "sequential/lstm_3/cond_3/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/ones_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/cond_3/Merge"
  op: "Merge"
  input: "sequential/lstm_3/cond_3/Switch_1"
  input: "sequential/lstm_3/cond_3/dropout/mul_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/mul"
  op: "Mul"
  input: "sequential/lstm_3/strided_slice_2"
  input: "sequential/lstm_3/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/mul_1"
  op: "Mul"
  input: "sequential/lstm_3/strided_slice_2"
  input: "sequential/lstm_3/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/mul_2"
  op: "Mul"
  input: "sequential/lstm_3/strided_slice_2"
  input: "sequential/lstm_3/cond_2/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/mul_3"
  op: "Mul"
  input: "sequential/lstm_3/strided_slice_2"
  input: "sequential/lstm_3/cond_3/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "sequential/lstm_3/split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_3/split/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_3/split"
  op: "Split"
  input: "sequential/lstm_3/split/split_dim"
  input: "sequential/lstm_3/split/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "sequential/lstm_3/MatMul"
  op: "MatMul"
  input: "sequential/lstm_3/mul"
  input: "sequential/lstm_3/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_3/MatMul_1"
  op: "MatMul"
  input: "sequential/lstm_3/mul_1"
  input: "sequential/lstm_3/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_3/MatMul_2"
  op: "MatMul"
  input: "sequential/lstm_3/mul_2"
  input: "sequential/lstm_3/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_3/MatMul_3"
  op: "MatMul"
  input: "sequential/lstm_3/mul_3"
  input: "sequential/lstm_3/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_3/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "sequential/lstm_3/split_1/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/split_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_3/split_1"
  op: "Split"
  input: "sequential/lstm_3/split_1/split_dim"
  input: "sequential/lstm_3/split_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "sequential/lstm_3/BiasAdd"
  op: "BiasAdd"
  input: "sequential/lstm_3/MatMul"
  input: "sequential/lstm_3/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/lstm_3/BiasAdd_1"
  op: "BiasAdd"
  input: "sequential/lstm_3/MatMul_1"
  input: "sequential/lstm_3/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/lstm_3/BiasAdd_2"
  op: "BiasAdd"
  input: "sequential/lstm_3/MatMul_2"
  input: "sequential/lstm_3/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/lstm_3/BiasAdd_3"
  op: "BiasAdd"
  input: "sequential/lstm_3/MatMul_3"
  input: "sequential/lstm_3/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/lstm_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_3/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_3/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_3/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\203\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_3/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_3/strided_slice_3"
  op: "StridedSlice"
  input: "sequential/lstm_3/ReadVariableOp"
  input: "sequential/lstm_3/strided_slice_3/stack"
  input: "sequential/lstm_3/strided_slice_3/stack_1"
  input: "sequential/lstm_3/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm_3/MatMul_4"
  op: "MatMul"
  input: "sequential/lstm_3/zeros"
  input: "sequential/lstm_3/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_3/add"
  op: "AddV2"
  input: "sequential/lstm_3/BiasAdd"
  input: "sequential/lstm_3/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "sequential/lstm_3/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "sequential/lstm_3/Mul_4"
  op: "Mul"
  input: "sequential/lstm_3/add"
  input: "sequential/lstm_3/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/Add_1"
  op: "Add"
  input: "sequential/lstm_3/Mul_4"
  input: "sequential/lstm_3/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/clip_by_value/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/clip_by_value/Minimum"
  op: "Minimum"
  input: "sequential/lstm_3/Add_1"
  input: "sequential/lstm_3/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/clip_by_value/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/clip_by_value"
  op: "Maximum"
  input: "sequential/lstm_3/clip_by_value/Minimum"
  input: "sequential/lstm_3/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "sequential/lstm_3/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_3/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\203\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_3/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\006\001\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_3/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_3/strided_slice_4"
  op: "StridedSlice"
  input: "sequential/lstm_3/ReadVariableOp_1"
  input: "sequential/lstm_3/strided_slice_4/stack"
  input: "sequential/lstm_3/strided_slice_4/stack_1"
  input: "sequential/lstm_3/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm_3/MatMul_5"
  op: "MatMul"
  input: "sequential/lstm_3/zeros"
  input: "sequential/lstm_3/strided_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_3/add_2"
  op: "AddV2"
  input: "sequential/lstm_3/BiasAdd_1"
  input: "sequential/lstm_3/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "sequential/lstm_3/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "sequential/lstm_3/Mul_5"
  op: "Mul"
  input: "sequential/lstm_3/add_2"
  input: "sequential/lstm_3/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/Add_3"
  op: "Add"
  input: "sequential/lstm_3/Mul_5"
  input: "sequential/lstm_3/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/clip_by_value_1/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "sequential/lstm_3/Add_3"
  input: "sequential/lstm_3/clip_by_value_1/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/clip_by_value_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/clip_by_value_1"
  op: "Maximum"
  input: "sequential/lstm_3/clip_by_value_1/Minimum"
  input: "sequential/lstm_3/clip_by_value_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/mul_6"
  op: "Mul"
  input: "sequential/lstm_3/clip_by_value_1"
  input: "sequential/lstm_3/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "sequential/lstm_3/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_3/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\006\001\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_3/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\211\001\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_3/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_3/strided_slice_5"
  op: "StridedSlice"
  input: "sequential/lstm_3/ReadVariableOp_2"
  input: "sequential/lstm_3/strided_slice_5/stack"
  input: "sequential/lstm_3/strided_slice_5/stack_1"
  input: "sequential/lstm_3/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm_3/MatMul_6"
  op: "MatMul"
  input: "sequential/lstm_3/zeros"
  input: "sequential/lstm_3/strided_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_3/add_4"
  op: "AddV2"
  input: "sequential/lstm_3/BiasAdd_2"
  input: "sequential/lstm_3/MatMul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/Tanh"
  op: "Tanh"
  input: "sequential/lstm_3/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/mul_7"
  op: "Mul"
  input: "sequential/lstm_3/clip_by_value"
  input: "sequential/lstm_3/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/add_5"
  op: "AddV2"
  input: "sequential/lstm_3/mul_6"
  input: "sequential/lstm_3/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "sequential/lstm_3/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_3/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\211\001\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_3/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_3/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_3/strided_slice_6"
  op: "StridedSlice"
  input: "sequential/lstm_3/ReadVariableOp_3"
  input: "sequential/lstm_3/strided_slice_6/stack"
  input: "sequential/lstm_3/strided_slice_6/stack_1"
  input: "sequential/lstm_3/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm_3/MatMul_7"
  op: "MatMul"
  input: "sequential/lstm_3/zeros"
  input: "sequential/lstm_3/strided_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_3/add_6"
  op: "AddV2"
  input: "sequential/lstm_3/BiasAdd_3"
  input: "sequential/lstm_3/MatMul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "sequential/lstm_3/Const_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "sequential/lstm_3/Mul_8"
  op: "Mul"
  input: "sequential/lstm_3/add_6"
  input: "sequential/lstm_3/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/Add_7"
  op: "Add"
  input: "sequential/lstm_3/Mul_8"
  input: "sequential/lstm_3/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/clip_by_value_2/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/clip_by_value_2/Minimum"
  op: "Minimum"
  input: "sequential/lstm_3/Add_7"
  input: "sequential/lstm_3/clip_by_value_2/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/clip_by_value_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/clip_by_value_2"
  op: "Maximum"
  input: "sequential/lstm_3/clip_by_value_2/Minimum"
  input: "sequential/lstm_3/clip_by_value_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/Tanh_1"
  op: "Tanh"
  input: "sequential/lstm_3/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/mul_9"
  op: "Mul"
  input: "sequential/lstm_3/clip_by_value_2"
  input: "sequential/lstm_3/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/TensorArray_1"
  op: "TensorArrayV3"
  input: "sequential/lstm_3/strided_slice_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 131
        }
      }
    }
  }
  attr {
    key: "identical_element_shapes"
    value {
      b: true
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "output_ta_0"
    }
  }
}
node {
  name: "sequential/lstm_3/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/Enter"
  op: "Enter"
  input: "sequential/lstm_3/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_3/while/Enter_1"
  op: "Enter"
  input: "sequential/lstm_3/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_3/while/Enter_2"
  op: "Enter"
  input: "sequential/lstm_3/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_3/while/Enter_3"
  op: "Enter"
  input: "sequential/lstm_3/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_3/while/Merge"
  op: "Merge"
  input: "sequential/lstm_3/while/Enter"
  input: "sequential/lstm_3/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/Merge_1"
  op: "Merge"
  input: "sequential/lstm_3/while/Enter_1"
  input: "sequential/lstm_3/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/Merge_2"
  op: "Merge"
  input: "sequential/lstm_3/while/Enter_2"
  input: "sequential/lstm_3/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/Merge_3"
  op: "Merge"
  input: "sequential/lstm_3/while/Enter_3"
  input: "sequential/lstm_3/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/Less"
  op: "Less"
  input: "sequential/lstm_3/while/Merge"
  input: "sequential/lstm_3/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/Less/Enter"
  op: "Enter"
  input: "sequential/lstm_3/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_3/while/LoopCond"
  op: "LoopCond"
  input: "sequential/lstm_3/while/Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/Switch"
  op: "Switch"
  input: "sequential/lstm_3/while/Merge"
  input: "sequential/lstm_3/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/Switch_1"
  op: "Switch"
  input: "sequential/lstm_3/while/Merge_1"
  input: "sequential/lstm_3/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/Switch_2"
  op: "Switch"
  input: "sequential/lstm_3/while/Merge_2"
  input: "sequential/lstm_3/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/Switch_3"
  op: "Switch"
  input: "sequential/lstm_3/while/Merge_3"
  input: "sequential/lstm_3/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/Identity"
  op: "Identity"
  input: "sequential/lstm_3/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/Identity_1"
  op: "Identity"
  input: "sequential/lstm_3/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/Identity_2"
  op: "Identity"
  input: "sequential/lstm_3/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/Identity_3"
  op: "Identity"
  input: "sequential/lstm_3/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "sequential/lstm_3/while/TensorArrayReadV3/Enter"
  input: "sequential/lstm_3/while/Identity"
  input: "sequential/lstm_3/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_3/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "sequential/lstm_3/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_3/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "sequential/lstm_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_3/while/mul"
  op: "Mul"
  input: "sequential/lstm_3/while/TensorArrayReadV3"
  input: "sequential/lstm_3/while/mul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/mul/Enter"
  op: "Enter"
  input: "sequential/lstm_3/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_3/while/mul_1"
  op: "Mul"
  input: "sequential/lstm_3/while/TensorArrayReadV3"
  input: "sequential/lstm_3/while/mul_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/mul_1/Enter"
  op: "Enter"
  input: "sequential/lstm_3/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_3/while/mul_2"
  op: "Mul"
  input: "sequential/lstm_3/while/TensorArrayReadV3"
  input: "sequential/lstm_3/while/mul_2/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/mul_2/Enter"
  op: "Enter"
  input: "sequential/lstm_3/cond_2/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_3/while/mul_3"
  op: "Mul"
  input: "sequential/lstm_3/while/TensorArrayReadV3"
  input: "sequential/lstm_3/while/mul_3/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/mul_3/Enter"
  op: "Enter"
  input: "sequential/lstm_3/cond_3/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_3/while/Const"
  op: "Const"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/split/split_dim"
  op: "Const"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/split/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_3/while/split/ReadVariableOp/Enter"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_3/while/split/ReadVariableOp/Enter"
  op: "Enter"
  input: "sequential/lstm_3/kernel"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_3/while/split"
  op: "Split"
  input: "sequential/lstm_3/while/split/split_dim"
  input: "sequential/lstm_3/while/split/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "sequential/lstm_3/while/MatMul"
  op: "MatMul"
  input: "sequential/lstm_3/while/mul"
  input: "sequential/lstm_3/while/split"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_3/while/MatMul_1"
  op: "MatMul"
  input: "sequential/lstm_3/while/mul_1"
  input: "sequential/lstm_3/while/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_3/while/MatMul_2"
  op: "MatMul"
  input: "sequential/lstm_3/while/mul_2"
  input: "sequential/lstm_3/while/split:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_3/while/MatMul_3"
  op: "MatMul"
  input: "sequential/lstm_3/while/mul_3"
  input: "sequential/lstm_3/while/split:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_3/while/Const_1"
  op: "Const"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/split_1/split_dim"
  op: "Const"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/split_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_3/while/split_1/ReadVariableOp/Enter"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_3/while/split_1/ReadVariableOp/Enter"
  op: "Enter"
  input: "sequential/lstm_3/bias"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_3/while/split_1"
  op: "Split"
  input: "sequential/lstm_3/while/split_1/split_dim"
  input: "sequential/lstm_3/while/split_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 4
    }
  }
}
node {
  name: "sequential/lstm_3/while/BiasAdd"
  op: "BiasAdd"
  input: "sequential/lstm_3/while/MatMul"
  input: "sequential/lstm_3/while/split_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/lstm_3/while/BiasAdd_1"
  op: "BiasAdd"
  input: "sequential/lstm_3/while/MatMul_1"
  input: "sequential/lstm_3/while/split_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/lstm_3/while/BiasAdd_2"
  op: "BiasAdd"
  input: "sequential/lstm_3/while/MatMul_2"
  input: "sequential/lstm_3/while/split_1:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/lstm_3/while/BiasAdd_3"
  op: "BiasAdd"
  input: "sequential/lstm_3/while/MatMul_3"
  input: "sequential/lstm_3/while/split_1:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "sequential/lstm_3/while/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_3/while/ReadVariableOp/Enter"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_3/while/ReadVariableOp/Enter"
  op: "Enter"
  input: "sequential/lstm_3/recurrent_kernel"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_3/while/strided_slice/stack"
  op: "Const"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/strided_slice/stack_1"
  op: "Const"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\203\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/strided_slice/stack_2"
  op: "Const"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/strided_slice"
  op: "StridedSlice"
  input: "sequential/lstm_3/while/ReadVariableOp"
  input: "sequential/lstm_3/while/strided_slice/stack"
  input: "sequential/lstm_3/while/strided_slice/stack_1"
  input: "sequential/lstm_3/while/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm_3/while/MatMul_4"
  op: "MatMul"
  input: "sequential/lstm_3/while/Identity_2"
  input: "sequential/lstm_3/while/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_3/while/add"
  op: "AddV2"
  input: "sequential/lstm_3/while/BiasAdd"
  input: "sequential/lstm_3/while/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/Const_2"
  op: "Const"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/Const_3"
  op: "Const"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/Mul_4"
  op: "Mul"
  input: "sequential/lstm_3/while/add"
  input: "sequential/lstm_3/while/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/Add_1"
  op: "Add"
  input: "sequential/lstm_3/while/Mul_4"
  input: "sequential/lstm_3/while/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/clip_by_value/Minimum/y"
  op: "Const"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/clip_by_value/Minimum"
  op: "Minimum"
  input: "sequential/lstm_3/while/Add_1"
  input: "sequential/lstm_3/while/clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/clip_by_value/y"
  op: "Const"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/clip_by_value"
  op: "Maximum"
  input: "sequential/lstm_3/while/clip_by_value/Minimum"
  input: "sequential/lstm_3/while/clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "sequential/lstm_3/while/ReadVariableOp/Enter"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_3/while/strided_slice_1/stack"
  op: "Const"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\203\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/strided_slice_1/stack_1"
  op: "Const"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\006\001\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/strided_slice_1/stack_2"
  op: "Const"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/strided_slice_1"
  op: "StridedSlice"
  input: "sequential/lstm_3/while/ReadVariableOp_1"
  input: "sequential/lstm_3/while/strided_slice_1/stack"
  input: "sequential/lstm_3/while/strided_slice_1/stack_1"
  input: "sequential/lstm_3/while/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm_3/while/MatMul_5"
  op: "MatMul"
  input: "sequential/lstm_3/while/Identity_2"
  input: "sequential/lstm_3/while/strided_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_3/while/add_2"
  op: "AddV2"
  input: "sequential/lstm_3/while/BiasAdd_1"
  input: "sequential/lstm_3/while/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/Const_4"
  op: "Const"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/Const_5"
  op: "Const"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/Mul_5"
  op: "Mul"
  input: "sequential/lstm_3/while/add_2"
  input: "sequential/lstm_3/while/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/Add_3"
  op: "Add"
  input: "sequential/lstm_3/while/Mul_5"
  input: "sequential/lstm_3/while/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/clip_by_value_1/Minimum/y"
  op: "Const"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/clip_by_value_1/Minimum"
  op: "Minimum"
  input: "sequential/lstm_3/while/Add_3"
  input: "sequential/lstm_3/while/clip_by_value_1/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/clip_by_value_1/y"
  op: "Const"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/clip_by_value_1"
  op: "Maximum"
  input: "sequential/lstm_3/while/clip_by_value_1/Minimum"
  input: "sequential/lstm_3/while/clip_by_value_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/mul_6"
  op: "Mul"
  input: "sequential/lstm_3/while/clip_by_value_1"
  input: "sequential/lstm_3/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "sequential/lstm_3/while/ReadVariableOp/Enter"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_3/while/strided_slice_2/stack"
  op: "Const"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\006\001\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/strided_slice_2/stack_1"
  op: "Const"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\211\001\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/strided_slice_2/stack_2"
  op: "Const"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/strided_slice_2"
  op: "StridedSlice"
  input: "sequential/lstm_3/while/ReadVariableOp_2"
  input: "sequential/lstm_3/while/strided_slice_2/stack"
  input: "sequential/lstm_3/while/strided_slice_2/stack_1"
  input: "sequential/lstm_3/while/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm_3/while/MatMul_6"
  op: "MatMul"
  input: "sequential/lstm_3/while/Identity_2"
  input: "sequential/lstm_3/while/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_3/while/add_4"
  op: "AddV2"
  input: "sequential/lstm_3/while/BiasAdd_2"
  input: "sequential/lstm_3/while/MatMul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/Tanh"
  op: "Tanh"
  input: "sequential/lstm_3/while/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/mul_7"
  op: "Mul"
  input: "sequential/lstm_3/while/clip_by_value"
  input: "sequential/lstm_3/while/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/add_5"
  op: "AddV2"
  input: "sequential/lstm_3/while/mul_6"
  input: "sequential/lstm_3/while/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "sequential/lstm_3/while/ReadVariableOp/Enter"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_3/while/strided_slice_3/stack"
  op: "Const"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\211\001\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/strided_slice_3/stack_1"
  op: "Const"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/strided_slice_3/stack_2"
  op: "Const"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/strided_slice_3"
  op: "StridedSlice"
  input: "sequential/lstm_3/while/ReadVariableOp_3"
  input: "sequential/lstm_3/while/strided_slice_3/stack"
  input: "sequential/lstm_3/while/strided_slice_3/stack_1"
  input: "sequential/lstm_3/while/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/lstm_3/while/MatMul_7"
  op: "MatMul"
  input: "sequential/lstm_3/while/Identity_2"
  input: "sequential/lstm_3/while/strided_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/lstm_3/while/add_6"
  op: "AddV2"
  input: "sequential/lstm_3/while/BiasAdd_3"
  input: "sequential/lstm_3/while/MatMul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/Const_6"
  op: "Const"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/Const_7"
  op: "Const"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/Mul_8"
  op: "Mul"
  input: "sequential/lstm_3/while/add_6"
  input: "sequential/lstm_3/while/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/Add_7"
  op: "Add"
  input: "sequential/lstm_3/while/Mul_8"
  input: "sequential/lstm_3/while/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/clip_by_value_2/Minimum/y"
  op: "Const"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/clip_by_value_2/Minimum"
  op: "Minimum"
  input: "sequential/lstm_3/while/Add_7"
  input: "sequential/lstm_3/while/clip_by_value_2/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/clip_by_value_2/y"
  op: "Const"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/clip_by_value_2"
  op: "Maximum"
  input: "sequential/lstm_3/while/clip_by_value_2/Minimum"
  input: "sequential/lstm_3/while/clip_by_value_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/Tanh_1"
  op: "Tanh"
  input: "sequential/lstm_3/while/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/mul_9"
  op: "Mul"
  input: "sequential/lstm_3/while/clip_by_value_2"
  input: "sequential/lstm_3/while/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "sequential/lstm_3/while/Identity"
  input: "sequential/lstm_3/while/mul_9"
  input: "sequential/lstm_3/while/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/mul_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "sequential/lstm_3/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/mul_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "sequential/lstm_3/while/add_8/y"
  op: "Const"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/add_8"
  op: "AddV2"
  input: "sequential/lstm_3/while/Identity"
  input: "sequential/lstm_3/while/add_8/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/NextIteration"
  op: "NextIteration"
  input: "sequential/lstm_3/while/add_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/NextIteration_1"
  op: "NextIteration"
  input: "sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/NextIteration_2"
  op: "NextIteration"
  input: "sequential/lstm_3/while/mul_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/NextIteration_3"
  op: "NextIteration"
  input: "sequential/lstm_3/while/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/Exit"
  op: "Exit"
  input: "sequential/lstm_3/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/Exit_1"
  op: "Exit"
  input: "sequential/lstm_3/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/Exit_2"
  op: "Exit"
  input: "sequential/lstm_3/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/while/Exit_3"
  op: "Exit"
  input: "sequential/lstm_3/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "sequential/lstm_3/TensorArray_1"
  input: "sequential/lstm_3/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_3/TensorArrayStack/range"
  op: "Range"
  input: "sequential/lstm_3/TensorArrayStack/range/start"
  input: "sequential/lstm_3/TensorArrayStack/TensorArraySizeV3"
  input: "sequential/lstm_3/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "sequential/lstm_3/TensorArray_1"
  input: "sequential/lstm_3/TensorArrayStack/range"
  input: "sequential/lstm_3/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 131
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/strided_slice_7/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "sequential/lstm_3/strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/lstm_3/strided_slice_7"
  op: "StridedSlice"
  input: "sequential/lstm_3/TensorArrayStack/TensorArrayGatherV3"
  input: "sequential/lstm_3/strided_slice_7/stack"
  input: "sequential/lstm_3/strided_slice_7/stack_1"
  input: "sequential/lstm_3/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "sequential/lstm_3/transpose_1/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_3/transpose_1"
  op: "Transpose"
  input: "sequential/lstm_3/TensorArrayStack/TensorArrayGatherV3"
  input: "sequential/lstm_3/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "sequential/flatten/Shape"
  op: "Shape"
  input: "sequential/lstm_3/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/flatten/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sequential/flatten/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/flatten/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "sequential/flatten/strided_slice"
  op: "StridedSlice"
  input: "sequential/flatten/Shape"
  input: "sequential/flatten/strided_slice/stack"
  input: "sequential/flatten/strided_slice/stack_1"
  input: "sequential/flatten/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "sequential/flatten/Reshape/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "sequential/flatten/Reshape/shape"
  op: "Pack"
  input: "sequential/flatten/strided_slice"
  input: "sequential/flatten/Reshape/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/flatten/Reshape"
  op: "Reshape"
  input: "sequential/lstm_3/transpose_1"
  input: "sequential/flatten/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 655
          }
        }
      }
    }
  }
}
node {
  name: "sequential/dense/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\217\002\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/dense/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0951303020119667
      }
    }
  }
}
node {
  name: "sequential/dense/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0951303020119667
      }
    }
  }
}
node {
  name: "sequential/dense/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "sequential/dense/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 655
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential/dense/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "sequential/dense/kernel/Initializer/random_uniform/max"
  input: "sequential/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/dense/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "sequential/dense/kernel/Initializer/random_uniform/RandomUniform"
  input: "sequential/dense/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 655
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "sequential/dense/kernel/Initializer/random_uniform"
  op: "Add"
  input: "sequential/dense/kernel/Initializer/random_uniform/mul"
  input: "sequential/dense/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 655
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "sequential/dense/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 655
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/dense/kernel"
    }
  }
}
node {
  name: "sequential/dense/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/dense/kernel/Assign"
  op: "AssignVariableOp"
  input: "sequential/dense/kernel"
  input: "sequential/dense/kernel/Initializer/random_uniform"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/dense/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 655
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/dense/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/dense/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/dense/bias"
    }
  }
}
node {
  name: "sequential/dense/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/dense/bias/Assign"
  op: "AssignVariableOp"
  input: "sequential/dense/bias"
  input: "sequential/dense/bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/dense/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/dense/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 655
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/dense/MatMul"
  op: "MatMul"
  input: "sequential/flatten/Reshape"
  input: "sequential/dense/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential/dense/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/dense/BiasAdd"
  op: "BiasAdd"
  input: "sequential/dense/MatMul"
  input: "sequential/dense/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Sigmoid"
  op: "Sigmoid"
  input: "sequential/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/Cast"
  op: "Cast"
  input: "IteratorGetNext:5"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/xentropy/zeros_like"
  op: "ZerosLike"
  input: "sequential/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/xentropy/GreaterEqual"
  op: "GreaterEqual"
  input: "sequential/dense/BiasAdd"
  input: "sigmoid_cross_entropy_loss/xentropy/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/xentropy/Select"
  op: "Select"
  input: "sigmoid_cross_entropy_loss/xentropy/GreaterEqual"
  input: "sequential/dense/BiasAdd"
  input: "sigmoid_cross_entropy_loss/xentropy/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/xentropy/Neg"
  op: "Neg"
  input: "sequential/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/xentropy/Select_1"
  op: "Select"
  input: "sigmoid_cross_entropy_loss/xentropy/GreaterEqual"
  input: "sigmoid_cross_entropy_loss/xentropy/Neg"
  input: "sequential/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/xentropy/mul"
  op: "Mul"
  input: "sequential/dense/BiasAdd"
  input: "sigmoid_cross_entropy_loss/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/xentropy/sub"
  op: "Sub"
  input: "sigmoid_cross_entropy_loss/xentropy/Select"
  input: "sigmoid_cross_entropy_loss/xentropy/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/xentropy/Exp"
  op: "Exp"
  input: "sigmoid_cross_entropy_loss/xentropy/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/xentropy/Log1p"
  op: "Log1p"
  input: "sigmoid_cross_entropy_loss/xentropy/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/xentropy"
  op: "Add"
  input: "sigmoid_cross_entropy_loss/xentropy/sub"
  input: "sigmoid_cross_entropy_loss/xentropy/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "sigmoid_cross_entropy_loss/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "sigmoid_cross_entropy_loss/Cast_1/x"
  op: "Const"
  input: "^sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/Mul"
  op: "Mul"
  input: "sigmoid_cross_entropy_loss/xentropy"
  input: "sigmoid_cross_entropy_loss/Cast_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/Const"
  op: "Const"
  input: "^sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/Sum"
  op: "Sum"
  input: "sigmoid_cross_entropy_loss/Mul"
  input: "sigmoid_cross_entropy_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/num_present/Equal/y"
  op: "Const"
  input: "^sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/num_present/Equal"
  op: "Equal"
  input: "sigmoid_cross_entropy_loss/Cast_1/x"
  input: "sigmoid_cross_entropy_loss/num_present/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/num_present/zeros_like"
  op: "Const"
  input: "^sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/num_present/ones_like/Shape"
  op: "Const"
  input: "^sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/num_present/ones_like/Const"
  op: "Const"
  input: "^sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/num_present/ones_like"
  op: "Fill"
  input: "sigmoid_cross_entropy_loss/num_present/ones_like/Shape"
  input: "sigmoid_cross_entropy_loss/num_present/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/num_present/Select"
  op: "Select"
  input: "sigmoid_cross_entropy_loss/num_present/Equal"
  input: "sigmoid_cross_entropy_loss/num_present/zeros_like"
  input: "sigmoid_cross_entropy_loss/num_present/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "sigmoid_cross_entropy_loss/xentropy"
  input: "^sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  input: "^sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
}
node {
  name: "sigmoid_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "sigmoid_cross_entropy_loss/xentropy"
  input: "^sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^sigmoid_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^sigmoid_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  op: "Fill"
  input: "sigmoid_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  input: "sigmoid_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/num_present/broadcast_weights"
  op: "Mul"
  input: "sigmoid_cross_entropy_loss/num_present/Select"
  input: "sigmoid_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/num_present/Const"
  op: "Const"
  input: "^sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/num_present"
  op: "Sum"
  input: "sigmoid_cross_entropy_loss/num_present/broadcast_weights"
  input: "sigmoid_cross_entropy_loss/num_present/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/Const_1"
  op: "Const"
  input: "^sigmoid_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/Sum_1"
  op: "Sum"
  input: "sigmoid_cross_entropy_loss/Sum"
  input: "sigmoid_cross_entropy_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "sigmoid_cross_entropy_loss/value"
  op: "DivNoNan"
  input: "sigmoid_cross_entropy_loss/Sum_1"
  input: "sigmoid_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Const_9"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Mean"
  op: "Mean"
  input: "sigmoid_cross_entropy_loss/value"
  input: "Const_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "Round"
  op: "Round"
  input: "Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "Cast"
  op: "Cast"
  input: "Round"
  attr {
    key: "DstT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "precision/Cast"
  op: "Cast"
  input: "Cast"
  attr {
    key: "DstT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "precision/Cast_1"
  op: "Cast"
  input: "IteratorGetNext:5"
  attr {
    key: "DstT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "precision/true_positives/Equal/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "precision/true_positives/Equal"
  op: "Equal"
  input: "precision/Cast_1"
  input: "precision/true_positives/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "precision/true_positives/Equal_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "precision/true_positives/Equal_1"
  op: "Equal"
  input: "precision/Cast"
  input: "precision/true_positives/Equal_1/y"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "precision/true_positives/LogicalAnd"
  op: "LogicalAnd"
  input: "precision/true_positives/Equal"
  input: "precision/true_positives/Equal_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "precision/true_positives/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "precision/true_positives/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@precision/true_positives/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "precision/true_positives/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@precision/true_positives/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "precision/true_positives/count/Assign"
  op: "Assign"
  input: "precision/true_positives/count"
  input: "precision/true_positives/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@precision/true_positives/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "precision/true_positives/count/read"
  op: "Identity"
  input: "precision/true_positives/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@precision/true_positives/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "precision/true_positives/Cast"
  op: "Cast"
  input: "precision/true_positives/LogicalAnd"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "precision/true_positives/Identity"
  op: "Identity"
  input: "precision/true_positives/count/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "precision/true_positives/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "precision/true_positives/Sum"
  op: "Sum"
  input: "precision/true_positives/Cast"
  input: "precision/true_positives/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "precision/true_positives/AssignAdd"
  op: "AssignAdd"
  input: "precision/true_positives/count"
  input: "precision/true_positives/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@precision/true_positives/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "precision/false_positives/Equal/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "precision/false_positives/Equal"
  op: "Equal"
  input: "precision/Cast_1"
  input: "precision/false_positives/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "precision/false_positives/Equal_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "precision/false_positives/Equal_1"
  op: "Equal"
  input: "precision/Cast"
  input: "precision/false_positives/Equal_1/y"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "precision/false_positives/LogicalAnd"
  op: "LogicalAnd"
  input: "precision/false_positives/Equal"
  input: "precision/false_positives/Equal_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "precision/false_positives/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "precision/false_positives/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@precision/false_positives/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "precision/false_positives/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@precision/false_positives/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "precision/false_positives/count/Assign"
  op: "Assign"
  input: "precision/false_positives/count"
  input: "precision/false_positives/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@precision/false_positives/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "precision/false_positives/count/read"
  op: "Identity"
  input: "precision/false_positives/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@precision/false_positives/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "precision/false_positives/Cast"
  op: "Cast"
  input: "precision/false_positives/LogicalAnd"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "precision/false_positives/Identity"
  op: "Identity"
  input: "precision/false_positives/count/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "precision/false_positives/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "precision/false_positives/Sum"
  op: "Sum"
  input: "precision/false_positives/Cast"
  input: "precision/false_positives/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "precision/false_positives/AssignAdd"
  op: "AssignAdd"
  input: "precision/false_positives/count"
  input: "precision/false_positives/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@precision/false_positives/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "precision/add"
  op: "AddV2"
  input: "precision/true_positives/Identity"
  input: "precision/false_positives/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "precision/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "precision/Greater"
  op: "Greater"
  input: "precision/add"
  input: "precision/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "precision/add_1"
  op: "AddV2"
  input: "precision/true_positives/Identity"
  input: "precision/false_positives/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "precision/div"
  op: "RealDiv"
  input: "precision/true_positives/Identity"
  input: "precision/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "precision/value/e"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "precision/value"
  op: "Select"
  input: "precision/Greater"
  input: "precision/div"
  input: "precision/value/e"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "precision/add_2"
  op: "AddV2"
  input: "precision/true_positives/AssignAdd"
  input: "precision/false_positives/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "precision/Greater_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "precision/Greater_1"
  op: "Greater"
  input: "precision/add_2"
  input: "precision/Greater_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "precision/add_3"
  op: "AddV2"
  input: "precision/true_positives/AssignAdd"
  input: "precision/false_positives/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "precision/div_1"
  op: "RealDiv"
  input: "precision/true_positives/AssignAdd"
  input: "precision/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "precision/update_op/e"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "precision/update_op"
  op: "Select"
  input: "precision/Greater_1"
  input: "precision/div_1"
  input: "precision/update_op/e"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recall/Cast"
  op: "Cast"
  input: "Cast"
  attr {
    key: "DstT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "recall/Cast_1"
  op: "Cast"
  input: "IteratorGetNext:5"
  attr {
    key: "DstT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "recall/true_positives/Equal/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "recall/true_positives/Equal"
  op: "Equal"
  input: "recall/Cast_1"
  input: "recall/true_positives/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "recall/true_positives/Equal_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "recall/true_positives/Equal_1"
  op: "Equal"
  input: "recall/Cast"
  input: "recall/true_positives/Equal_1/y"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "recall/true_positives/LogicalAnd"
  op: "LogicalAnd"
  input: "recall/true_positives/Equal"
  input: "recall/true_positives/Equal_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "recall/true_positives/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "recall/true_positives/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recall/true_positives/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "recall/true_positives/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recall/true_positives/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "recall/true_positives/count/Assign"
  op: "Assign"
  input: "recall/true_positives/count"
  input: "recall/true_positives/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recall/true_positives/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "recall/true_positives/count/read"
  op: "Identity"
  input: "recall/true_positives/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recall/true_positives/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recall/true_positives/Cast"
  op: "Cast"
  input: "recall/true_positives/LogicalAnd"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "recall/true_positives/Identity"
  op: "Identity"
  input: "recall/true_positives/count/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recall/true_positives/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "recall/true_positives/Sum"
  op: "Sum"
  input: "recall/true_positives/Cast"
  input: "recall/true_positives/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "recall/true_positives/AssignAdd"
  op: "AssignAdd"
  input: "recall/true_positives/count"
  input: "recall/true_positives/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recall/true_positives/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "recall/false_negatives/Equal/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "recall/false_negatives/Equal"
  op: "Equal"
  input: "recall/Cast_1"
  input: "recall/false_negatives/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "recall/false_negatives/Equal_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "recall/false_negatives/Equal_1"
  op: "Equal"
  input: "recall/Cast"
  input: "recall/false_negatives/Equal_1/y"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "recall/false_negatives/LogicalAnd"
  op: "LogicalAnd"
  input: "recall/false_negatives/Equal"
  input: "recall/false_negatives/Equal_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "recall/false_negatives/assert_type/statically_determined_correct_type"
  op: "NoOp"
}
node {
  name: "recall/false_negatives/count/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recall/false_negatives/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "recall/false_negatives/count"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recall/false_negatives/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "recall/false_negatives/count/Assign"
  op: "Assign"
  input: "recall/false_negatives/count"
  input: "recall/false_negatives/count/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recall/false_negatives/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "recall/false_negatives/count/read"
  op: "Identity"
  input: "recall/false_negatives/count"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recall/false_negatives/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recall/false_negatives/Cast"
  op: "Cast"
  input: "recall/false_negatives/LogicalAnd"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "recall/false_negatives/Identity"
  op: "Identity"
  input: "recall/false_negatives/count/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recall/false_negatives/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "recall/false_negatives/Sum"
  op: "Sum"
  input: "recall/false_negatives/Cast"
  input: "recall/false_negatives/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "recall/false_negatives/AssignAdd"
  op: "AssignAdd"
  input: "recall/false_negatives/count"
  input: "recall/false_negatives/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recall/false_negatives/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "recall/add"
  op: "AddV2"
  input: "recall/true_positives/Identity"
  input: "recall/false_negatives/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recall/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "recall/Greater"
  op: "Greater"
  input: "recall/add"
  input: "recall/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recall/add_1"
  op: "AddV2"
  input: "recall/true_positives/Identity"
  input: "recall/false_negatives/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recall/div"
  op: "RealDiv"
  input: "recall/true_positives/Identity"
  input: "recall/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recall/value/e"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "recall/value"
  op: "Select"
  input: "recall/Greater"
  input: "recall/div"
  input: "recall/value/e"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recall/add_2"
  op: "AddV2"
  input: "recall/true_positives/AssignAdd"
  input: "recall/false_negatives/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recall/Greater_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "recall/Greater_1"
  op: "Greater"
  input: "recall/add_2"
  input: "recall/Greater_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recall/add_3"
  op: "AddV2"
  input: "recall/true_positives/AssignAdd"
  input: "recall/false_negatives/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recall/div_1"
  op: "RealDiv"
  input: "recall/true_positives/AssignAdd"
  input: "recall/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "recall/update_op/e"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "recall/update_op"
  op: "Select"
  input: "recall/Greater_1"
  input: "recall/div_1"
  input: "recall/update_op/e"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "f1/Cast/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "f1/Cast"
  op: "Cast"
  input: "f1/Cast/x"
  attr {
    key: "DstT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "f1/assert_greater_equal/GreaterEqual"
  op: "GreaterEqual"
  input: "Cast"
  input: "f1/Cast"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "f1/assert_greater_equal/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "f1/assert_greater_equal/All"
  op: "All"
  input: "f1/assert_greater_equal/GreaterEqual"
  input: "f1/assert_greater_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "f1/assert_greater_equal/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "predictions must be in [0, 1]"
      }
    }
  }
}
node {
  name: "f1/assert_greater_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "f1/assert_greater_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (Cast:0) = "
      }
    }
  }
}
node {
  name: "f1/assert_greater_equal/Assert/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (f1/Cast:0) = "
      }
    }
  }
}
node {
  name: "f1/assert_greater_equal/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "f1/assert_greater_equal/All"
  input: "f1/assert_greater_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "f1/assert_greater_equal/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "f1/assert_greater_equal/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "f1/assert_greater_equal/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "f1/assert_greater_equal/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "f1/assert_greater_equal/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "f1/assert_greater_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "f1/assert_greater_equal/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^f1/assert_greater_equal/Assert/AssertGuard/switch_t"
}
node {
  name: "f1/assert_greater_equal/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "f1/assert_greater_equal/Assert/AssertGuard/switch_t"
  input: "^f1/assert_greater_equal/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@f1/assert_greater_equal/Assert/AssertGuard/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "f1/assert_greater_equal/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^f1/assert_greater_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "predictions must be in [0, 1]"
      }
    }
  }
}
node {
  name: "f1/assert_greater_equal/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^f1/assert_greater_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "f1/assert_greater_equal/Assert/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^f1/assert_greater_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (Cast:0) = "
      }
    }
  }
}
node {
  name: "f1/assert_greater_equal/Assert/AssertGuard/Assert/data_4"
  op: "Const"
  input: "^f1/assert_greater_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (f1/Cast:0) = "
      }
    }
  }
}
node {
  name: "f1/assert_greater_equal/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "f1/assert_greater_equal/Assert/AssertGuard/Assert/Switch"
  input: "f1/assert_greater_equal/Assert/AssertGuard/Assert/data_0"
  input: "f1/assert_greater_equal/Assert/AssertGuard/Assert/data_1"
  input: "f1/assert_greater_equal/Assert/AssertGuard/Assert/data_2"
  input: "f1/assert_greater_equal/Assert/AssertGuard/Assert/Switch_1"
  input: "f1/assert_greater_equal/Assert/AssertGuard/Assert/data_4"
  input: "f1/assert_greater_equal/Assert/AssertGuard/Assert/Switch_2"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_UINT8
        type: DT_STRING
        type: DT_UINT8
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "f1/assert_greater_equal/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "f1/assert_greater_equal/All"
  input: "f1/assert_greater_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@f1/assert_greater_equal/All"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "f1/assert_greater_equal/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "Cast"
  input: "f1/assert_greater_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Cast"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "f1/assert_greater_equal/Assert/AssertGuard/Assert/Switch_2"
  op: "Switch"
  input: "f1/Cast"
  input: "f1/assert_greater_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@f1/Cast"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "f1/assert_greater_equal/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "f1/assert_greater_equal/Assert/AssertGuard/switch_f"
  input: "^f1/assert_greater_equal/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@f1/assert_greater_equal/Assert/AssertGuard/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "f1/assert_greater_equal/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "f1/assert_greater_equal/Assert/AssertGuard/control_dependency_1"
  input: "f1/assert_greater_equal/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "f1/Cast_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "f1/Cast_1"
  op: "Cast"
  input: "f1/Cast_1/x"
  attr {
    key: "DstT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "f1/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "Cast"
  input: "f1/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "f1/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "f1/assert_less_equal/All"
  op: "All"
  input: "f1/assert_less_equal/LessEqual"
  input: "f1/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "f1/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "predictions must be in [0, 1]"
      }
    }
  }
}
node {
  name: "f1/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x <= y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "f1/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (Cast:0) = "
      }
    }
  }
}
node {
  name: "f1/assert_less_equal/Assert/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (f1/Cast_1:0) = "
      }
    }
  }
}
node {
  name: "f1/assert_less_equal/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "f1/assert_less_equal/All"
  input: "f1/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "f1/assert_less_equal/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "f1/assert_less_equal/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "f1/assert_less_equal/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "f1/assert_less_equal/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "f1/assert_less_equal/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "f1/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "f1/assert_less_equal/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^f1/assert_less_equal/Assert/AssertGuard/switch_t"
}
node {
  name: "f1/assert_less_equal/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "f1/assert_less_equal/Assert/AssertGuard/switch_t"
  input: "^f1/assert_less_equal/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@f1/assert_less_equal/Assert/AssertGuard/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "f1/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^f1/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "predictions must be in [0, 1]"
      }
    }
  }
}
node {
  name: "f1/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^f1/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x <= y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "f1/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^f1/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (Cast:0) = "
      }
    }
  }
}
node {
  name: "f1/assert_less_equal/Assert/AssertGuard/Assert/data_4"
  op: "Const"
  input: "^f1/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (f1/Cast_1:0) = "
      }
    }
  }
}
node {
  name: "f1/assert_less_equal/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "f1/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  input: "f1/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  input: "f1/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  input: "f1/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  input: "f1/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  input: "f1/assert_less_equal/Assert/AssertGuard/Assert/data_4"
  input: "f1/assert_less_equal/Assert/AssertGuard/Assert/Switch_2"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_UINT8
        type: DT_STRING
        type: DT_UINT8
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "f1/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "f1/assert_less_equal/All"
  input: "f1/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@f1/assert_less_equal/All"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "f1/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "Cast"
  input: "f1/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Cast"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "f1/assert_less_equal/Assert/AssertGuard/Assert/Switch_2"
  op: "Switch"
  input: "f1/Cast_1"
  input: "f1/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@f1/Cast_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "f1/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "f1/assert_less_equal/Assert/AssertGuard/switch_f"
  input: "^f1/assert_less_equal/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@f1/assert_less_equal/Assert/AssertGuard/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "f1/assert_less_equal/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "f1/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  input: "f1/assert_less_equal/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "f1/Cast_2"
  op: "Cast"
  input: "Cast"
  input: "^f1/assert_greater_equal/Assert/AssertGuard/Merge"
  input: "^f1/assert_less_equal/Assert/AssertGuard/Merge"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "f1/Cast_3"
  op: "Cast"
  input: "IteratorGetNext:5"
  input: "^f1/assert_greater_equal/Assert/AssertGuard/Merge"
  input: "^f1/assert_less_equal/Assert/AssertGuard/Merge"
  attr {
    key: "DstT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "f1/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "f1/Reshape"
  op: "Reshape"
  input: "f1/Cast_2"
  input: "f1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "f1/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "f1/Reshape_1"
  op: "Reshape"
  input: "f1/Cast_3"
  input: "f1/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "f1/Shape"
  op: "Shape"
  input: "f1/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "f1/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "f1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "f1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "f1/strided_slice"
  op: "StridedSlice"
  input: "f1/Shape"
  input: "f1/strided_slice/stack"
  input: "f1/strided_slice/stack_1"
  input: "f1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "f1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
        tensor_content: "\225\277\326\263\317\251\244;\317\251$<\267\376v<\317\251\244<C\324\315<\267\376\366<\225\024\020=\317\251$=\t?9=C\324M=}ib=\267\376v=\370\311\205=\225\024\220=2_\232=\317\251\244=l\364\256=\t?\271=\246\211\303=C\324\315=\340\036\330=}i\342=\032\264\354=\267\376\366=\252\244\000>\370\311\005>G\357\n>\225\024\020>\3449\025>2_\032>\201\204\037>\317\251$>\036\317)>l\364.>\273\0314>\t?9>Wd>>\246\211C>\364\256H>C\324M>\221\371R>\340\036X>.D]>}ib>\313\216g>\032\264l>h\331q>\267\376v>\005$|>\252\244\200>Q7\203>\370\311\205>\240\\\210>G\357\212>\356\201\215>\225\024\220><\247\222>\3449\225>\213\314\227>2_\232>\331\361\234>\201\204\237>(\027\242>\317\251\244>v<\247>\036\317\251>\305a\254>l\364\256>\023\207\261>\273\031\264>b\254\266>\t?\271>\260\321\273>Wd\276>\377\366\300>\246\211\303>M\034\306>\364\256\310>\234A\313>C\324\315>\352f\320>\221\371\322>9\214\325>\340\036\330>\207\261\332>.D\335>\326\326\337>}i\342>$\374\344>\313\216\347>r!\352>\032\264\354>\301F\357>h\331\361>\017l\364>\267\376\366>^\221\371>\005$\374>\254\266\376>\252\244\000?\375\355\001?Q7\003?\245\200\004?\370\311\005?L\023\007?\240\\\010?\363\245\t?G\357\n?\2328\014?\356\201\r?B\313\016?\225\024\020?\351]\021?<\247\022?\220\360\023?\3449\025?7\203\026?\213\314\027?\337\025\031?2_\032?\206\250\033?\331\361\034?-;\036?\201\204\037?\324\315 ?(\027\"?{`#?\317\251$?#\363%?v<\'?\312\205(?\036\317)?q\030+?\305a,?\030\253-?l\364.?\300=0?\023\2071?g\3202?\273\0314?\016c5?b\2546?\265\3657?\t?9?]\210:?\260\321;?\004\033=?Wd>?\253\255??\377\366@?R@B?\246\211C?\372\322D?M\034F?\241eG?\364\256H?H\370I?\234AK?\357\212L?C\324M?\227\035O?\352fP?>\260Q?\221\371R?\345BT?9\214U?\214\325V?\340\036X?3hY?\207\261Z?\333\372[?.D]?\202\215^?\326\326_?) a?}ib?\320\262c?$\374d?xEf?\313\216g?\037\330h?r!j?\306jk?\032\264l?m\375m?\301Fo?\025\220p?h\331q?\274\"s?\017lt?c\265u?\267\376v?\nHx?^\221y?\262\332z?\005$|?Ym}?\254\266~?\001\000\200?"
      }
    }
  }
}
node {
  name: "f1/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "f1/ExpandDims"
  op: "ExpandDims"
  input: "f1/Const"
  input: "f1/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "f1/stack/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "f1/stack"
  op: "Pack"
  input: "f1/stack/0"
  input: "f1/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "f1/Tile"
  op: "Tile"
  input: "f1/ExpandDims"
  input: "f1/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "f1/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "f1/transpose"
  op: "Transpose"
  input: "f1/Reshape"
  input: "f1/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "f1/Tile_1/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "f1/Tile_1"
  op: "Tile"
  input: "f1/transpose"
  input: "f1/Tile_1/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "f1/Greater"
  op: "Greater"
  input: "f1/Tile_1"
  input: "f1/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "f1/LogicalNot"
  op: "LogicalNot"
  input: "f1/Greater"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "f1/Tile_2/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\310\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "f1/Tile_2"
  op: "Tile"
  input: "f1/Reshape_1"
  input: "f1/Tile_2/multiples"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "f1/LogicalNot_1"
  op: "LogicalNot"
  input: "f1/Tile_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "f1/true_positives/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@f1/true_positives"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "f1/true_positives"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@f1/true_positives"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "f1/true_positives/Assign"
  op: "Assign"
  input: "f1/true_positives"
  input: "f1/true_positives/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@f1/true_positives"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "f1/true_positives/read"
  op: "Identity"
  input: "f1/true_positives"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@f1/true_positives"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "f1/LogicalAnd"
  op: "LogicalAnd"
  input: "f1/Tile_2"
  input: "f1/Greater"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "f1/Cast_4"
  op: "Cast"
  input: "f1/LogicalAnd"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "f1/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "f1/Sum"
  op: "Sum"
  input: "f1/Cast_4"
  input: "f1/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "f1/AssignAdd"
  op: "AssignAdd"
  input: "f1/true_positives"
  input: "f1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@f1/true_positives"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "f1/false_negatives/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@f1/false_negatives"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "f1/false_negatives"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@f1/false_negatives"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "f1/false_negatives/Assign"
  op: "Assign"
  input: "f1/false_negatives"
  input: "f1/false_negatives/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@f1/false_negatives"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "f1/false_negatives/read"
  op: "Identity"
  input: "f1/false_negatives"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@f1/false_negatives"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "f1/LogicalAnd_1"
  op: "LogicalAnd"
  input: "f1/Tile_2"
  input: "f1/LogicalNot"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "f1/Cast_5"
  op: "Cast"
  input: "f1/LogicalAnd_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "f1/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "f1/Sum_1"
  op: "Sum"
  input: "f1/Cast_5"
  input: "f1/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "f1/AssignAdd_1"
  op: "AssignAdd"
  input: "f1/false_negatives"
  input: "f1/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@f1/false_negatives"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "f1/false_positives/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@f1/false_positives"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "f1/false_positives"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@f1/false_positives"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 200
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "f1/false_positives/Assign"
  op: "Assign"
  input: "f1/false_positives"
  input: "f1/false_positives/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@f1/false_positives"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "f1/false_positives/read"
  op: "Identity"
  input: "f1/false_positives"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@f1/false_positives"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "f1/LogicalAnd_2"
  op: "LogicalAnd"
  input: "f1/LogicalNot_1"
  input: "f1/Greater"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "f1/Cast_6"
  op: "Cast"
  input: "f1/LogicalAnd_2"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "f1/Sum_2/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "f1/Sum_2"
  op: "Sum"
  input: "f1/Cast_6"
  input: "f1/Sum_2/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "f1/AssignAdd_2"
  op: "AssignAdd"
  input: "f1/false_positives"
  input: "f1/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@f1/false_positives"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "f1/add/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "f1/add"
  op: "AddV2"
  input: "f1/add/x"
  input: "f1/true_positives/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "f1/add_1"
  op: "AddV2"
  input: "f1/add"
  input: "f1/false_positives/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "f1/precision_value"
  op: "RealDiv"
  input: "f1/true_positives/read"
  input: "f1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "f1/add_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "f1/add_2"
  op: "AddV2"
  input: "f1/add_2/x"
  input: "f1/true_positives/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "f1/add_3"
  op: "AddV2"
  input: "f1/add_2"
  input: "f1/false_negatives/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "f1/recall_value"
  op: "RealDiv"
  input: "f1/true_positives/read"
  input: "f1/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "f1/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "f1/mul"
  op: "Mul"
  input: "f1/mul/x"
  input: "f1/precision_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "f1/mul_1"
  op: "Mul"
  input: "f1/mul"
  input: "f1/recall_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "f1/add_4"
  op: "AddV2"
  input: "f1/precision_value"
  input: "f1/recall_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "f1/add_5/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "f1/add_5"
  op: "AddV2"
  input: "f1/add_4"
  input: "f1/add_5/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "f1/truediv"
  op: "RealDiv"
  input: "f1/mul_1"
  input: "f1/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "f1/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "f1/Max"
  op: "Max"
  input: "f1/truediv"
  input: "f1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "f1/add_6/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "f1/add_6"
  op: "AddV2"
  input: "f1/add_6/x"
  input: "f1/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "f1/add_7"
  op: "AddV2"
  input: "f1/add_6"
  input: "f1/AssignAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "f1/precision_update"
  op: "RealDiv"
  input: "f1/AssignAdd"
  input: "f1/add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "f1/add_8/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "f1/add_8"
  op: "AddV2"
  input: "f1/add_8/x"
  input: "f1/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "f1/add_9"
  op: "AddV2"
  input: "f1/add_8"
  input: "f1/AssignAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "f1/recall_update"
  op: "RealDiv"
  input: "f1/AssignAdd"
  input: "f1/add_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "f1/mul_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "f1/mul_2"
  op: "Mul"
  input: "f1/mul_2/x"
  input: "f1/precision_update"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "f1/mul_3"
  op: "Mul"
  input: "f1/mul_2"
  input: "f1/recall_update"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "f1/add_10"
  op: "AddV2"
  input: "f1/precision_update"
  input: "f1/recall_update"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "f1/add_11/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0000000116860974e-07
      }
    }
  }
}
node {
  name: "f1/add_11"
  op: "AddV2"
  input: "f1/add_10"
  input: "f1/add_11/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "f1/truediv_1"
  op: "RealDiv"
  input: "f1/mul_3"
  input: "f1/add_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "f1/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "f1/Max_1"
  op: "Max"
  input: "f1/truediv_1"
  input: "f1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/f_count"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/f_count_1"
  op: "Enter"
  input: "gradients/f_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge"
  op: "Merge"
  input: "gradients/f_count_1"
  input: "gradients/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch"
  op: "Switch"
  input: "gradients/Merge"
  input: "sequential/lstm_3/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Add/y"
  op: "Const"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Add"
  op: "Add"
  input: "gradients/Switch:1"
  input: "gradients/Add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration"
  op: "NextIteration"
  input: "gradients/Add"
  input: "^gradients/sequential/lstm_3/while/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/Add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_3/while/Add_3_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/Add_3_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_3/while/Add_7_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/Add_7_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_3/while/MatMul_1_grad/MatMul/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/MatMul_1_grad/MatMul_1/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/MatMul_2_grad/MatMul/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/MatMul_2_grad/MatMul_1/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/MatMul_3_grad/MatMul/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/MatMul_3_grad/MatMul_1/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/MatMul_4_grad/MatMul/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/MatMul_5_grad/MatMul/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/MatMul_6_grad/MatMul/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul_1/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/MatMul_grad/MatMul/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/MatMul_grad/MatMul_1/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/Mul_4_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/Mul_4_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_3/while/Mul_4_grad/Mul_1/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/Mul_5_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/Mul_5_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_3/while/Mul_5_grad/Mul_1/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/Mul_8_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/Mul_8_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_3/while/Mul_8_grad/Mul_1/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/add_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_3/while/add_4_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/add_4_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_3/while/add_5_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/add_5_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_3/while/add_6_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/add_6_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_3/while/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/add_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/LessEqual/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/LessEqual/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_1_grad/GreaterEqual/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/LessEqual/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_2_grad/GreaterEqual/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_grad/GreaterEqual/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_3/while/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_3/while/mul_3_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/mul_3_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_3/while/mul_3_grad/Mul_1/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/mul_6_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/mul_6_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_3/while/mul_6_grad/Mul/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/mul_6_grad/Mul_1/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/mul_7_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/mul_7_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_3/while/mul_7_grad/Mul/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/mul_7_grad/Mul_1/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/mul_9_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/mul_9_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_3/while/mul_9_grad/Mul/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/mul_9_grad/Mul_1/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_3/while/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_2"
  op: "Exit"
  input: "gradients/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/b_count_1"
  op: "Enter"
  input: "gradients/f_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_1"
  op: "Merge"
  input: "gradients/b_count_1"
  input: "gradients/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/Merge_1"
  input: "gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/b_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/b_count_2"
  op: "LoopCond"
  input: "gradients/GreaterEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_1"
  op: "Switch"
  input: "gradients/Merge_1"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Sub"
  op: "Sub"
  input: "gradients/Switch_1:1"
  input: "gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_1"
  op: "NextIteration"
  input: "gradients/Sub"
  input: "^gradients/sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_3"
  op: "Exit"
  input: "gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/f_count_4"
  op: "Enter"
  input: "gradients/f_count_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_2"
  op: "Merge"
  input: "gradients/f_count_4"
  input: "gradients/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_2"
  op: "Switch"
  input: "gradients/Merge_2"
  input: "sequential/lstm_2/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Add_1/y"
  op: "Const"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Add_1"
  op: "Add"
  input: "gradients/Switch_2:1"
  input: "gradients/Add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_2"
  op: "NextIteration"
  input: "gradients/Add_1"
  input: "^gradients/sequential/lstm_2/while/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/Add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_2/while/Add_3_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/Add_3_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_2/while/Add_7_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/Add_7_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_2/while/MatMul_1_grad/MatMul/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/MatMul_1_grad/MatMul_1/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/MatMul_2_grad/MatMul/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/MatMul_2_grad/MatMul_1/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/MatMul_3_grad/MatMul/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/MatMul_3_grad/MatMul_1/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/MatMul_4_grad/MatMul/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/MatMul_5_grad/MatMul/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/MatMul_6_grad/MatMul/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul_1/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/MatMul_grad/MatMul/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/MatMul_grad/MatMul_1/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/Mul_4_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/Mul_4_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_2/while/Mul_4_grad/Mul_1/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/Mul_5_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/Mul_5_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_2/while/Mul_5_grad/Mul_1/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/Mul_8_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/Mul_8_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_2/while/Mul_8_grad/Mul_1/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/add_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_2/while/add_4_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/add_4_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_2/while/add_5_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/add_5_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_2/while/add_6_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/add_6_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_2/while/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/add_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/LessEqual/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/LessEqual/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_1_grad/GreaterEqual/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/LessEqual/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_2_grad/GreaterEqual/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_grad/GreaterEqual/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_2/while/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_2/while/mul_3_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/mul_3_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_2/while/mul_3_grad/Mul_1/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/mul_6_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/mul_6_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_2/while/mul_6_grad/Mul/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/mul_6_grad/Mul_1/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/mul_7_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/mul_7_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_2/while/mul_7_grad/Mul/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/mul_7_grad/Mul_1/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/mul_9_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/mul_9_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_2/while/mul_9_grad/Mul/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/mul_9_grad/Mul_1/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_2/while/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_5"
  op: "Exit"
  input: "gradients/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/b_count_5"
  op: "Enter"
  input: "gradients/f_count_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_3"
  op: "Merge"
  input: "gradients/b_count_5"
  input: "gradients/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual_1"
  op: "GreaterEqual"
  input: "gradients/Merge_3"
  input: "gradients/GreaterEqual_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual_1/Enter"
  op: "Enter"
  input: "gradients/b_count_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/b_count_6"
  op: "LoopCond"
  input: "gradients/GreaterEqual_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_3"
  op: "Switch"
  input: "gradients/Merge_3"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Sub_1"
  op: "Sub"
  input: "gradients/Switch_3:1"
  input: "gradients/GreaterEqual_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_3"
  op: "NextIteration"
  input: "gradients/Sub_1"
  input: "^gradients/sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_7"
  op: "Exit"
  input: "gradients/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/f_count_7"
  op: "Enter"
  input: "gradients/f_count_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_4"
  op: "Merge"
  input: "gradients/f_count_7"
  input: "gradients/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_4"
  op: "Switch"
  input: "gradients/Merge_4"
  input: "sequential/lstm_1/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Add_2/y"
  op: "Const"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Add_2"
  op: "Add"
  input: "gradients/Switch_4:1"
  input: "gradients/Add_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_4"
  op: "NextIteration"
  input: "gradients/Add_2"
  input: "^gradients/sequential/lstm_1/while/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/Add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_1/while/Add_3_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/Add_3_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_1/while/Add_7_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/Add_7_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_1/while/MatMul_1_grad/MatMul/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/MatMul_1_grad/MatMul_1/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/MatMul_2_grad/MatMul/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/MatMul_2_grad/MatMul_1/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/MatMul_3_grad/MatMul/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/MatMul_3_grad/MatMul_1/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/MatMul_4_grad/MatMul/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/MatMul_5_grad/MatMul/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/MatMul_6_grad/MatMul/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul_1/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/MatMul_grad/MatMul/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/MatMul_grad/MatMul_1/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/Mul_4_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/Mul_4_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_1/while/Mul_4_grad/Mul_1/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/Mul_5_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/Mul_5_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_1/while/Mul_5_grad/Mul_1/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/Mul_8_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/Mul_8_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_1/while/Mul_8_grad/Mul_1/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/add_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_1/while/add_4_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/add_4_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_1/while/add_5_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/add_5_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_1/while/add_6_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/add_6_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_1/while/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/add_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/LessEqual/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/LessEqual/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_1_grad/GreaterEqual/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/LessEqual/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_2_grad/GreaterEqual/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_grad/GreaterEqual/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_1/while/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_1/while/mul_3_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/mul_3_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_1/while/mul_3_grad/Mul_1/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/mul_6_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/mul_6_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_1/while/mul_6_grad/Mul/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/mul_6_grad/Mul_1/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/mul_7_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/mul_7_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_1/while/mul_7_grad/Mul/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/mul_7_grad/Mul_1/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/mul_9_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/mul_9_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm_1/while/mul_9_grad/Mul/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/mul_9_grad/Mul_1/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/mul_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm_1/while/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_8"
  op: "Exit"
  input: "gradients/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/b_count_9"
  op: "Enter"
  input: "gradients/f_count_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_5"
  op: "Merge"
  input: "gradients/b_count_9"
  input: "gradients/NextIteration_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual_2"
  op: "GreaterEqual"
  input: "gradients/Merge_5"
  input: "gradients/GreaterEqual_2/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual_2/Enter"
  op: "Enter"
  input: "gradients/b_count_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/b_count_10"
  op: "LoopCond"
  input: "gradients/GreaterEqual_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_5"
  op: "Switch"
  input: "gradients/Merge_5"
  input: "gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Sub_2"
  op: "Sub"
  input: "gradients/Switch_5:1"
  input: "gradients/GreaterEqual_2/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_5"
  op: "NextIteration"
  input: "gradients/Sub_2"
  input: "^gradients/sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_11"
  op: "Exit"
  input: "gradients/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_9"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/f_count_10"
  op: "Enter"
  input: "gradients/f_count_9"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_6"
  op: "Merge"
  input: "gradients/f_count_10"
  input: "gradients/NextIteration_6"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_6"
  op: "Switch"
  input: "gradients/Merge_6"
  input: "sequential/lstm/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Add_3/y"
  op: "Const"
  input: "^sequential/lstm/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/Add_3"
  op: "Add"
  input: "gradients/Switch_6:1"
  input: "gradients/Add_3/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_6"
  op: "NextIteration"
  input: "gradients/Add_3"
  input: "^gradients/sequential/lstm/while/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm/while/Add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm/while/Add_3_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm/while/Add_3_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm/while/Add_7_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm/while/Add_7_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm/while/MatMul_1_grad/MatMul/StackPushV2"
  input: "^gradients/sequential/lstm/while/MatMul_1_grad/MatMul_1/StackPushV2"
  input: "^gradients/sequential/lstm/while/MatMul_2_grad/MatMul/StackPushV2"
  input: "^gradients/sequential/lstm/while/MatMul_2_grad/MatMul_1/StackPushV2"
  input: "^gradients/sequential/lstm/while/MatMul_3_grad/MatMul/StackPushV2"
  input: "^gradients/sequential/lstm/while/MatMul_3_grad/MatMul_1/StackPushV2"
  input: "^gradients/sequential/lstm/while/MatMul_4_grad/MatMul/StackPushV2"
  input: "^gradients/sequential/lstm/while/MatMul_5_grad/MatMul/StackPushV2"
  input: "^gradients/sequential/lstm/while/MatMul_6_grad/MatMul/StackPushV2"
  input: "^gradients/sequential/lstm/while/MatMul_7_grad/MatMul/StackPushV2"
  input: "^gradients/sequential/lstm/while/MatMul_7_grad/MatMul_1/StackPushV2"
  input: "^gradients/sequential/lstm/while/MatMul_grad/MatMul/StackPushV2"
  input: "^gradients/sequential/lstm/while/MatMul_grad/MatMul_1/StackPushV2"
  input: "^gradients/sequential/lstm/while/Mul_4_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm/while/Mul_4_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm/while/Mul_4_grad/Mul_1/StackPushV2"
  input: "^gradients/sequential/lstm/while/Mul_5_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm/while/Mul_5_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm/while/Mul_5_grad/Mul_1/StackPushV2"
  input: "^gradients/sequential/lstm/while/Mul_8_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm/while/Mul_8_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm/while/Mul_8_grad/Mul_1/StackPushV2"
  input: "^gradients/sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  input: "^gradients/sequential/lstm/while/add_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm/while/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm/while/add_4_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm/while/add_4_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm/while/add_5_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm/while/add_5_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm/while/add_6_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm/while/add_6_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm/while/add_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm/while/add_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm/while/clip_by_value/Minimum_grad/LessEqual/StackPushV2"
  input: "^gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/LessEqual/StackPushV2"
  input: "^gradients/sequential/lstm/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm/while/clip_by_value_1_grad/GreaterEqual/StackPushV2"
  input: "^gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/LessEqual/StackPushV2"
  input: "^gradients/sequential/lstm/while/clip_by_value_2_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm/while/clip_by_value_2_grad/GreaterEqual/StackPushV2"
  input: "^gradients/sequential/lstm/while/clip_by_value_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm/while/clip_by_value_grad/GreaterEqual/StackPushV2"
  input: "^gradients/sequential/lstm/while/mul_6_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm/while/mul_6_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm/while/mul_6_grad/Mul/StackPushV2"
  input: "^gradients/sequential/lstm/while/mul_6_grad/Mul_1/StackPushV2"
  input: "^gradients/sequential/lstm/while/mul_7_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm/while/mul_7_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm/while/mul_7_grad/Mul/StackPushV2"
  input: "^gradients/sequential/lstm/while/mul_7_grad/Mul_1/StackPushV2"
  input: "^gradients/sequential/lstm/while/mul_9_grad/BroadcastGradientArgs/StackPushV2"
  input: "^gradients/sequential/lstm/while/mul_9_grad/BroadcastGradientArgs/StackPushV2_1"
  input: "^gradients/sequential/lstm/while/mul_9_grad/Mul/StackPushV2"
  input: "^gradients/sequential/lstm/while/mul_9_grad/Mul_1/StackPushV2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/f_count_11"
  op: "Exit"
  input: "gradients/Switch_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_12"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/b_count_13"
  op: "Enter"
  input: "gradients/f_count_11"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/Merge_7"
  op: "Merge"
  input: "gradients/b_count_13"
  input: "gradients/NextIteration_7"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual_3"
  op: "GreaterEqual"
  input: "gradients/Merge_7"
  input: "gradients/GreaterEqual_3/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/GreaterEqual_3/Enter"
  op: "Enter"
  input: "gradients/b_count_12"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/b_count_14"
  op: "LoopCond"
  input: "gradients/GreaterEqual_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Switch_7"
  op: "Switch"
  input: "gradients/Merge_7"
  input: "gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Sub_3"
  op: "Sub"
  input: "gradients/Switch_7:1"
  input: "gradients/GreaterEqual_3/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/NextIteration_7"
  op: "NextIteration"
  input: "gradients/Sub_3"
  input: "^gradients/sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/b_count_15"
  op: "Exit"
  input: "gradients/Switch_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/Mean_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Tile"
  op: "Tile"
  input: "gradients/Mean_grad/Reshape"
  input: "gradients/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Mean_grad/truediv"
  op: "RealDiv"
  input: "gradients/Mean_grad/Tile"
  input: "gradients/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/value_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/value_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sigmoid_cross_entropy_loss/value_grad/Shape"
  input: "gradients/sigmoid_cross_entropy_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "gradients/Mean_grad/truediv"
  input: "sigmoid_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/value_grad/Sum"
  op: "Sum"
  input: "gradients/sigmoid_cross_entropy_loss/value_grad/div_no_nan"
  input: "gradients/sigmoid_cross_entropy_loss/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/value_grad/Reshape"
  op: "Reshape"
  input: "gradients/sigmoid_cross_entropy_loss/value_grad/Sum"
  input: "gradients/sigmoid_cross_entropy_loss/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/value_grad/Neg"
  op: "Neg"
  input: "sigmoid_cross_entropy_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "gradients/sigmoid_cross_entropy_loss/value_grad/Neg"
  input: "sigmoid_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "gradients/sigmoid_cross_entropy_loss/value_grad/div_no_nan_1"
  input: "sigmoid_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/value_grad/mul"
  op: "Mul"
  input: "gradients/Mean_grad/truediv"
  input: "gradients/sigmoid_cross_entropy_loss/value_grad/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/value_grad/Sum_1"
  op: "Sum"
  input: "gradients/sigmoid_cross_entropy_loss/value_grad/mul"
  input: "gradients/sigmoid_cross_entropy_loss/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sigmoid_cross_entropy_loss/value_grad/Sum_1"
  input: "gradients/sigmoid_cross_entropy_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sigmoid_cross_entropy_loss/value_grad/Reshape"
  input: "^gradients/sigmoid_cross_entropy_loss/value_grad/Reshape_1"
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sigmoid_cross_entropy_loss/value_grad/Reshape"
  input: "^gradients/sigmoid_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sigmoid_cross_entropy_loss/value_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sigmoid_cross_entropy_loss/value_grad/Reshape_1"
  input: "^gradients/sigmoid_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sigmoid_cross_entropy_loss/value_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/sigmoid_cross_entropy_loss/value_grad/tuple/control_dependency"
  input: "gradients/sigmoid_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients/sigmoid_cross_entropy_loss/Sum_1_grad/Reshape"
  input: "gradients/sigmoid_cross_entropy_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/sigmoid_cross_entropy_loss/Sum_1_grad/Tile"
  input: "gradients/sigmoid_cross_entropy_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Sum_grad/Shape"
  op: "Shape"
  input: "sigmoid_cross_entropy_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/sigmoid_cross_entropy_loss/Sum_grad/Reshape"
  input: "gradients/sigmoid_cross_entropy_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Mul_grad/Shape"
  op: "Shape"
  input: "sigmoid_cross_entropy_loss/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Mul_grad/Shape_1"
  op: "Shape"
  input: "sigmoid_cross_entropy_loss/Cast_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sigmoid_cross_entropy_loss/Mul_grad/Shape"
  input: "gradients/sigmoid_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/sigmoid_cross_entropy_loss/Sum_grad/Tile"
  input: "sigmoid_cross_entropy_loss/Cast_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/sigmoid_cross_entropy_loss/Mul_grad/Mul"
  input: "gradients/sigmoid_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/sigmoid_cross_entropy_loss/Mul_grad/Sum"
  input: "gradients/sigmoid_cross_entropy_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "sigmoid_cross_entropy_loss/xentropy"
  input: "gradients/sigmoid_cross_entropy_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/sigmoid_cross_entropy_loss/Mul_grad/Mul_1"
  input: "gradients/sigmoid_cross_entropy_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sigmoid_cross_entropy_loss/Mul_grad/Sum_1"
  input: "gradients/sigmoid_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sigmoid_cross_entropy_loss/Mul_grad/Reshape"
  input: "^gradients/sigmoid_cross_entropy_loss/Mul_grad/Reshape_1"
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sigmoid_cross_entropy_loss/Mul_grad/Reshape"
  input: "^gradients/sigmoid_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sigmoid_cross_entropy_loss/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sigmoid_cross_entropy_loss/Mul_grad/Reshape_1"
  input: "^gradients/sigmoid_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sigmoid_cross_entropy_loss/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy_grad/Shape"
  op: "Shape"
  input: "sigmoid_cross_entropy_loss/xentropy/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy_grad/Shape_1"
  op: "Shape"
  input: "sigmoid_cross_entropy_loss/xentropy/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy_grad/Shape"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy_grad/Sum"
  op: "Sum"
  input: "gradients/sigmoid_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy_grad/Reshape"
  op: "Reshape"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy_grad/Sum"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy_grad/Sum_1"
  op: "Sum"
  input: "gradients/sigmoid_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy_grad/Sum_1"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy_grad/Reshape"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy_grad/Reshape_1"
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy_grad/Reshape"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sigmoid_cross_entropy_loss/xentropy_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy_grad/Reshape_1"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sigmoid_cross_entropy_loss/xentropy_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/Shape"
  op: "Shape"
  input: "sigmoid_cross_entropy_loss/xentropy/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/Shape_1"
  op: "Shape"
  input: "sigmoid_cross_entropy_loss/xentropy/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/Shape"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/Sum"
  op: "Sum"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy_grad/tuple/control_dependency"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/Sum"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/Neg"
  op: "Neg"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/Neg"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/Sum_1"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/Reshape"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/Reshape_1"
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/Reshape"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/Reshape_1"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Log1p_grad/add/x"
  op: "Const"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Log1p_grad/add"
  op: "AddV2"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Log1p_grad/add/x"
  input: "sigmoid_cross_entropy_loss/xentropy/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Log1p_grad/Reciprocal"
  op: "Reciprocal"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Log1p_grad/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Log1p_grad/mul"
  op: "Mul"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy_grad/tuple/control_dependency_1"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Log1p_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/zeros_like"
  op: "ZerosLike"
  input: "sequential/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select"
  op: "Select"
  input: "sigmoid_cross_entropy_loss/xentropy/GreaterEqual"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/tuple/control_dependency"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select_1"
  op: "Select"
  input: "sigmoid_cross_entropy_loss/xentropy/GreaterEqual"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/zeros_like"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select_1"
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select_1"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/Shape"
  op: "Shape"
  input: "sequential/dense/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/Shape_1"
  op: "Shape"
  input: "sigmoid_cross_entropy_loss/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/Shape"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/Mul"
  op: "Mul"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/tuple/control_dependency_1"
  input: "sigmoid_cross_entropy_loss/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/Sum"
  op: "Sum"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/Mul"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/Sum"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/Mul_1"
  op: "Mul"
  input: "sequential/dense/BiasAdd"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/Mul_1"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/Sum_1"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/Reshape"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/Reshape_1"
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/Reshape"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/Reshape_1"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Exp_grad/mul"
  op: "Mul"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Log1p_grad/mul"
  input: "sigmoid_cross_entropy_loss/xentropy/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/zeros_like"
  op: "ZerosLike"
  input: "sigmoid_cross_entropy_loss/xentropy/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/Select"
  op: "Select"
  input: "sigmoid_cross_entropy_loss/xentropy/GreaterEqual"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Exp_grad/mul"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/Select_1"
  op: "Select"
  input: "sigmoid_cross_entropy_loss/xentropy/GreaterEqual"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/zeros_like"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Exp_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/Select"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/Select_1"
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/Select"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/Select_1"
  input: "^gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sigmoid_cross_entropy_loss/xentropy/Neg_grad/Neg"
  op: "Neg"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN"
  op: "AddN"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/tuple/control_dependency"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/mul_grad/tuple/control_dependency"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Select_1_grad/tuple/control_dependency_1"
  input: "gradients/sigmoid_cross_entropy_loss/xentropy/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/dense/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/sequential/dense/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/AddN"
  input: "^gradients/sequential/dense/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/sequential/dense/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/AddN"
  input: "^gradients/sequential/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sigmoid_cross_entropy_loss/xentropy/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/dense/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/dense/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/sequential/dense/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/dense/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/dense/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/sequential/dense/BiasAdd_grad/tuple/control_dependency"
  input: "sequential/dense/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 655
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/dense/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "sequential/flatten/Reshape"
  input: "gradients/sequential/dense/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 655
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/dense/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/dense/MatMul_grad/MatMul"
  input: "^gradients/sequential/dense/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/sequential/dense/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/dense/MatMul_grad/MatMul"
  input: "^gradients/sequential/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/dense/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 655
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/dense/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/dense/MatMul_grad/MatMul_1"
  input: "^gradients/sequential/dense/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/dense/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 655
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/flatten/Reshape_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_3/transpose_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/flatten/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/dense/MatMul_grad/tuple/control_dependency"
  input: "gradients/sequential/flatten/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "sequential/lstm_3/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/sequential/flatten/Reshape_grad/Reshape"
  input: "gradients/sequential/lstm_3/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "sequential/lstm_3/TensorArray_1"
  input: "sequential/lstm_3/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "sequential/lstm_3/while/Exit_1"
  input: "^gradients/sequential/lstm_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "gradients/sequential/lstm_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "sequential/lstm_3/TensorArrayStack/range"
  input: "gradients/sequential/lstm_3/transpose_1_grad/transpose"
  input: "gradients/sequential/lstm_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like"
  op: "ZerosLike"
  input: "sequential/lstm_3/while/Exit_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_1"
  op: "ZerosLike"
  input: "sequential/lstm_3/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Exit_1_grad/b_exit"
  op: "Enter"
  input: "gradients/sequential/lstm_3/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "gradients/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "gradients/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Switch_1_grad/b_switch"
  op: "Merge"
  input: "gradients/sequential/lstm_3/while/Exit_1_grad/b_exit"
  input: "gradients/sequential/lstm_3/while/Switch_1_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "gradients/sequential/lstm_3/while/Exit_2_grad/b_exit"
  input: "gradients/sequential/lstm_3/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "gradients/sequential/lstm_3/while/Exit_3_grad/b_exit"
  input: "gradients/sequential/lstm_3/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Merge_1_grad/Switch"
  op: "Switch"
  input: "gradients/sequential/lstm_3/while/Switch_1_grad/b_switch"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/Merge_1_grad/Switch"
}
node {
  name: "gradients/sequential/lstm_3/while/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/Merge_1_grad/Switch"
  input: "^gradients/sequential/lstm_3/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/Merge_1_grad/Switch:1"
  input: "^gradients/sequential/lstm_3/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "gradients/sequential/lstm_3/while/Switch_2_grad/b_switch"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/Merge_2_grad/Switch"
}
node {
  name: "gradients/sequential/lstm_3/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/Merge_2_grad/Switch"
  input: "^gradients/sequential/lstm_3/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/Merge_2_grad/Switch:1"
  input: "^gradients/sequential/lstm_3/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "gradients/sequential/lstm_3/while/Switch_3_grad/b_switch"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/Merge_3_grad/Switch"
}
node {
  name: "gradients/sequential/lstm_3/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/Merge_3_grad/Switch"
  input: "^gradients/sequential/lstm_3/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/Merge_3_grad/Switch:1"
  input: "^gradients/sequential/lstm_3/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Enter_1_grad/Exit"
  op: "Exit"
  input: "gradients/sequential/lstm_3/while/Merge_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "gradients/sequential/lstm_3/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "gradients/sequential/lstm_3/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients/sequential/lstm_3/while/Merge_1_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/mul_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "sequential/lstm_3/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/mul_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^gradients/sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/mul_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gradients/sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "gradients/sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "sequential/lstm_3/while/Identity"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^gradients/sequential/lstm_3/while/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_3/while/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/Add_3_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_3/while/Add_7_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/Add_7_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_3/while/MatMul_1_grad/MatMul/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/MatMul_2_grad/MatMul/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/MatMul_3_grad/MatMul/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/MatMul_3_grad/MatMul_1/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/MatMul_4_grad/MatMul/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/MatMul_5_grad/MatMul/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/MatMul_6_grad/MatMul/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul_1/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/MatMul_grad/MatMul/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/MatMul_grad/MatMul_1/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_3/while/Mul_4_grad/Mul_1/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_3/while/Mul_5_grad/Mul_1/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_3/while/Mul_8_grad/Mul_1/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_3/while/add_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_3/while/add_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_3/while/add_6_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/add_6_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_3/while/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/add_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/LessEqual/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_1_grad/GreaterEqual/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/LessEqual/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_2_grad/GreaterEqual/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_grad/GreaterEqual/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_3/while/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_3/while/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_3/while/mul_3_grad/Mul_1/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/mul_6_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/mul_6_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_3/while/mul_6_grad/Mul/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/mul_6_grad/Mul_1/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/mul_7_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/mul_7_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_3/while/mul_7_grad/Mul/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/mul_7_grad/Mul_1/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/mul_9_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/mul_9_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_3/while/mul_9_grad/Mul/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/mul_9_grad/Mul_1/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_3/while/mul_grad/BroadcastGradientArgs/StackPopV2_1"
}
node {
  name: "gradients/sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^gradients/sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "gradients/sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^gradients/sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^gradients/sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_1"
  op: "AddN"
  input: "gradients/sequential/lstm_3/while/Merge_2_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_9_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_3/while/clip_by_value_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_9_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_3/while/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_9_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_9_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_9_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_9_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_9_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_9_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_9_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_9_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_9_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_9_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_9_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_9_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_9_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_9_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_9_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_9_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_9_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_9_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_1"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_9_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_9_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_9_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_9_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/Mul/Enter"
  input: "sequential/lstm_3/while/Tanh_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_9_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_9_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_9_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/Mul"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_9_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/Sum"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_9_grad/Mul_1"
  op: "Mul"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/Mul_1/StackPopV2"
  input: "gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_9_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/clip_by_value_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_9_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/clip_by_value_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_9_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_9_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/Mul_1/Enter"
  input: "sequential/lstm_3/while/clip_by_value_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_9_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_9_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_9_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/Mul_1"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_9_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/Sum_1"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_9_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/mul_9_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/mul_9_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_3/while/mul_9_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/mul_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_9_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_9_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/Reshape_1"
  input: "^gradients/sequential/lstm_3/while/mul_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_9_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_3/while/clip_by_value_2/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/Shape_2"
  op: "Shape"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/zeros"
  op: "Fill"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/Shape_2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/GreaterEqual/StackPopV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/GreaterEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/GreaterEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/clip_by_value_2/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/GreaterEqual/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/GreaterEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/clip_by_value_2/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/GreaterEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/GreaterEqual/Enter"
  input: "sequential/lstm_3/while/clip_by_value_2/Minimum"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/GreaterEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/GreaterEqual/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/GreaterEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/GreaterEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/clip_by_value_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/clip_by_value_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/Select"
  op: "Select"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/GreaterEqual"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/Select"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/Sum"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/Select_1"
  op: "Select"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/GreaterEqual"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/zeros"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/Select_1"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/Sum_1"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_2_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_2_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/clip_by_value_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/Reshape_1"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/clip_by_value_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/Mul/StackPopV2"
  input: "gradients/sequential/lstm_3/while/mul_9_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Switch_1_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_3/while/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/Shape_2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/LessEqual/StackPopV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/LessEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/LessEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/Add_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/LessEqual/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/LessEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/Add_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/LessEqual/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/LessEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/LessEqual/Enter"
  input: "sequential/lstm_3/while/Add_7"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/LessEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/LessEqual/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/LessEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/LessEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/Select"
  op: "Select"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/LessEqual"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/Select"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/Sum"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/LessEqual"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/zeros"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/Select_1"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/Sum_1"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/Reshape_1"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_2"
  op: "AddN"
  input: "gradients/sequential/lstm_3/while/Merge_3_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_3/while/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_5_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_3/while/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_5_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_3/while/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_3/while/add_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_3/while/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_5_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/add_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_5_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/add_5_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/add_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_5_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/add_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_5_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/add_5_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_3/while/add_5_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_5_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/add_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/add_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_5_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/add_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_5_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/add_5_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/add_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_5_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/add_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_5_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/add_5_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_3/while/add_5_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/add_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/add_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_5_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_2"
  input: "gradients/sequential/lstm_3/while/add_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/add_5_grad/Sum"
  input: "gradients/sequential/lstm_3/while/add_5_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_2"
  input: "gradients/sequential/lstm_3/while/add_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/add_5_grad/Sum_1"
  input: "gradients/sequential/lstm_3/while/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/add_5_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/add_5_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_3/while/add_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/add_5_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/add_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/add_5_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/add_5_grad/Reshape_1"
  input: "^gradients/sequential/lstm_3/while/add_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/add_5_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_7_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_3/while/Mul_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_7_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_3/while/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_3/while/Add_7_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_3/while/Add_7_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_7_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Add_7_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_7_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/Add_7_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Add_7_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_7_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/Add_7_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_7_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/Add_7_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_3/while/Add_7_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_7_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/Add_7_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_7_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/Add_7_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_7_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Add_7_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_7_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/Add_7_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Add_7_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_7_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/Add_7_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_7_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/Add_7_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_3/while/Add_7_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_7_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/Add_7_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_7_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/Add_7_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_7_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_3/while/Add_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_7_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/Add_7_grad/Sum"
  input: "gradients/sequential/lstm_3/while/Add_7_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_7_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/clip_by_value_2/Minimum_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_3/while/Add_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_7_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/Add_7_grad/Sum_1"
  input: "gradients/sequential/lstm_3/while/Add_7_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/Add_7_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/Add_7_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_3/while/Add_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/Add_7_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/Add_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Add_7_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/Add_7_grad/Reshape_1"
  input: "^gradients/sequential/lstm_3/while/Add_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Add_7_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_6_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_3/while/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_6_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_3/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_6_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_6_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_6_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_6_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_6_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_6_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_6_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_6_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_6_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_6_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_6_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_6_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_6_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_6_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_6_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_6_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_6_grad/Mul"
  op: "Mul"
  input: "gradients/sequential/lstm_3/while/add_5_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_6_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_6_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_6_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_6_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/Mul/Enter"
  input: "sequential/lstm_3/while/Identity_3"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_6_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_6_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_6_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/Mul"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_6_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/Sum"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_6_grad/Mul_1"
  op: "Mul"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/Mul_1/StackPopV2"
  input: "gradients/sequential/lstm_3/while/add_5_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_6_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/clip_by_value_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_6_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/clip_by_value_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_6_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_6_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/Mul_1/Enter"
  input: "sequential/lstm_3/while/clip_by_value_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_6_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_6_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_6_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/Mul_1"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_6_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/Sum_1"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/mul_6_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/mul_6_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_3/while/mul_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/mul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_6_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/Reshape_1"
  input: "^gradients/sequential/lstm_3/while/mul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_6_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_7_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_3/while/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_7_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_3/while/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_7_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_7_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_7_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_7_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_7_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_7_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_7_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_7_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_7_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_7_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_7_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_7_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_7_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_7_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_7_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_7_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_7_grad/Mul"
  op: "Mul"
  input: "gradients/sequential/lstm_3/while/add_5_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_7_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_7_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_7_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_7_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/Mul/Enter"
  input: "sequential/lstm_3/while/Tanh"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_7_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_7_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_7_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/Mul"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_7_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/Sum"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_7_grad/Mul_1"
  op: "Mul"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/Mul_1/StackPopV2"
  input: "gradients/sequential/lstm_3/while/add_5_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_7_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/clip_by_value"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_7_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/clip_by_value"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_7_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_7_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/Mul_1/Enter"
  input: "sequential/lstm_3/while/clip_by_value"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_7_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_7_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_7_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/Mul_1"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_7_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/Sum_1"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/mul_7_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/mul_7_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_3/while/mul_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_7_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/Reshape_1"
  input: "^gradients/sequential/lstm_3/while/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_7_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_8_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_3/while/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_8_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_3/while/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_8_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_3/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_3/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_8_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Mul_8_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_8_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/Mul_8_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Mul_8_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_8_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/Mul_8_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_8_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/Mul_8_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_3/while/Mul_8_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/Mul_8_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_8_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Mul_8_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_8_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/Mul_8_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Mul_8_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_8_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/Mul_8_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_8_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/Mul_8_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_3/while/Mul_8_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/Mul_8_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_8_grad/Mul"
  op: "Mul"
  input: "gradients/sequential/lstm_3/while/Add_7_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_3/while/Mul_8_grad/Mul/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_8_grad/Mul/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_8_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/Mul_8_grad/Mul"
  input: "gradients/sequential/lstm_3/while/Mul_8_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_8_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/Mul_8_grad/Sum"
  input: "gradients/sequential/lstm_3/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_8_grad/Mul_1"
  op: "Mul"
  input: "gradients/sequential/lstm_3/while/Mul_8_grad/Mul_1/StackPopV2"
  input: "gradients/sequential/lstm_3/while/Add_7_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_8_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/add_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_8_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/Mul_8_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/add_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_8_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/Mul_8_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_8_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/Mul_8_grad/Mul_1/Enter"
  input: "sequential/lstm_3/while/add_6"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_8_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/Mul_8_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_8_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/Mul_8_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_8_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/Mul_8_grad/Mul_1"
  input: "gradients/sequential/lstm_3/while/Mul_8_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_8_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/Mul_8_grad/Sum_1"
  input: "gradients/sequential/lstm_3/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_8_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/Mul_8_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/Mul_8_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_8_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/Mul_8_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/Mul_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Mul_8_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_8_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/Mul_8_grad/Reshape_1"
  input: "^gradients/sequential/lstm_3/while/Mul_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Mul_8_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_3/while/clip_by_value_1/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/Shape_2"
  op: "Shape"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/zeros"
  op: "Fill"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/Shape_2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/GreaterEqual/StackPopV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/GreaterEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/GreaterEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/GreaterEqual/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/GreaterEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/GreaterEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/GreaterEqual/Enter"
  input: "sequential/lstm_3/while/clip_by_value_1/Minimum"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/GreaterEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/GreaterEqual/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/GreaterEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/GreaterEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/clip_by_value_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/clip_by_value_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/Select"
  op: "Select"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/Select"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/Sum"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/Select_1"
  op: "Select"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/zeros"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/Select_1"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/Sum_1"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_1_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_1_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/clip_by_value_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/Reshape_1"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/clip_by_value_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_3/while/clip_by_value/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_grad/Shape_2"
  op: "Shape"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_grad/zeros"
  op: "Fill"
  input: "gradients/sequential/lstm_3/while/clip_by_value_grad/Shape_2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/sequential/lstm_3/while/clip_by_value_grad/GreaterEqual/StackPopV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_grad/GreaterEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_grad/GreaterEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_grad/GreaterEqual/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_grad/GreaterEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_grad/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/clip_by_value_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_grad/GreaterEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_grad/GreaterEqual/Enter"
  input: "sequential/lstm_3/while/clip_by_value/Minimum"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_grad/GreaterEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_grad/GreaterEqual/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_grad/GreaterEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/clip_by_value_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_grad/GreaterEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_3/while/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/clip_by_value_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/clip_by_value_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_3/while/clip_by_value_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_grad/Select"
  op: "Select"
  input: "gradients/sequential/lstm_3/while/clip_by_value_grad/GreaterEqual"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_3/while/clip_by_value_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/clip_by_value_grad/Select"
  input: "gradients/sequential/lstm_3/while/clip_by_value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/clip_by_value_grad/Sum"
  input: "gradients/sequential/lstm_3/while/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_grad/Select_1"
  op: "Select"
  input: "gradients/sequential/lstm_3/while/clip_by_value_grad/GreaterEqual"
  input: "gradients/sequential/lstm_3/while/clip_by_value_grad/zeros"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/clip_by_value_grad/Select_1"
  input: "gradients/sequential/lstm_3/while/clip_by_value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/clip_by_value_grad/Sum_1"
  input: "gradients/sequential/lstm_3/while/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/clip_by_value_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/clip_by_value_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/clip_by_value_grad/Reshape_1"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/clip_by_value_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/Mul/StackPopV2"
  input: "gradients/sequential/lstm_3/while/mul_7_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_6_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_3/while/BiasAdd_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_6_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_3/while/MatMul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_3/while/add_6_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_3/while/add_6_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_6_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/add_6_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_6_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/add_6_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/add_6_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_6_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/add_6_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_6_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/add_6_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_3/while/add_6_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_6_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/add_6_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_6_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/add_6_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_6_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/add_6_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_6_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/add_6_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/add_6_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_6_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/add_6_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_6_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/add_6_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_3/while/add_6_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_6_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/add_6_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_6_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/add_6_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_6_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/Mul_8_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_3/while/add_6_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_6_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/add_6_grad/Sum"
  input: "gradients/sequential/lstm_3/while/add_6_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_6_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/Mul_8_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_3/while/add_6_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_6_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/add_6_grad/Sum_1"
  input: "gradients/sequential/lstm_3/while/add_6_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/add_6_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/add_6_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_3/while/add_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/add_6_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/add_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/add_6_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/add_6_grad/Reshape_1"
  input: "^gradients/sequential/lstm_3/while/add_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/add_6_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_3/while/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/Shape_2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/LessEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/LessEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/Add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/LessEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/Add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/LessEqual/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/LessEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/LessEqual/Enter"
  input: "sequential/lstm_3/while/Add_3"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/LessEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/Select"
  op: "Select"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/Select"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/Sum"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/zeros"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/Select_1"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/Sum_1"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/Reshape_1"
  input: "^gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/sequential/lstm_3/while/mul_6_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_3/while/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/sequential/lstm_3/while/clip_by_value_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/Shape_2"
  input: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/LessEqual/StackPopV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/LessEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/LessEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/Add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/LessEqual/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/LessEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/Add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/LessEqual/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/LessEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/LessEqual/Enter"
  input: "sequential/lstm_3/while/Add_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/LessEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/LessEqual/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/LessEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/LessEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/Select"
  op: "Select"
  input: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/sequential/lstm_3/while/clip_by_value_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/Select"
  input: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/Sum"
  input: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/zeros"
  input: "gradients/sequential/lstm_3/while/clip_by_value_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/Select_1"
  input: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/Sum_1"
  input: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/Reshape_1"
  input: "^gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_4_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_3/while/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_4_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_3/while/MatMul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_3/while/add_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_3/while/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_4_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/add_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_4_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/add_4_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/add_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_4_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/add_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_4_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/add_4_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_3/while/add_4_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_4_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/add_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/add_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_4_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/add_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_4_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/add_4_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/add_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_4_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/add_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_4_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/add_4_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_3/while/add_4_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/add_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/add_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_4_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/Tanh_grad/TanhGrad"
  input: "gradients/sequential/lstm_3/while/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/add_4_grad/Sum"
  input: "gradients/sequential/lstm_3/while/add_4_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/Tanh_grad/TanhGrad"
  input: "gradients/sequential/lstm_3/while/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/add_4_grad/Sum_1"
  input: "gradients/sequential/lstm_3/while/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/add_4_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/add_4_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_3/while/add_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/add_4_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/add_4_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/add_4_grad/Reshape_1"
  input: "^gradients/sequential/lstm_3/while/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/add_4_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/BiasAdd_3_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/sequential/lstm_3/while/add_6_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/BiasAdd_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/BiasAdd_3_grad/BiasAddGrad"
  input: "^gradients/sequential/lstm_3/while/add_6_grad/tuple/control_dependency"
}
node {
  name: "gradients/sequential/lstm_3/while/BiasAdd_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/add_6_grad/tuple/control_dependency"
  input: "^gradients/sequential/lstm_3/while/BiasAdd_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/add_6_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/BiasAdd_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/BiasAdd_3_grad/BiasAddGrad"
  input: "^gradients/sequential/lstm_3/while/BiasAdd_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/BiasAdd_3_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul"
  op: "MatMul"
  input: "gradients/sequential/lstm_3/while/add_6_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/strided_slice_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/strided_slice_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul/Enter"
  input: "sequential/lstm_3/while/strided_slice_3"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul_1/StackPopV2"
  input: "gradients/sequential/lstm_3/while/add_6_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul_1/Enter"
  input: "sequential/lstm_3/while/Identity_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul"
  input: "^gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul_1"
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul"
  input: "^gradients/sequential/lstm_3/while/MatMul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul_1"
  input: "^gradients/sequential/lstm_3/while/MatMul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_3_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_3/while/Mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_3_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_3/while/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_3/while/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_3/while/Add_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_3_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Add_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_3_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/Add_3_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Add_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_3_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/Add_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_3_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/Add_3_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_3/while/Add_3_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/Add_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/Add_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_3_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Add_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_3_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/Add_3_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Add_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_3_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/Add_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_3_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/Add_3_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_3/while/Add_3_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_3_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/Add_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/Add_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_3_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_3/while/Add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/Add_3_grad/Sum"
  input: "gradients/sequential/lstm_3/while/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/clip_by_value_1/Minimum_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_3/while/Add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/Add_3_grad/Sum_1"
  input: "gradients/sequential/lstm_3/while/Add_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/Add_3_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/Add_3_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_3/while/Add_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/Add_3_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/Add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Add_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/Add_3_grad/Reshape_1"
  input: "^gradients/sequential/lstm_3/while/Add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Add_3_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_1_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_3/while/Mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_1_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_3/while/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_3/while/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_3/while/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/Add_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/Add_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_3/while/Add_1_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/Add_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/Add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/Add_1_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_3/while/Add_1_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/Add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/Add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_1_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_3/while/Add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/Add_1_grad/Sum"
  input: "gradients/sequential/lstm_3/while/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/clip_by_value/Minimum_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_3/while/Add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/Add_1_grad/Sum_1"
  input: "gradients/sequential/lstm_3/while/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/Add_1_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/Add_1_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_3/while/Add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/Add_1_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/Add_1_grad/Reshape_1"
  input: "^gradients/sequential/lstm_3/while/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/BiasAdd_2_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/sequential/lstm_3/while/add_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/BiasAdd_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/BiasAdd_2_grad/BiasAddGrad"
  input: "^gradients/sequential/lstm_3/while/add_4_grad/tuple/control_dependency"
}
node {
  name: "gradients/sequential/lstm_3/while/BiasAdd_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/add_4_grad/tuple/control_dependency"
  input: "^gradients/sequential/lstm_3/while/BiasAdd_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/add_4_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/BiasAdd_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/BiasAdd_2_grad/BiasAddGrad"
  input: "^gradients/sequential/lstm_3/while/BiasAdd_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/BiasAdd_2_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_6_grad/MatMul"
  op: "MatMul"
  input: "gradients/sequential/lstm_3/while/add_4_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_3/while/MatMul_6_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_6_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/strided_slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_6_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/MatMul_6_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/strided_slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_6_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/MatMul_6_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_6_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/MatMul_6_grad/MatMul/Enter"
  input: "sequential/lstm_3/while/strided_slice_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_6_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/MatMul_6_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_6_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/MatMul_6_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_6_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul_1/StackPopV2"
  input: "gradients/sequential/lstm_3/while/add_4_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/MatMul_6_grad/MatMul"
  input: "^gradients/sequential/lstm_3/while/MatMul_6_grad/MatMul_1"
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/MatMul_6_grad/MatMul"
  input: "^gradients/sequential/lstm_3/while/MatMul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/MatMul_6_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/MatMul_6_grad/MatMul_1"
  input: "^gradients/sequential/lstm_3/while/MatMul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/MatMul_6_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_3_grad/MatMul"
  op: "MatMul"
  input: "gradients/sequential/lstm_3/while/BiasAdd_3_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_3/while/MatMul_3_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_3_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_3_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/MatMul_3_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_3_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/MatMul_3_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_3_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/MatMul_3_grad/MatMul/Enter"
  input: "sequential/lstm_3/while/split:3"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_3_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/MatMul_3_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_3_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/MatMul_3_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_3_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/sequential/lstm_3/while/MatMul_3_grad/MatMul_1/StackPopV2"
  input: "gradients/sequential/lstm_3/while/BiasAdd_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_3_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/mul_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_3_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/MatMul_3_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/mul_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_3_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/MatMul_3_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_3_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/MatMul_3_grad/MatMul_1/Enter"
  input: "sequential/lstm_3/while/mul_3"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_3_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/MatMul_3_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_3_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/MatMul_3_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/MatMul_3_grad/MatMul"
  input: "^gradients/sequential/lstm_3/while/MatMul_3_grad/MatMul_1"
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/MatMul_3_grad/MatMul"
  input: "^gradients/sequential/lstm_3/while/MatMul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/MatMul_3_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/MatMul_3_grad/MatMul_1"
  input: "^gradients/sequential/lstm_3/while/MatMul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/MatMul_3_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/strided_slice_3_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/strided_slice_3_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/sequential/lstm_3/while/strided_slice_3_grad/Shape"
  input: "gradients/sequential/lstm_3/while/strided_slice_3_grad/StridedSliceGrad/Const"
  input: "gradients/sequential/lstm_3/while/strided_slice_3_grad/StridedSliceGrad/Const_1"
  input: "gradients/sequential/lstm_3/while/strided_slice_3_grad/StridedSliceGrad/Const_2"
  input: "gradients/sequential/lstm_3/while/MatMul_7_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/strided_slice_3_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\211\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/strided_slice_3_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/strided_slice_3_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_5_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_3/while/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_5_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_3/while/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_3/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_3/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_5_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Mul_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_5_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/Mul_5_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Mul_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_5_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/Mul_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_5_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/Mul_5_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_3/while/Mul_5_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/Mul_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_5_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Mul_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_5_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/Mul_5_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Mul_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_5_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/Mul_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_5_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/Mul_5_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_3/while/Mul_5_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/Mul_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_5_grad/Mul"
  op: "Mul"
  input: "gradients/sequential/lstm_3/while/Add_3_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_3/while/Mul_5_grad/Mul/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_5_grad/Mul/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_5_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/Mul_5_grad/Mul"
  input: "gradients/sequential/lstm_3/while/Mul_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/Mul_5_grad/Sum"
  input: "gradients/sequential/lstm_3/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_5_grad/Mul_1"
  op: "Mul"
  input: "gradients/sequential/lstm_3/while/Mul_5_grad/Mul_1/StackPopV2"
  input: "gradients/sequential/lstm_3/while/Add_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_5_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_5_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/Mul_5_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_5_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/Mul_5_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_5_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/Mul_5_grad/Mul_1/Enter"
  input: "sequential/lstm_3/while/add_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_5_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/Mul_5_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_5_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/Mul_5_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/Mul_5_grad/Mul_1"
  input: "gradients/sequential/lstm_3/while/Mul_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/Mul_5_grad/Sum_1"
  input: "gradients/sequential/lstm_3/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/Mul_5_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/Mul_5_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/Mul_5_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/Mul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Mul_5_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/Mul_5_grad/Reshape_1"
  input: "^gradients/sequential/lstm_3/while/Mul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Mul_5_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_4_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_3/while/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_4_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_3/while/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_3/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_3/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_4_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Mul_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_4_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/Mul_4_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Mul_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_4_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/Mul_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_4_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/Mul_4_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_3/while/Mul_4_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/Mul_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_4_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Mul_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_4_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/Mul_4_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Mul_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_4_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/Mul_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_4_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/Mul_4_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_3/while/Mul_4_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/Mul_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_4_grad/Mul"
  op: "Mul"
  input: "gradients/sequential/lstm_3/while/Add_1_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_3/while/Mul_4_grad/Mul/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_4_grad/Mul/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_4_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/Mul_4_grad/Mul"
  input: "gradients/sequential/lstm_3/while/Mul_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/Mul_4_grad/Sum"
  input: "gradients/sequential/lstm_3/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_4_grad/Mul_1"
  op: "Mul"
  input: "gradients/sequential/lstm_3/while/Mul_4_grad/Mul_1/StackPopV2"
  input: "gradients/sequential/lstm_3/while/Add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_4_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_4_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/Mul_4_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_4_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/Mul_4_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_4_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/Mul_4_grad/Mul_1/Enter"
  input: "sequential/lstm_3/while/add"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_4_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/Mul_4_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_4_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/Mul_4_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/Mul_4_grad/Mul_1"
  input: "gradients/sequential/lstm_3/while/Mul_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/Mul_4_grad/Sum_1"
  input: "gradients/sequential/lstm_3/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/Mul_4_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/Mul_4_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/Mul_4_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/Mul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Mul_4_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Mul_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/Mul_4_grad/Reshape_1"
  input: "^gradients/sequential/lstm_3/while/Mul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/Mul_4_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_2_grad/MatMul"
  op: "MatMul"
  input: "gradients/sequential/lstm_3/while/BiasAdd_2_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_3/while/MatMul_2_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_2_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_2_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/MatMul_2_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_2_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/MatMul_2_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_2_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/MatMul_2_grad/MatMul/Enter"
  input: "sequential/lstm_3/while/split:2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_2_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/MatMul_2_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_2_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/MatMul_2_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_2_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/sequential/lstm_3/while/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "gradients/sequential/lstm_3/while/BiasAdd_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_2_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_2_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/MatMul_2_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_2_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/MatMul_2_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_2_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/MatMul_2_grad/MatMul_1/Enter"
  input: "sequential/lstm_3/while/mul_2"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_2_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/MatMul_2_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_2_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/MatMul_2_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/MatMul_2_grad/MatMul"
  input: "^gradients/sequential/lstm_3/while/MatMul_2_grad/MatMul_1"
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/MatMul_2_grad/MatMul"
  input: "^gradients/sequential/lstm_3/while/MatMul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/MatMul_2_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/MatMul_2_grad/MatMul_1"
  input: "^gradients/sequential/lstm_3/while/MatMul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/MatMul_2_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/strided_slice_2_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/strided_slice_2_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/sequential/lstm_3/while/strided_slice_2_grad/Shape"
  input: "gradients/sequential/lstm_3/while/strided_slice_2_grad/StridedSliceGrad/Const"
  input: "gradients/sequential/lstm_3/while/strided_slice_2_grad/StridedSliceGrad/Const_1"
  input: "gradients/sequential/lstm_3/while/strided_slice_2_grad/StridedSliceGrad/Const_2"
  input: "gradients/sequential/lstm_3/while/MatMul_6_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/strided_slice_2_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\006\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/strided_slice_2_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\211\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/strided_slice_2_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_3_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_3/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_3_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_3/while/mul_3/Enter"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_3/while/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_3/while/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_3_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_3_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/mul_3_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_3_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_3_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/mul_3_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_3/while/mul_3_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/mul_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_3_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/mul_3_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_3_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_3_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/mul_3_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_3/while/mul_3_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/mul_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_3_grad/Mul"
  op: "Mul"
  input: "gradients/sequential/lstm_3/while/MatMul_3_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_3/while/mul_3_grad/Mul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_3_grad/Mul/Enter"
  op: "Enter"
  input: "sequential/lstm_3/cond_3/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_3_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/mul_3_grad/Mul"
  input: "gradients/sequential/lstm_3/while/mul_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/mul_3_grad/Sum"
  input: "gradients/sequential/lstm_3/while/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_3_grad/Mul_1"
  op: "Mul"
  input: "gradients/sequential/lstm_3/while/mul_3_grad/Mul_1/StackPopV2"
  input: "gradients/sequential/lstm_3/while/MatMul_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_3_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_3_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/mul_3_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_3_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_3_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_3_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/mul_3_grad/Mul_1/Enter"
  input: "sequential/lstm_3/while/TensorArrayReadV3"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_3_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/mul_3_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_3_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_3_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/mul_3_grad/Mul_1"
  input: "gradients/sequential/lstm_3/while/mul_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/mul_3_grad/Sum_1"
  input: "gradients/sequential/lstm_3/while/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/mul_3_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/mul_3_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_3/while/mul_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/mul_3_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/mul_3_grad/Reshape_1"
  input: "^gradients/sequential/lstm_3/while/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_3_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_2_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_3/while/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_2_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_3/while/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_3/while/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_3/while/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/add_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/add_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_3/while/add_2_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/add_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/add_2_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_3/while/add_2_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/Mul_5_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_3/while/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/add_2_grad/Sum"
  input: "gradients/sequential/lstm_3/while/add_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/Mul_5_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_3/while/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/add_2_grad/Sum_1"
  input: "gradients/sequential/lstm_3/while/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/add_2_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/add_2_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_3/while/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/add_2_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/add_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/add_2_grad/Reshape_1"
  input: "^gradients/sequential/lstm_3/while/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/add_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_3/while/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_3/while/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_3/while/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_3/while/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/add_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_3/while/add_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/add_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/add_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_3/while/add_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/Mul_4_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_3/while/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/add_grad/Sum"
  input: "gradients/sequential/lstm_3/while/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/Mul_4_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_3/while/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/add_grad/Sum_1"
  input: "gradients/sequential/lstm_3/while/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/add_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/add_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_3/while/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/add_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/add_grad/Reshape_1"
  input: "^gradients/sequential/lstm_3/while/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_2_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_3/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_2_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_3/while/mul_2/Enter"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_3/while/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_3/while/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_3/while/mul_2_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_3/while/mul_2_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/sequential/lstm_3/while/MatMul_2_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_3/while/mul_2_grad/Mul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "sequential/lstm_3/cond_2/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/mul_2_grad/Mul"
  input: "gradients/sequential/lstm_3/while/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/mul_2_grad/Sum"
  input: "gradients/sequential/lstm_3/while/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/sequential/lstm_3/while/mul_3_grad/Mul_1/StackPopV2"
  input: "gradients/sequential/lstm_3/while/MatMul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/mul_2_grad/Mul_1"
  input: "gradients/sequential/lstm_3/while/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/mul_2_grad/Sum_1"
  input: "gradients/sequential/lstm_3/while/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/mul_2_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/mul_2_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_3/while/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/mul_2_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/mul_2_grad/Reshape_1"
  input: "^gradients/sequential/lstm_3/while/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/sequential/lstm_3/while/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/BiasAdd_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/BiasAdd_1_grad/BiasAddGrad"
  input: "^gradients/sequential/lstm_3/while/add_2_grad/tuple/control_dependency"
}
node {
  name: "gradients/sequential/lstm_3/while/BiasAdd_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/add_2_grad/tuple/control_dependency"
  input: "^gradients/sequential/lstm_3/while/BiasAdd_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/add_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/BiasAdd_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/BiasAdd_1_grad/BiasAddGrad"
  input: "^gradients/sequential/lstm_3/while/BiasAdd_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/BiasAdd_1_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_5_grad/MatMul"
  op: "MatMul"
  input: "gradients/sequential/lstm_3/while/add_2_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_3/while/MatMul_5_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_5_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/strided_slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_5_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/MatMul_5_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/strided_slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_5_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/MatMul_5_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_5_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/MatMul_5_grad/MatMul/Enter"
  input: "sequential/lstm_3/while/strided_slice_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_5_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/MatMul_5_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_5_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/MatMul_5_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_5_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul_1/StackPopV2"
  input: "gradients/sequential/lstm_3/while/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/MatMul_5_grad/MatMul"
  input: "^gradients/sequential/lstm_3/while/MatMul_5_grad/MatMul_1"
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/MatMul_5_grad/MatMul"
  input: "^gradients/sequential/lstm_3/while/MatMul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/MatMul_5_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/MatMul_5_grad/MatMul_1"
  input: "^gradients/sequential/lstm_3/while/MatMul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/MatMul_5_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/sequential/lstm_3/while/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/sequential/lstm_3/while/add_grad/tuple/control_dependency"
}
node {
  name: "gradients/sequential/lstm_3/while/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/add_grad/tuple/control_dependency"
  input: "^gradients/sequential/lstm_3/while/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/sequential/lstm_3/while/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_4_grad/MatMul"
  op: "MatMul"
  input: "gradients/sequential/lstm_3/while/add_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_3/while/MatMul_4_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_4_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_4_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/MatMul_4_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_4_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/MatMul_4_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_4_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/MatMul_4_grad/MatMul/Enter"
  input: "sequential/lstm_3/while/strided_slice"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_4_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/MatMul_4_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_4_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/MatMul_4_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_4_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul_1/StackPopV2"
  input: "gradients/sequential/lstm_3/while/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/MatMul_4_grad/MatMul"
  input: "^gradients/sequential/lstm_3/while/MatMul_4_grad/MatMul_1"
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/MatMul_4_grad/MatMul"
  input: "^gradients/sequential/lstm_3/while/MatMul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/MatMul_4_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/MatMul_4_grad/MatMul_1"
  input: "^gradients/sequential/lstm_3/while/MatMul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/MatMul_4_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/sequential/lstm_3/while/BiasAdd_1_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_3/while/MatMul_1_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_1_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_1_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/MatMul_1_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/MatMul_1_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_1_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/MatMul_1_grad/MatMul/Enter"
  input: "sequential/lstm_3/while/split:1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_1_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/MatMul_1_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_1_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/MatMul_1_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/sequential/lstm_3/while/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "gradients/sequential/lstm_3/while/BiasAdd_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_1_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_1_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/MatMul_1_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_1_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_1_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/MatMul_1_grad/MatMul_1/Enter"
  input: "sequential/lstm_3/while/mul_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_1_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/MatMul_1_grad/MatMul"
  input: "^gradients/sequential/lstm_3/while/MatMul_1_grad/MatMul_1"
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/MatMul_1_grad/MatMul"
  input: "^gradients/sequential/lstm_3/while/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/MatMul_1_grad/MatMul_1"
  input: "^gradients/sequential/lstm_3/while/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/MatMul_1_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/strided_slice_1_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/sequential/lstm_3/while/strided_slice_1_grad/Shape"
  input: "gradients/sequential/lstm_3/while/strided_slice_1_grad/StridedSliceGrad/Const"
  input: "gradients/sequential/lstm_3/while/strided_slice_1_grad/StridedSliceGrad/Const_1"
  input: "gradients/sequential/lstm_3/while/strided_slice_1_grad/StridedSliceGrad/Const_2"
  input: "gradients/sequential/lstm_3/while/MatMul_5_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/strided_slice_1_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\203\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/strided_slice_1_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\006\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/strided_slice_1_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/sequential/lstm_3/while/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_3/while/MatMul_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/MatMul_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/MatMul_grad/MatMul/Enter"
  input: "sequential/lstm_3/while/split"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/MatMul_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/sequential/lstm_3/while/MatMul_grad/MatMul_1/StackPopV2"
  input: "gradients/sequential/lstm_3/while/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/MatMul_grad/MatMul_1/Enter"
  input: "sequential/lstm_3/while/mul"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/MatMul_grad/MatMul"
  input: "^gradients/sequential/lstm_3/while/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/MatMul_grad/MatMul"
  input: "^gradients/sequential/lstm_3/while/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/MatMul_grad/MatMul_1"
  input: "^gradients/sequential/lstm_3/while/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/split_1_grad/concat"
  op: "ConcatV2"
  input: "gradients/sequential/lstm_3/while/BiasAdd_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_3/while/BiasAdd_1_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_3/while/BiasAdd_2_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_3/while/BiasAdd_3_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_3/while/split_1_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/split_1_grad/concat/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AddN_3"
  op: "AddN"
  input: "gradients/sequential/lstm_3/while/MatMul_7_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_3/while/MatMul_6_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_3/while/MatMul_5_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_3/while/MatMul_4_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/MatMul_7_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/strided_slice_grad/Shape"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/sequential/lstm_3/while/strided_slice_grad/Shape"
  input: "gradients/sequential/lstm_3/while/strided_slice_grad/StridedSliceGrad/Const"
  input: "gradients/sequential/lstm_3/while/strided_slice_grad/StridedSliceGrad/Const_1"
  input: "gradients/sequential/lstm_3/while/strided_slice_grad/StridedSliceGrad/Const_2"
  input: "gradients/sequential/lstm_3/while/MatMul_4_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/strided_slice_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/strided_slice_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\203\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/strided_slice_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_1_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_3/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_1_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_3/while/mul_1/Enter"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_3/while/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_3/while/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_3/while/mul_1_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/mul_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_3/while/mul_1_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/sequential/lstm_3/while/MatMul_1_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_3/while/mul_1_grad/Mul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "sequential/lstm_3/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/mul_1_grad/Mul"
  input: "gradients/sequential/lstm_3/while/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/mul_1_grad/Sum"
  input: "gradients/sequential/lstm_3/while/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/sequential/lstm_3/while/mul_3_grad/Mul_1/StackPopV2"
  input: "gradients/sequential/lstm_3/while/MatMul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/mul_1_grad/Mul_1"
  input: "gradients/sequential/lstm_3/while/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/mul_1_grad/Sum_1"
  input: "gradients/sequential/lstm_3/while/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/mul_1_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_3/while/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/mul_1_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/mul_1_grad/Reshape_1"
  input: "^gradients/sequential/lstm_3/while/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_3/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_3/while/mul/Enter"
  input: "^sequential/lstm_3/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_3/while/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_3/while/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/mul_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_3/while/mul_grad/Shape"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_3/while/mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_3/while/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_3/while/mul_grad/Shape_1"
  input: "^gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_3/while/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_grad/Mul"
  op: "Mul"
  input: "gradients/sequential/lstm_3/while/MatMul_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_3/while/mul_grad/Mul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_grad/Mul/Enter"
  op: "Enter"
  input: "sequential/lstm_3/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/mul_grad/Mul"
  input: "gradients/sequential/lstm_3/while/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/mul_grad/Sum"
  input: "gradients/sequential/lstm_3/while/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/sequential/lstm_3/while/mul_3_grad/Mul_1/StackPopV2"
  input: "gradients/sequential/lstm_3/while/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_3/while/mul_grad/Mul_1"
  input: "gradients/sequential/lstm_3/while/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_3/while/mul_grad/Sum_1"
  input: "gradients/sequential/lstm_3/while/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/while/mul_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/mul_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_3/while/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/mul_grad/Reshape"
  input: "^gradients/sequential/lstm_3/while/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/mul_grad/Reshape_1"
  input: "^gradients/sequential/lstm_3/while/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/sequential/lstm_3/while/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_3/while/MatMul_1_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_3/while/MatMul_2_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_3/while/MatMul_3_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_3/while/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/split_grad/concat/Const"
  op: "Const"
  input: "^gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_4"
  op: "AddN"
  input: "gradients/sequential/lstm_3/while/mul_3_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_3/while/mul_2_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_3/while/mul_1_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_3/while/mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/mul_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/sequential/lstm_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients/sequential/lstm_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "sequential/lstm_3/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "sequential/lstm_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients/sequential/lstm_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "gradients/sequential/lstm_3/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/sequential/lstm_3/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "gradients/AddN_4"
  input: "gradients/sequential/lstm_3/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/split_1/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 524
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/split_1/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/split_1/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/split_1/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/sequential/lstm_3/while/split_1/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/sequential/lstm_3/while/split_1/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/split_1/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/sequential/lstm_3/while/split_1/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/split_1/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/sequential/lstm_3/while/split_1/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/sequential/lstm_3/while/split_1_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/split_1/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/sequential/lstm_3/while/split_1/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/split_1/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/sequential/lstm_3/while/split_1/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_5"
  op: "AddN"
  input: "gradients/sequential/lstm_3/while/strided_slice_3_grad/StridedSliceGrad"
  input: "gradients/sequential/lstm_3/while/strided_slice_2_grad/StridedSliceGrad"
  input: "gradients/sequential/lstm_3/while/strided_slice_1_grad/StridedSliceGrad"
  input: "gradients/sequential/lstm_3/while/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/strided_slice_3_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/sequential/lstm_3/while/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/sequential/lstm_3/while/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/sequential/lstm_3/while/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/sequential/lstm_3/while/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/AddN_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/sequential/lstm_3/while/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/sequential/lstm_3/while/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "gradients/sequential/lstm_3/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "gradients/sequential/lstm_3/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "gradients/sequential/lstm_3/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "gradients/sequential/lstm_3/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "gradients/sequential/lstm_3/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/sequential/lstm_3/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "gradients/sequential/lstm_3/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/split/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/split/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/sequential/lstm_3/while/split/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_3/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/split/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/sequential/lstm_3/while/split/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/sequential/lstm_3/while/split/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/split/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/sequential/lstm_3/while/split/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/split/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/sequential/lstm_3/while/split/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/sequential/lstm_3/while/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/split/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/sequential/lstm_3/while/split/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/while/split/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/sequential/lstm_3/while/split/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "sequential/lstm_3/TensorArray"
  input: "gradients/sequential/lstm_3/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^gradients/sequential/lstm_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "gradients/sequential/lstm_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "sequential/lstm_3/TensorArrayUnstack/range"
  input: "gradients/sequential/lstm_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^gradients/sequential/lstm_3/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
}
node {
  name: "gradients/sequential/lstm_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^gradients/sequential/lstm_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_3/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^gradients/sequential/lstm_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_3/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "sequential/lstm_3/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_3/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/sequential/lstm_3/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_3/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "sequential/lstm_2/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/sequential/lstm_3/transpose_grad/transpose"
  input: "gradients/sequential/lstm_2/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "sequential/lstm_2/TensorArray_1"
  input: "sequential/lstm_2/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "sequential/lstm_2/while/Exit_1"
  input: "^gradients/sequential/lstm_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "gradients/sequential/lstm_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "sequential/lstm_2/TensorArrayStack/range"
  input: "gradients/sequential/lstm_2/transpose_1_grad/transpose"
  input: "gradients/sequential/lstm_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_2"
  op: "ZerosLike"
  input: "sequential/lstm_2/while/Exit_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_3"
  op: "ZerosLike"
  input: "sequential/lstm_2/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Exit_1_grad/b_exit"
  op: "Enter"
  input: "gradients/sequential/lstm_2/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "gradients/zeros_like_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "gradients/zeros_like_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Switch_1_grad/b_switch"
  op: "Merge"
  input: "gradients/sequential/lstm_2/while/Exit_1_grad/b_exit"
  input: "gradients/sequential/lstm_2/while/Switch_1_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "gradients/sequential/lstm_2/while/Exit_2_grad/b_exit"
  input: "gradients/sequential/lstm_2/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "gradients/sequential/lstm_2/while/Exit_3_grad/b_exit"
  input: "gradients/sequential/lstm_2/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Merge_1_grad/Switch"
  op: "Switch"
  input: "gradients/sequential/lstm_2/while/Switch_1_grad/b_switch"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/Merge_1_grad/Switch"
}
node {
  name: "gradients/sequential/lstm_2/while/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/Merge_1_grad/Switch"
  input: "^gradients/sequential/lstm_2/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/Merge_1_grad/Switch:1"
  input: "^gradients/sequential/lstm_2/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "gradients/sequential/lstm_2/while/Switch_2_grad/b_switch"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/Merge_2_grad/Switch"
}
node {
  name: "gradients/sequential/lstm_2/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/Merge_2_grad/Switch"
  input: "^gradients/sequential/lstm_2/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/Merge_2_grad/Switch:1"
  input: "^gradients/sequential/lstm_2/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "gradients/sequential/lstm_2/while/Switch_3_grad/b_switch"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/Merge_3_grad/Switch"
}
node {
  name: "gradients/sequential/lstm_2/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/Merge_3_grad/Switch"
  input: "^gradients/sequential/lstm_2/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/Merge_3_grad/Switch:1"
  input: "^gradients/sequential/lstm_2/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Enter_1_grad/Exit"
  op: "Exit"
  input: "gradients/sequential/lstm_2/while/Merge_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "gradients/sequential/lstm_2/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "gradients/sequential/lstm_2/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients/sequential/lstm_2/while/Merge_1_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/mul_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "sequential/lstm_2/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/mul_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^gradients/sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/mul_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gradients/sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "gradients/sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "sequential/lstm_2/while/Identity"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^gradients/sequential/lstm_2/while/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_2/while/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/Add_3_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_2/while/Add_7_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/Add_7_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_2/while/MatMul_1_grad/MatMul/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/MatMul_2_grad/MatMul/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/MatMul_3_grad/MatMul/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/MatMul_3_grad/MatMul_1/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/MatMul_4_grad/MatMul/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/MatMul_5_grad/MatMul/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/MatMul_6_grad/MatMul/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul_1/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/MatMul_grad/MatMul/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/MatMul_grad/MatMul_1/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_2/while/Mul_4_grad/Mul_1/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_2/while/Mul_5_grad/Mul_1/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_2/while/Mul_8_grad/Mul_1/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_2/while/add_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_2/while/add_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_2/while/add_6_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/add_6_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_2/while/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/add_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/LessEqual/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_1_grad/GreaterEqual/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/LessEqual/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_2_grad/GreaterEqual/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_grad/GreaterEqual/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_2/while/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_2/while/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_2/while/mul_3_grad/Mul_1/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/mul_6_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/mul_6_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_2/while/mul_6_grad/Mul/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/mul_6_grad/Mul_1/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/mul_7_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/mul_7_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_2/while/mul_7_grad/Mul/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/mul_7_grad/Mul_1/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/mul_9_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/mul_9_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_2/while/mul_9_grad/Mul/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/mul_9_grad/Mul_1/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_2/while/mul_grad/BroadcastGradientArgs/StackPopV2_1"
}
node {
  name: "gradients/sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^gradients/sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "gradients/sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^gradients/sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^gradients/sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_6"
  op: "AddN"
  input: "gradients/sequential/lstm_2/while/Merge_2_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_9_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_2/while/clip_by_value_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_9_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_2/while/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_9_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_9_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_9_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_9_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_9_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_9_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_9_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_9_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_9_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_9_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_9_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_9_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_9_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_9_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_9_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_9_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_9_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_9_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_6"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_9_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_9_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_9_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_9_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/Mul/Enter"
  input: "sequential/lstm_2/while/Tanh_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_9_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_9_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_9_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/Mul"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_9_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/Sum"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_9_grad/Mul_1"
  op: "Mul"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/Mul_1/StackPopV2"
  input: "gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_9_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/clip_by_value_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_9_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/clip_by_value_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_9_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_9_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/Mul_1/Enter"
  input: "sequential/lstm_2/while/clip_by_value_2"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_9_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_9_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_9_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/Mul_1"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_9_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/Sum_1"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_9_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/mul_9_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/mul_9_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_2/while/mul_9_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/mul_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_9_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_9_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/Reshape_1"
  input: "^gradients/sequential/lstm_2/while/mul_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_9_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_2/while/clip_by_value_2/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/Shape_2"
  op: "Shape"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/zeros"
  op: "Fill"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/Shape_2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/GreaterEqual/StackPopV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/GreaterEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/GreaterEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/clip_by_value_2/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/GreaterEqual/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/GreaterEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/clip_by_value_2/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/GreaterEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/GreaterEqual/Enter"
  input: "sequential/lstm_2/while/clip_by_value_2/Minimum"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/GreaterEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/GreaterEqual/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/GreaterEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/GreaterEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/clip_by_value_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/clip_by_value_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/Select"
  op: "Select"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/GreaterEqual"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/Select"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/Sum"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/Select_1"
  op: "Select"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/GreaterEqual"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/zeros"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/Select_1"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/Sum_1"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_2_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_2_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/clip_by_value_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/Reshape_1"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/clip_by_value_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/Mul/StackPopV2"
  input: "gradients/sequential/lstm_2/while/mul_9_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Switch_1_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_2/while/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/Shape_2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/LessEqual/StackPopV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/LessEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/LessEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/Add_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/LessEqual/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/LessEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/Add_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/LessEqual/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/LessEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/LessEqual/Enter"
  input: "sequential/lstm_2/while/Add_7"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/LessEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/LessEqual/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/LessEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/LessEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/Select"
  op: "Select"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/LessEqual"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/Select"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/Sum"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/LessEqual"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/zeros"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/Select_1"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/Sum_1"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/Reshape_1"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_7"
  op: "AddN"
  input: "gradients/sequential/lstm_2/while/Merge_3_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_2/while/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_5_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_2/while/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_5_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_2/while/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_2/while/add_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_2/while/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_5_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/add_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_5_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/add_5_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/add_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_5_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/add_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_5_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/add_5_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_2/while/add_5_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_5_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/add_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/add_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_5_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/add_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_5_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/add_5_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/add_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_5_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/add_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_5_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/add_5_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_2/while/add_5_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/add_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/add_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_5_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_7"
  input: "gradients/sequential/lstm_2/while/add_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/add_5_grad/Sum"
  input: "gradients/sequential/lstm_2/while/add_5_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_7"
  input: "gradients/sequential/lstm_2/while/add_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/add_5_grad/Sum_1"
  input: "gradients/sequential/lstm_2/while/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/add_5_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/add_5_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_2/while/add_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/add_5_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/add_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/add_5_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/add_5_grad/Reshape_1"
  input: "^gradients/sequential/lstm_2/while/add_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/add_5_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_7_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_2/while/Mul_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_7_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_2/while/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_2/while/Add_7_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_2/while/Add_7_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_7_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Add_7_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_7_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/Add_7_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Add_7_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_7_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/Add_7_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_7_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/Add_7_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_2/while/Add_7_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_7_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/Add_7_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_7_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/Add_7_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_7_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Add_7_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_7_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/Add_7_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Add_7_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_7_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/Add_7_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_7_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/Add_7_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_2/while/Add_7_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_7_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/Add_7_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_7_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/Add_7_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_7_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_2/while/Add_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_7_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/Add_7_grad/Sum"
  input: "gradients/sequential/lstm_2/while/Add_7_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_7_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/clip_by_value_2/Minimum_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_2/while/Add_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_7_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/Add_7_grad/Sum_1"
  input: "gradients/sequential/lstm_2/while/Add_7_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/Add_7_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/Add_7_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_2/while/Add_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/Add_7_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/Add_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Add_7_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/Add_7_grad/Reshape_1"
  input: "^gradients/sequential/lstm_2/while/Add_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Add_7_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_6_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_2/while/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_6_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_2/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_6_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_6_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_6_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_6_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_6_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_6_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_6_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_6_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_6_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_6_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_6_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_6_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_6_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_6_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_6_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_6_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_6_grad/Mul"
  op: "Mul"
  input: "gradients/sequential/lstm_2/while/add_5_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_6_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_6_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_6_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_6_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/Mul/Enter"
  input: "sequential/lstm_2/while/Identity_3"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_6_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_6_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_6_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/Mul"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_6_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/Sum"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_6_grad/Mul_1"
  op: "Mul"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/Mul_1/StackPopV2"
  input: "gradients/sequential/lstm_2/while/add_5_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_6_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/clip_by_value_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_6_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/clip_by_value_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_6_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_6_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/Mul_1/Enter"
  input: "sequential/lstm_2/while/clip_by_value_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_6_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_6_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_6_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/Mul_1"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_6_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/Sum_1"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/mul_6_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/mul_6_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_2/while/mul_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/mul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_6_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/Reshape_1"
  input: "^gradients/sequential/lstm_2/while/mul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_6_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_7_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_2/while/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_7_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_2/while/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_7_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_7_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_7_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_7_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_7_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_7_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_7_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_7_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_7_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_7_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_7_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_7_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_7_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_7_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_7_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_7_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_7_grad/Mul"
  op: "Mul"
  input: "gradients/sequential/lstm_2/while/add_5_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_7_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_7_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_7_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_7_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/Mul/Enter"
  input: "sequential/lstm_2/while/Tanh"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_7_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_7_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_7_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/Mul"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_7_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/Sum"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_7_grad/Mul_1"
  op: "Mul"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/Mul_1/StackPopV2"
  input: "gradients/sequential/lstm_2/while/add_5_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_7_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/clip_by_value"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_7_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/clip_by_value"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_7_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_7_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/Mul_1/Enter"
  input: "sequential/lstm_2/while/clip_by_value"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_7_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_7_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_7_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/Mul_1"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_7_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/Sum_1"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/mul_7_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/mul_7_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_2/while/mul_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_7_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/Reshape_1"
  input: "^gradients/sequential/lstm_2/while/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_7_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_8_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_2/while/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_8_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_2/while/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_8_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_2/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_2/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_8_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Mul_8_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_8_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/Mul_8_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Mul_8_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_8_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/Mul_8_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_8_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/Mul_8_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_2/while/Mul_8_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/Mul_8_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_8_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Mul_8_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_8_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/Mul_8_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Mul_8_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_8_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/Mul_8_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_8_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/Mul_8_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_2/while/Mul_8_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/Mul_8_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_8_grad/Mul"
  op: "Mul"
  input: "gradients/sequential/lstm_2/while/Add_7_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_2/while/Mul_8_grad/Mul/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_8_grad/Mul/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_8_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/Mul_8_grad/Mul"
  input: "gradients/sequential/lstm_2/while/Mul_8_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_8_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/Mul_8_grad/Sum"
  input: "gradients/sequential/lstm_2/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_8_grad/Mul_1"
  op: "Mul"
  input: "gradients/sequential/lstm_2/while/Mul_8_grad/Mul_1/StackPopV2"
  input: "gradients/sequential/lstm_2/while/Add_7_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_8_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/add_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_8_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/Mul_8_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/add_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_8_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/Mul_8_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_8_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/Mul_8_grad/Mul_1/Enter"
  input: "sequential/lstm_2/while/add_6"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_8_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/Mul_8_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_8_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/Mul_8_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_8_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/Mul_8_grad/Mul_1"
  input: "gradients/sequential/lstm_2/while/Mul_8_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_8_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/Mul_8_grad/Sum_1"
  input: "gradients/sequential/lstm_2/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_8_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/Mul_8_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/Mul_8_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_8_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/Mul_8_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/Mul_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Mul_8_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_8_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/Mul_8_grad/Reshape_1"
  input: "^gradients/sequential/lstm_2/while/Mul_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Mul_8_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_2/while/clip_by_value_1/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/Shape_2"
  op: "Shape"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/zeros"
  op: "Fill"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/Shape_2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/GreaterEqual/StackPopV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/GreaterEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/GreaterEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/GreaterEqual/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/GreaterEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/GreaterEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/GreaterEqual/Enter"
  input: "sequential/lstm_2/while/clip_by_value_1/Minimum"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/GreaterEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/GreaterEqual/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/GreaterEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/GreaterEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/clip_by_value_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/clip_by_value_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/Select"
  op: "Select"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/Select"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/Sum"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/Select_1"
  op: "Select"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/zeros"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/Select_1"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/Sum_1"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_1_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_1_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/clip_by_value_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/Reshape_1"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/clip_by_value_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_2/while/clip_by_value/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_grad/Shape_2"
  op: "Shape"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_grad/zeros"
  op: "Fill"
  input: "gradients/sequential/lstm_2/while/clip_by_value_grad/Shape_2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/sequential/lstm_2/while/clip_by_value_grad/GreaterEqual/StackPopV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_grad/GreaterEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_grad/GreaterEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_grad/GreaterEqual/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_grad/GreaterEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_grad/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/clip_by_value_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_grad/GreaterEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_grad/GreaterEqual/Enter"
  input: "sequential/lstm_2/while/clip_by_value/Minimum"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_grad/GreaterEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_grad/GreaterEqual/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_grad/GreaterEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/clip_by_value_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_grad/GreaterEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_2/while/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/clip_by_value_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/clip_by_value_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_2/while/clip_by_value_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_grad/Select"
  op: "Select"
  input: "gradients/sequential/lstm_2/while/clip_by_value_grad/GreaterEqual"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_2/while/clip_by_value_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/clip_by_value_grad/Select"
  input: "gradients/sequential/lstm_2/while/clip_by_value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/clip_by_value_grad/Sum"
  input: "gradients/sequential/lstm_2/while/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_grad/Select_1"
  op: "Select"
  input: "gradients/sequential/lstm_2/while/clip_by_value_grad/GreaterEqual"
  input: "gradients/sequential/lstm_2/while/clip_by_value_grad/zeros"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/clip_by_value_grad/Select_1"
  input: "gradients/sequential/lstm_2/while/clip_by_value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/clip_by_value_grad/Sum_1"
  input: "gradients/sequential/lstm_2/while/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/clip_by_value_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/clip_by_value_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/clip_by_value_grad/Reshape_1"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/clip_by_value_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/Mul/StackPopV2"
  input: "gradients/sequential/lstm_2/while/mul_7_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_6_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_2/while/BiasAdd_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_6_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_2/while/MatMul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_2/while/add_6_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_2/while/add_6_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_6_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/add_6_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_6_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/add_6_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/add_6_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_6_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/add_6_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_6_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/add_6_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_2/while/add_6_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_6_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/add_6_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_6_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/add_6_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_6_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/add_6_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_6_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/add_6_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/add_6_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_6_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/add_6_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_6_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/add_6_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_2/while/add_6_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_6_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/add_6_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_6_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/add_6_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_6_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/Mul_8_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_2/while/add_6_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_6_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/add_6_grad/Sum"
  input: "gradients/sequential/lstm_2/while/add_6_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_6_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/Mul_8_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_2/while/add_6_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_6_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/add_6_grad/Sum_1"
  input: "gradients/sequential/lstm_2/while/add_6_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/add_6_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/add_6_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_2/while/add_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/add_6_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/add_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/add_6_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/add_6_grad/Reshape_1"
  input: "^gradients/sequential/lstm_2/while/add_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/add_6_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_2/while/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/Shape_2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/LessEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/LessEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/Add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/LessEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/Add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/LessEqual/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/LessEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/LessEqual/Enter"
  input: "sequential/lstm_2/while/Add_3"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/LessEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/Select"
  op: "Select"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/Select"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/Sum"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/zeros"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/Select_1"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/Sum_1"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/Reshape_1"
  input: "^gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/sequential/lstm_2/while/mul_6_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_2/while/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/sequential/lstm_2/while/clip_by_value_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/Shape_2"
  input: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/LessEqual/StackPopV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/LessEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/LessEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/Add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/LessEqual/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/LessEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/Add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/LessEqual/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/LessEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/LessEqual/Enter"
  input: "sequential/lstm_2/while/Add_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/LessEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/LessEqual/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/LessEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/LessEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/Select"
  op: "Select"
  input: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/sequential/lstm_2/while/clip_by_value_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/Select"
  input: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/Sum"
  input: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/zeros"
  input: "gradients/sequential/lstm_2/while/clip_by_value_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/Select_1"
  input: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/Sum_1"
  input: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/Reshape_1"
  input: "^gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_4_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_2/while/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_4_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_2/while/MatMul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_2/while/add_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_2/while/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_4_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/add_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_4_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/add_4_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/add_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_4_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/add_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_4_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/add_4_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_2/while/add_4_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_4_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/add_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/add_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_4_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/add_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_4_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/add_4_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/add_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_4_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/add_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_4_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/add_4_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_2/while/add_4_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/add_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/add_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_4_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/Tanh_grad/TanhGrad"
  input: "gradients/sequential/lstm_2/while/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/add_4_grad/Sum"
  input: "gradients/sequential/lstm_2/while/add_4_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/Tanh_grad/TanhGrad"
  input: "gradients/sequential/lstm_2/while/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/add_4_grad/Sum_1"
  input: "gradients/sequential/lstm_2/while/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/add_4_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/add_4_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_2/while/add_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/add_4_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/add_4_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/add_4_grad/Reshape_1"
  input: "^gradients/sequential/lstm_2/while/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/add_4_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/BiasAdd_3_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/sequential/lstm_2/while/add_6_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/BiasAdd_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/BiasAdd_3_grad/BiasAddGrad"
  input: "^gradients/sequential/lstm_2/while/add_6_grad/tuple/control_dependency"
}
node {
  name: "gradients/sequential/lstm_2/while/BiasAdd_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/add_6_grad/tuple/control_dependency"
  input: "^gradients/sequential/lstm_2/while/BiasAdd_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/add_6_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/BiasAdd_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/BiasAdd_3_grad/BiasAddGrad"
  input: "^gradients/sequential/lstm_2/while/BiasAdd_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/BiasAdd_3_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul"
  op: "MatMul"
  input: "gradients/sequential/lstm_2/while/add_6_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/strided_slice_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/strided_slice_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul/Enter"
  input: "sequential/lstm_2/while/strided_slice_3"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul_1/StackPopV2"
  input: "gradients/sequential/lstm_2/while/add_6_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul_1/Enter"
  input: "sequential/lstm_2/while/Identity_2"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul"
  input: "^gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul_1"
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul"
  input: "^gradients/sequential/lstm_2/while/MatMul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul_1"
  input: "^gradients/sequential/lstm_2/while/MatMul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_3_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_2/while/Mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_3_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_2/while/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_2/while/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_2/while/Add_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_3_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Add_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_3_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/Add_3_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Add_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_3_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/Add_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_3_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/Add_3_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_2/while/Add_3_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/Add_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/Add_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_3_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Add_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_3_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/Add_3_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Add_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_3_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/Add_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_3_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/Add_3_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_2/while/Add_3_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_3_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/Add_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/Add_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_3_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_2/while/Add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/Add_3_grad/Sum"
  input: "gradients/sequential/lstm_2/while/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/clip_by_value_1/Minimum_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_2/while/Add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/Add_3_grad/Sum_1"
  input: "gradients/sequential/lstm_2/while/Add_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/Add_3_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/Add_3_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_2/while/Add_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/Add_3_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/Add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Add_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/Add_3_grad/Reshape_1"
  input: "^gradients/sequential/lstm_2/while/Add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Add_3_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_1_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_2/while/Mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_1_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_2/while/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_2/while/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_2/while/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/Add_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/Add_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_2/while/Add_1_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/Add_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/Add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/Add_1_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_2/while/Add_1_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/Add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/Add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_1_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_2/while/Add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/Add_1_grad/Sum"
  input: "gradients/sequential/lstm_2/while/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/clip_by_value/Minimum_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_2/while/Add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/Add_1_grad/Sum_1"
  input: "gradients/sequential/lstm_2/while/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/Add_1_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/Add_1_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_2/while/Add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/Add_1_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/Add_1_grad/Reshape_1"
  input: "^gradients/sequential/lstm_2/while/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/BiasAdd_2_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/sequential/lstm_2/while/add_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/BiasAdd_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/BiasAdd_2_grad/BiasAddGrad"
  input: "^gradients/sequential/lstm_2/while/add_4_grad/tuple/control_dependency"
}
node {
  name: "gradients/sequential/lstm_2/while/BiasAdd_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/add_4_grad/tuple/control_dependency"
  input: "^gradients/sequential/lstm_2/while/BiasAdd_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/add_4_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/BiasAdd_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/BiasAdd_2_grad/BiasAddGrad"
  input: "^gradients/sequential/lstm_2/while/BiasAdd_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/BiasAdd_2_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_6_grad/MatMul"
  op: "MatMul"
  input: "gradients/sequential/lstm_2/while/add_4_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_2/while/MatMul_6_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_6_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/strided_slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_6_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/MatMul_6_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/strided_slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_6_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/MatMul_6_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_6_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/MatMul_6_grad/MatMul/Enter"
  input: "sequential/lstm_2/while/strided_slice_2"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_6_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/MatMul_6_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_6_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/MatMul_6_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_6_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul_1/StackPopV2"
  input: "gradients/sequential/lstm_2/while/add_4_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/MatMul_6_grad/MatMul"
  input: "^gradients/sequential/lstm_2/while/MatMul_6_grad/MatMul_1"
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/MatMul_6_grad/MatMul"
  input: "^gradients/sequential/lstm_2/while/MatMul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/MatMul_6_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/MatMul_6_grad/MatMul_1"
  input: "^gradients/sequential/lstm_2/while/MatMul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/MatMul_6_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_3_grad/MatMul"
  op: "MatMul"
  input: "gradients/sequential/lstm_2/while/BiasAdd_3_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_2/while/MatMul_3_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_3_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_3_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/MatMul_3_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_3_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/MatMul_3_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_3_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/MatMul_3_grad/MatMul/Enter"
  input: "sequential/lstm_2/while/split:3"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_3_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/MatMul_3_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_3_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/MatMul_3_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_3_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/sequential/lstm_2/while/MatMul_3_grad/MatMul_1/StackPopV2"
  input: "gradients/sequential/lstm_2/while/BiasAdd_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_3_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/mul_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_3_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/MatMul_3_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/mul_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_3_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/MatMul_3_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_3_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/MatMul_3_grad/MatMul_1/Enter"
  input: "sequential/lstm_2/while/mul_3"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_3_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/MatMul_3_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_3_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/MatMul_3_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/MatMul_3_grad/MatMul"
  input: "^gradients/sequential/lstm_2/while/MatMul_3_grad/MatMul_1"
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/MatMul_3_grad/MatMul"
  input: "^gradients/sequential/lstm_2/while/MatMul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/MatMul_3_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/MatMul_3_grad/MatMul_1"
  input: "^gradients/sequential/lstm_2/while/MatMul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/MatMul_3_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/strided_slice_3_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/strided_slice_3_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/sequential/lstm_2/while/strided_slice_3_grad/Shape"
  input: "gradients/sequential/lstm_2/while/strided_slice_3_grad/StridedSliceGrad/Const"
  input: "gradients/sequential/lstm_2/while/strided_slice_3_grad/StridedSliceGrad/Const_1"
  input: "gradients/sequential/lstm_2/while/strided_slice_3_grad/StridedSliceGrad/Const_2"
  input: "gradients/sequential/lstm_2/while/MatMul_7_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/strided_slice_3_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\211\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/strided_slice_3_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/strided_slice_3_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_5_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_2/while/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_5_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_2/while/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_2/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_2/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_5_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Mul_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_5_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/Mul_5_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Mul_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_5_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/Mul_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_5_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/Mul_5_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_2/while/Mul_5_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/Mul_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_5_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Mul_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_5_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/Mul_5_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Mul_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_5_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/Mul_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_5_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/Mul_5_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_2/while/Mul_5_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/Mul_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_5_grad/Mul"
  op: "Mul"
  input: "gradients/sequential/lstm_2/while/Add_3_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_2/while/Mul_5_grad/Mul/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_5_grad/Mul/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_5_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/Mul_5_grad/Mul"
  input: "gradients/sequential/lstm_2/while/Mul_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/Mul_5_grad/Sum"
  input: "gradients/sequential/lstm_2/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_5_grad/Mul_1"
  op: "Mul"
  input: "gradients/sequential/lstm_2/while/Mul_5_grad/Mul_1/StackPopV2"
  input: "gradients/sequential/lstm_2/while/Add_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_5_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_5_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/Mul_5_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_5_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/Mul_5_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_5_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/Mul_5_grad/Mul_1/Enter"
  input: "sequential/lstm_2/while/add_2"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_5_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/Mul_5_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_5_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/Mul_5_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/Mul_5_grad/Mul_1"
  input: "gradients/sequential/lstm_2/while/Mul_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/Mul_5_grad/Sum_1"
  input: "gradients/sequential/lstm_2/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/Mul_5_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/Mul_5_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/Mul_5_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/Mul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Mul_5_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/Mul_5_grad/Reshape_1"
  input: "^gradients/sequential/lstm_2/while/Mul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Mul_5_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_4_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_2/while/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_4_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_2/while/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_2/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_2/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_4_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Mul_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_4_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/Mul_4_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Mul_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_4_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/Mul_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_4_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/Mul_4_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_2/while/Mul_4_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/Mul_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_4_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Mul_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_4_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/Mul_4_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Mul_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_4_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/Mul_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_4_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/Mul_4_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_2/while/Mul_4_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/Mul_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_4_grad/Mul"
  op: "Mul"
  input: "gradients/sequential/lstm_2/while/Add_1_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_2/while/Mul_4_grad/Mul/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_4_grad/Mul/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_4_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/Mul_4_grad/Mul"
  input: "gradients/sequential/lstm_2/while/Mul_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/Mul_4_grad/Sum"
  input: "gradients/sequential/lstm_2/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_4_grad/Mul_1"
  op: "Mul"
  input: "gradients/sequential/lstm_2/while/Mul_4_grad/Mul_1/StackPopV2"
  input: "gradients/sequential/lstm_2/while/Add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_4_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_4_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/Mul_4_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_4_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/Mul_4_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_4_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/Mul_4_grad/Mul_1/Enter"
  input: "sequential/lstm_2/while/add"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_4_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/Mul_4_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_4_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/Mul_4_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/Mul_4_grad/Mul_1"
  input: "gradients/sequential/lstm_2/while/Mul_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/Mul_4_grad/Sum_1"
  input: "gradients/sequential/lstm_2/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/Mul_4_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/Mul_4_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/Mul_4_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/Mul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Mul_4_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Mul_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/Mul_4_grad/Reshape_1"
  input: "^gradients/sequential/lstm_2/while/Mul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/Mul_4_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_2_grad/MatMul"
  op: "MatMul"
  input: "gradients/sequential/lstm_2/while/BiasAdd_2_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_2/while/MatMul_2_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_2_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_2_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/MatMul_2_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_2_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/MatMul_2_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_2_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/MatMul_2_grad/MatMul/Enter"
  input: "sequential/lstm_2/while/split:2"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_2_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/MatMul_2_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_2_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/MatMul_2_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_2_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/sequential/lstm_2/while/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "gradients/sequential/lstm_2/while/BiasAdd_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_2_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_2_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/MatMul_2_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_2_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/MatMul_2_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_2_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/MatMul_2_grad/MatMul_1/Enter"
  input: "sequential/lstm_2/while/mul_2"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_2_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/MatMul_2_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_2_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/MatMul_2_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/MatMul_2_grad/MatMul"
  input: "^gradients/sequential/lstm_2/while/MatMul_2_grad/MatMul_1"
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/MatMul_2_grad/MatMul"
  input: "^gradients/sequential/lstm_2/while/MatMul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/MatMul_2_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/MatMul_2_grad/MatMul_1"
  input: "^gradients/sequential/lstm_2/while/MatMul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/MatMul_2_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/strided_slice_2_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/strided_slice_2_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/sequential/lstm_2/while/strided_slice_2_grad/Shape"
  input: "gradients/sequential/lstm_2/while/strided_slice_2_grad/StridedSliceGrad/Const"
  input: "gradients/sequential/lstm_2/while/strided_slice_2_grad/StridedSliceGrad/Const_1"
  input: "gradients/sequential/lstm_2/while/strided_slice_2_grad/StridedSliceGrad/Const_2"
  input: "gradients/sequential/lstm_2/while/MatMul_6_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/strided_slice_2_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\006\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/strided_slice_2_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\211\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/strided_slice_2_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_3_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_2/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_3_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_2/while/mul_3/Enter"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_2/while/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_2/while/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_3_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_3_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/mul_3_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_3_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_3_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/mul_3_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_2/while/mul_3_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/mul_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_3_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/mul_3_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_3_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_3_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/mul_3_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_2/while/mul_3_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/mul_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_3_grad/Mul"
  op: "Mul"
  input: "gradients/sequential/lstm_2/while/MatMul_3_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_2/while/mul_3_grad/Mul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_3_grad/Mul/Enter"
  op: "Enter"
  input: "sequential/lstm_2/cond_3/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_3_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/mul_3_grad/Mul"
  input: "gradients/sequential/lstm_2/while/mul_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/mul_3_grad/Sum"
  input: "gradients/sequential/lstm_2/while/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_3_grad/Mul_1"
  op: "Mul"
  input: "gradients/sequential/lstm_2/while/mul_3_grad/Mul_1/StackPopV2"
  input: "gradients/sequential/lstm_2/while/MatMul_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_3_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_3_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/mul_3_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_3_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_3_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_3_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/mul_3_grad/Mul_1/Enter"
  input: "sequential/lstm_2/while/TensorArrayReadV3"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_3_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/mul_3_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_3_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_3_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/mul_3_grad/Mul_1"
  input: "gradients/sequential/lstm_2/while/mul_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/mul_3_grad/Sum_1"
  input: "gradients/sequential/lstm_2/while/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/mul_3_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/mul_3_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_2/while/mul_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/mul_3_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/mul_3_grad/Reshape_1"
  input: "^gradients/sequential/lstm_2/while/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_3_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_2_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_2/while/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_2_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_2/while/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_2/while/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_2/while/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/add_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/add_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_2/while/add_2_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/add_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/add_2_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_2/while/add_2_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/Mul_5_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_2/while/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/add_2_grad/Sum"
  input: "gradients/sequential/lstm_2/while/add_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/Mul_5_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_2/while/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/add_2_grad/Sum_1"
  input: "gradients/sequential/lstm_2/while/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/add_2_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/add_2_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_2/while/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/add_2_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/add_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/add_2_grad/Reshape_1"
  input: "^gradients/sequential/lstm_2/while/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/add_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_2/while/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_2/while/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_2/while/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_2/while/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/add_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_2/while/add_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/add_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/add_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_2/while/add_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/Mul_4_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_2/while/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/add_grad/Sum"
  input: "gradients/sequential/lstm_2/while/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/Mul_4_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_2/while/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/add_grad/Sum_1"
  input: "gradients/sequential/lstm_2/while/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/add_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/add_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_2/while/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/add_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/add_grad/Reshape_1"
  input: "^gradients/sequential/lstm_2/while/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_2_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_2/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_2_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_2/while/mul_2/Enter"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_2/while/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_2/while/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_2/while/mul_2_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_2/while/mul_2_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/sequential/lstm_2/while/MatMul_2_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_2/while/mul_2_grad/Mul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "sequential/lstm_2/cond_2/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/mul_2_grad/Mul"
  input: "gradients/sequential/lstm_2/while/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/mul_2_grad/Sum"
  input: "gradients/sequential/lstm_2/while/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/sequential/lstm_2/while/mul_3_grad/Mul_1/StackPopV2"
  input: "gradients/sequential/lstm_2/while/MatMul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/mul_2_grad/Mul_1"
  input: "gradients/sequential/lstm_2/while/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/mul_2_grad/Sum_1"
  input: "gradients/sequential/lstm_2/while/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/mul_2_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/mul_2_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_2/while/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/mul_2_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/mul_2_grad/Reshape_1"
  input: "^gradients/sequential/lstm_2/while/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/sequential/lstm_2/while/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/BiasAdd_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/BiasAdd_1_grad/BiasAddGrad"
  input: "^gradients/sequential/lstm_2/while/add_2_grad/tuple/control_dependency"
}
node {
  name: "gradients/sequential/lstm_2/while/BiasAdd_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/add_2_grad/tuple/control_dependency"
  input: "^gradients/sequential/lstm_2/while/BiasAdd_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/add_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/BiasAdd_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/BiasAdd_1_grad/BiasAddGrad"
  input: "^gradients/sequential/lstm_2/while/BiasAdd_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/BiasAdd_1_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_5_grad/MatMul"
  op: "MatMul"
  input: "gradients/sequential/lstm_2/while/add_2_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_2/while/MatMul_5_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_5_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/strided_slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_5_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/MatMul_5_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/strided_slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_5_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/MatMul_5_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_5_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/MatMul_5_grad/MatMul/Enter"
  input: "sequential/lstm_2/while/strided_slice_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_5_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/MatMul_5_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_5_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/MatMul_5_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_5_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul_1/StackPopV2"
  input: "gradients/sequential/lstm_2/while/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/MatMul_5_grad/MatMul"
  input: "^gradients/sequential/lstm_2/while/MatMul_5_grad/MatMul_1"
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/MatMul_5_grad/MatMul"
  input: "^gradients/sequential/lstm_2/while/MatMul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/MatMul_5_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/MatMul_5_grad/MatMul_1"
  input: "^gradients/sequential/lstm_2/while/MatMul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/MatMul_5_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/sequential/lstm_2/while/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/sequential/lstm_2/while/add_grad/tuple/control_dependency"
}
node {
  name: "gradients/sequential/lstm_2/while/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/add_grad/tuple/control_dependency"
  input: "^gradients/sequential/lstm_2/while/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/sequential/lstm_2/while/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_4_grad/MatMul"
  op: "MatMul"
  input: "gradients/sequential/lstm_2/while/add_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_2/while/MatMul_4_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_4_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_4_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/MatMul_4_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_4_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/MatMul_4_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_4_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/MatMul_4_grad/MatMul/Enter"
  input: "sequential/lstm_2/while/strided_slice"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_4_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/MatMul_4_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_4_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/MatMul_4_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_4_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul_1/StackPopV2"
  input: "gradients/sequential/lstm_2/while/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/MatMul_4_grad/MatMul"
  input: "^gradients/sequential/lstm_2/while/MatMul_4_grad/MatMul_1"
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/MatMul_4_grad/MatMul"
  input: "^gradients/sequential/lstm_2/while/MatMul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/MatMul_4_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/MatMul_4_grad/MatMul_1"
  input: "^gradients/sequential/lstm_2/while/MatMul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/MatMul_4_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/sequential/lstm_2/while/BiasAdd_1_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_2/while/MatMul_1_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_1_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_1_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/MatMul_1_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/MatMul_1_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_1_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/MatMul_1_grad/MatMul/Enter"
  input: "sequential/lstm_2/while/split:1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_1_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/MatMul_1_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_1_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/MatMul_1_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/sequential/lstm_2/while/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "gradients/sequential/lstm_2/while/BiasAdd_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_1_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_1_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/MatMul_1_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_1_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_1_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/MatMul_1_grad/MatMul_1/Enter"
  input: "sequential/lstm_2/while/mul_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_1_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/MatMul_1_grad/MatMul"
  input: "^gradients/sequential/lstm_2/while/MatMul_1_grad/MatMul_1"
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/MatMul_1_grad/MatMul"
  input: "^gradients/sequential/lstm_2/while/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/MatMul_1_grad/MatMul_1"
  input: "^gradients/sequential/lstm_2/while/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/MatMul_1_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/strided_slice_1_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/sequential/lstm_2/while/strided_slice_1_grad/Shape"
  input: "gradients/sequential/lstm_2/while/strided_slice_1_grad/StridedSliceGrad/Const"
  input: "gradients/sequential/lstm_2/while/strided_slice_1_grad/StridedSliceGrad/Const_1"
  input: "gradients/sequential/lstm_2/while/strided_slice_1_grad/StridedSliceGrad/Const_2"
  input: "gradients/sequential/lstm_2/while/MatMul_5_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/strided_slice_1_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\203\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/strided_slice_1_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\006\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/strided_slice_1_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/sequential/lstm_2/while/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_2/while/MatMul_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/MatMul_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/MatMul_grad/MatMul/Enter"
  input: "sequential/lstm_2/while/split"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/MatMul_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/sequential/lstm_2/while/MatMul_grad/MatMul_1/StackPopV2"
  input: "gradients/sequential/lstm_2/while/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/MatMul_grad/MatMul_1/Enter"
  input: "sequential/lstm_2/while/mul"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/MatMul_grad/MatMul"
  input: "^gradients/sequential/lstm_2/while/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/MatMul_grad/MatMul"
  input: "^gradients/sequential/lstm_2/while/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/MatMul_grad/MatMul_1"
  input: "^gradients/sequential/lstm_2/while/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/split_1_grad/concat"
  op: "ConcatV2"
  input: "gradients/sequential/lstm_2/while/BiasAdd_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_2/while/BiasAdd_1_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_2/while/BiasAdd_2_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_2/while/BiasAdd_3_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_2/while/split_1_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/split_1_grad/concat/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AddN_8"
  op: "AddN"
  input: "gradients/sequential/lstm_2/while/MatMul_7_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_2/while/MatMul_6_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_2/while/MatMul_5_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_2/while/MatMul_4_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/MatMul_7_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/strided_slice_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/sequential/lstm_2/while/strided_slice_grad/Shape"
  input: "gradients/sequential/lstm_2/while/strided_slice_grad/StridedSliceGrad/Const"
  input: "gradients/sequential/lstm_2/while/strided_slice_grad/StridedSliceGrad/Const_1"
  input: "gradients/sequential/lstm_2/while/strided_slice_grad/StridedSliceGrad/Const_2"
  input: "gradients/sequential/lstm_2/while/MatMul_4_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/strided_slice_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/strided_slice_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\203\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/strided_slice_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_1_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_2/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_1_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_2/while/mul_1/Enter"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_2/while/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_2/while/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_2/while/mul_1_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/mul_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_2/while/mul_1_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/sequential/lstm_2/while/MatMul_1_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_2/while/mul_1_grad/Mul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "sequential/lstm_2/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/mul_1_grad/Mul"
  input: "gradients/sequential/lstm_2/while/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/mul_1_grad/Sum"
  input: "gradients/sequential/lstm_2/while/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/sequential/lstm_2/while/mul_3_grad/Mul_1/StackPopV2"
  input: "gradients/sequential/lstm_2/while/MatMul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/mul_1_grad/Mul_1"
  input: "gradients/sequential/lstm_2/while/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/mul_1_grad/Sum_1"
  input: "gradients/sequential/lstm_2/while/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/mul_1_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_2/while/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/mul_1_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/mul_1_grad/Reshape_1"
  input: "^gradients/sequential/lstm_2/while/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_2/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_2/while/mul/Enter"
  input: "^sequential/lstm_2/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_2/while/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_2/while/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/mul_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_2/while/mul_grad/Shape"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_2/while/mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_2/while/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_2/while/mul_grad/Shape_1"
  input: "^gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_2/while/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_grad/Mul"
  op: "Mul"
  input: "gradients/sequential/lstm_2/while/MatMul_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_2/while/mul_grad/Mul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_grad/Mul/Enter"
  op: "Enter"
  input: "sequential/lstm_2/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/mul_grad/Mul"
  input: "gradients/sequential/lstm_2/while/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/mul_grad/Sum"
  input: "gradients/sequential/lstm_2/while/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/sequential/lstm_2/while/mul_3_grad/Mul_1/StackPopV2"
  input: "gradients/sequential/lstm_2/while/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_2/while/mul_grad/Mul_1"
  input: "gradients/sequential/lstm_2/while/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_2/while/mul_grad/Sum_1"
  input: "gradients/sequential/lstm_2/while/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/while/mul_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/mul_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_2/while/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/mul_grad/Reshape"
  input: "^gradients/sequential/lstm_2/while/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/mul_grad/Reshape_1"
  input: "^gradients/sequential/lstm_2/while/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/sequential/lstm_2/while/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_2/while/MatMul_1_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_2/while/MatMul_2_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_2/while/MatMul_3_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_2/while/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/split_grad/concat/Const"
  op: "Const"
  input: "^gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_9"
  op: "AddN"
  input: "gradients/sequential/lstm_2/while/mul_3_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_2/while/mul_2_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_2/while/mul_1_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_2/while/mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/mul_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/sequential/lstm_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients/sequential/lstm_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "sequential/lstm_2/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "sequential/lstm_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients/sequential/lstm_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "gradients/sequential/lstm_2/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/sequential/lstm_2/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "gradients/AddN_9"
  input: "gradients/sequential/lstm_2/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/split_1/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 524
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/split_1/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/split_1/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/split_1/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/sequential/lstm_2/while/split_1/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/sequential/lstm_2/while/split_1/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/split_1/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/sequential/lstm_2/while/split_1/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/split_1/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/sequential/lstm_2/while/split_1/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/sequential/lstm_2/while/split_1_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/split_1/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/sequential/lstm_2/while/split_1/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/split_1/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/sequential/lstm_2/while/split_1/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_10"
  op: "AddN"
  input: "gradients/sequential/lstm_2/while/strided_slice_3_grad/StridedSliceGrad"
  input: "gradients/sequential/lstm_2/while/strided_slice_2_grad/StridedSliceGrad"
  input: "gradients/sequential/lstm_2/while/strided_slice_1_grad/StridedSliceGrad"
  input: "gradients/sequential/lstm_2/while/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/strided_slice_3_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/sequential/lstm_2/while/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/sequential/lstm_2/while/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/sequential/lstm_2/while/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/sequential/lstm_2/while/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/AddN_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/sequential/lstm_2/while/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/sequential/lstm_2/while/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "gradients/sequential/lstm_2/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "gradients/sequential/lstm_2/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "gradients/sequential/lstm_2/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "gradients/sequential/lstm_2/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "gradients/sequential/lstm_2/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/sequential/lstm_2/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "gradients/sequential/lstm_2/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/split/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/split/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/sequential/lstm_2/while/split/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_2/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/split/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/sequential/lstm_2/while/split/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/sequential/lstm_2/while/split/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/split/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/sequential/lstm_2/while/split/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/split/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/sequential/lstm_2/while/split/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/sequential/lstm_2/while/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/split/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/sequential/lstm_2/while/split/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/while/split/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/sequential/lstm_2/while/split/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "sequential/lstm_2/TensorArray"
  input: "gradients/sequential/lstm_2/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^gradients/sequential/lstm_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "gradients/sequential/lstm_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "sequential/lstm_2/TensorArrayUnstack/range"
  input: "gradients/sequential/lstm_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^gradients/sequential/lstm_2/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
}
node {
  name: "gradients/sequential/lstm_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^gradients/sequential/lstm_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_2/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^gradients/sequential/lstm_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_2/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "sequential/lstm_2/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_2/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/sequential/lstm_2/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_2/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "sequential/lstm_1/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/sequential/lstm_2/transpose_grad/transpose"
  input: "gradients/sequential/lstm_1/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "sequential/lstm_1/TensorArray_1"
  input: "sequential/lstm_1/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "sequential/lstm_1/while/Exit_1"
  input: "^gradients/sequential/lstm_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "gradients/sequential/lstm_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "sequential/lstm_1/TensorArrayStack/range"
  input: "gradients/sequential/lstm_1/transpose_1_grad/transpose"
  input: "gradients/sequential/lstm_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_4"
  op: "ZerosLike"
  input: "sequential/lstm_1/while/Exit_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_5"
  op: "ZerosLike"
  input: "sequential/lstm_1/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Exit_1_grad/b_exit"
  op: "Enter"
  input: "gradients/sequential/lstm_1/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "gradients/zeros_like_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "gradients/zeros_like_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Switch_1_grad/b_switch"
  op: "Merge"
  input: "gradients/sequential/lstm_1/while/Exit_1_grad/b_exit"
  input: "gradients/sequential/lstm_1/while/Switch_1_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "gradients/sequential/lstm_1/while/Exit_2_grad/b_exit"
  input: "gradients/sequential/lstm_1/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "gradients/sequential/lstm_1/while/Exit_3_grad/b_exit"
  input: "gradients/sequential/lstm_1/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Merge_1_grad/Switch"
  op: "Switch"
  input: "gradients/sequential/lstm_1/while/Switch_1_grad/b_switch"
  input: "gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/Merge_1_grad/Switch"
}
node {
  name: "gradients/sequential/lstm_1/while/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/Merge_1_grad/Switch"
  input: "^gradients/sequential/lstm_1/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/Merge_1_grad/Switch:1"
  input: "^gradients/sequential/lstm_1/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "gradients/sequential/lstm_1/while/Switch_2_grad/b_switch"
  input: "gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/Merge_2_grad/Switch"
}
node {
  name: "gradients/sequential/lstm_1/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/Merge_2_grad/Switch"
  input: "^gradients/sequential/lstm_1/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/Merge_2_grad/Switch:1"
  input: "^gradients/sequential/lstm_1/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "gradients/sequential/lstm_1/while/Switch_3_grad/b_switch"
  input: "gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/Merge_3_grad/Switch"
}
node {
  name: "gradients/sequential/lstm_1/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/Merge_3_grad/Switch"
  input: "^gradients/sequential/lstm_1/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/Merge_3_grad/Switch:1"
  input: "^gradients/sequential/lstm_1/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Enter_1_grad/Exit"
  op: "Exit"
  input: "gradients/sequential/lstm_1/while/Merge_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "gradients/sequential/lstm_1/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "gradients/sequential/lstm_1/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients/sequential/lstm_1/while/Merge_1_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/mul_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "sequential/lstm_1/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/mul_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^gradients/sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/mul_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gradients/sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "gradients/sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "sequential/lstm_1/while/Identity"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^gradients/sequential/lstm_1/while/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_1/while/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/Add_3_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_1/while/Add_7_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/Add_7_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_1/while/MatMul_1_grad/MatMul/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/MatMul_2_grad/MatMul/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/MatMul_3_grad/MatMul/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/MatMul_3_grad/MatMul_1/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/MatMul_4_grad/MatMul/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/MatMul_5_grad/MatMul/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/MatMul_6_grad/MatMul/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul_1/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/MatMul_grad/MatMul/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/MatMul_grad/MatMul_1/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_1/while/Mul_4_grad/Mul_1/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_1/while/Mul_5_grad/Mul_1/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_1/while/Mul_8_grad/Mul_1/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_1/while/add_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_1/while/add_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_1/while/add_6_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/add_6_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_1/while/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/add_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/LessEqual/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_1_grad/GreaterEqual/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/LessEqual/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_2_grad/GreaterEqual/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_grad/GreaterEqual/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_1/while/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_1/while/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_1/while/mul_3_grad/Mul_1/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/mul_6_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/mul_6_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_1/while/mul_6_grad/Mul/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/mul_6_grad/Mul_1/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/mul_7_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/mul_7_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_1/while/mul_7_grad/Mul/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/mul_7_grad/Mul_1/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/mul_9_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/mul_9_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm_1/while/mul_9_grad/Mul/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/mul_9_grad/Mul_1/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm_1/while/mul_grad/BroadcastGradientArgs/StackPopV2_1"
}
node {
  name: "gradients/sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^gradients/sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "gradients/sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^gradients/sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^gradients/sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_11"
  op: "AddN"
  input: "gradients/sequential/lstm_1/while/Merge_2_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_9_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_1/while/clip_by_value_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_9_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_1/while/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_9_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_9_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_9_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_9_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_9_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_9_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_9_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_9_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_9_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_9_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_9_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_9_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_9_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_9_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_9_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/Shape_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_9_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_9_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_9_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_11"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_9_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_9_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_9_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_9_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/Mul/Enter"
  input: "sequential/lstm_1/while/Tanh_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_9_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_9_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_9_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/Mul"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_9_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/Sum"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_9_grad/Mul_1"
  op: "Mul"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/Mul_1/StackPopV2"
  input: "gradients/AddN_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_9_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/clip_by_value_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_9_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/clip_by_value_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_9_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_9_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/Mul_1/Enter"
  input: "sequential/lstm_1/while/clip_by_value_2"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_9_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_9_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_9_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/Mul_1"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_9_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/Sum_1"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_9_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/mul_9_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/mul_9_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_1/while/mul_9_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/mul_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_9_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_9_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/Reshape_1"
  input: "^gradients/sequential/lstm_1/while/mul_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_9_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_1/while/clip_by_value_2/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/Shape_2"
  op: "Shape"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/zeros"
  op: "Fill"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/Shape_2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/GreaterEqual/StackPopV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/GreaterEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/GreaterEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/clip_by_value_2/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/GreaterEqual/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/GreaterEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/clip_by_value_2/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/GreaterEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/GreaterEqual/Enter"
  input: "sequential/lstm_1/while/clip_by_value_2/Minimum"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/GreaterEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/GreaterEqual/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/GreaterEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/GreaterEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/clip_by_value_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/clip_by_value_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/Select"
  op: "Select"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/GreaterEqual"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/Select"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/Sum"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/Select_1"
  op: "Select"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/GreaterEqual"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/zeros"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/Select_1"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/Sum_1"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_2_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_2_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/clip_by_value_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/Reshape_1"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/clip_by_value_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/Mul/StackPopV2"
  input: "gradients/sequential/lstm_1/while/mul_9_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Switch_1_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_1/while/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/Shape_2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/LessEqual/StackPopV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/LessEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/LessEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/Add_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/LessEqual/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/LessEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/Add_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/LessEqual/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/LessEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/LessEqual/Enter"
  input: "sequential/lstm_1/while/Add_7"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/LessEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/LessEqual/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/LessEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/LessEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/Select"
  op: "Select"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/LessEqual"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/Select"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/Sum"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/LessEqual"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/zeros"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/Select_1"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/Sum_1"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/Reshape_1"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_12"
  op: "AddN"
  input: "gradients/sequential/lstm_1/while/Merge_3_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_1/while/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_5_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_1/while/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_5_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_1/while/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_1/while/add_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_1/while/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_5_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/add_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_5_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/add_5_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/add_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_5_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/add_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_5_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/add_5_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_1/while/add_5_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_5_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/add_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/add_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_5_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/add_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_5_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/add_5_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/add_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_5_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/add_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_5_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/add_5_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_1/while/add_5_grad/Shape_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/add_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/add_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_5_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_12"
  input: "gradients/sequential/lstm_1/while/add_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/add_5_grad/Sum"
  input: "gradients/sequential/lstm_1/while/add_5_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_12"
  input: "gradients/sequential/lstm_1/while/add_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/add_5_grad/Sum_1"
  input: "gradients/sequential/lstm_1/while/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/add_5_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/add_5_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_1/while/add_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/add_5_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/add_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/add_5_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/add_5_grad/Reshape_1"
  input: "^gradients/sequential/lstm_1/while/add_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/add_5_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_7_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_1/while/Mul_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_7_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_1/while/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_1/while/Add_7_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_1/while/Add_7_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_7_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Add_7_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_7_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/Add_7_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Add_7_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_7_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/Add_7_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_7_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/Add_7_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_1/while/Add_7_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_7_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/Add_7_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_7_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/Add_7_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_7_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Add_7_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_7_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/Add_7_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Add_7_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_7_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/Add_7_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_7_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/Add_7_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_1/while/Add_7_grad/Shape_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_7_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/Add_7_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_7_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/Add_7_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_7_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_1/while/Add_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_7_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/Add_7_grad/Sum"
  input: "gradients/sequential/lstm_1/while/Add_7_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_7_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/clip_by_value_2/Minimum_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_1/while/Add_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_7_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/Add_7_grad/Sum_1"
  input: "gradients/sequential/lstm_1/while/Add_7_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/Add_7_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/Add_7_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_1/while/Add_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/Add_7_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/Add_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Add_7_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/Add_7_grad/Reshape_1"
  input: "^gradients/sequential/lstm_1/while/Add_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Add_7_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_6_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_1/while/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_6_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_1/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_6_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_6_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_6_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_6_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_6_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_6_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_6_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_6_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_6_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_6_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_6_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_6_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_6_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_6_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/Shape_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_6_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_6_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_6_grad/Mul"
  op: "Mul"
  input: "gradients/sequential/lstm_1/while/add_5_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_6_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_6_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_6_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_6_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/Mul/Enter"
  input: "sequential/lstm_1/while/Identity_3"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_6_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_6_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_6_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/Mul"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_6_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/Sum"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_6_grad/Mul_1"
  op: "Mul"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/Mul_1/StackPopV2"
  input: "gradients/sequential/lstm_1/while/add_5_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_6_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/clip_by_value_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_6_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/clip_by_value_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_6_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_6_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/Mul_1/Enter"
  input: "sequential/lstm_1/while/clip_by_value_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_6_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_6_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_6_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/Mul_1"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_6_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/Sum_1"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/mul_6_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/mul_6_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_1/while/mul_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/mul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_6_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/Reshape_1"
  input: "^gradients/sequential/lstm_1/while/mul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_6_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_7_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_1/while/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_7_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_1/while/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_7_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_7_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_7_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_7_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_7_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_7_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_7_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_7_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_7_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_7_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_7_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_7_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_7_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_7_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/Shape_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_7_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_7_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_7_grad/Mul"
  op: "Mul"
  input: "gradients/sequential/lstm_1/while/add_5_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_7_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_7_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_7_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_7_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/Mul/Enter"
  input: "sequential/lstm_1/while/Tanh"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_7_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_7_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_7_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/Mul"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_7_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/Sum"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_7_grad/Mul_1"
  op: "Mul"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/Mul_1/StackPopV2"
  input: "gradients/sequential/lstm_1/while/add_5_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_7_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/clip_by_value"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_7_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/clip_by_value"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_7_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_7_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/Mul_1/Enter"
  input: "sequential/lstm_1/while/clip_by_value"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_7_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_7_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_7_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/Mul_1"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_7_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/Sum_1"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/mul_7_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/mul_7_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_1/while/mul_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_7_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/Reshape_1"
  input: "^gradients/sequential/lstm_1/while/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_7_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_8_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_1/while/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_8_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_1/while/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_8_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_1/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_1/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_8_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Mul_8_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_8_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/Mul_8_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Mul_8_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_8_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/Mul_8_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_8_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/Mul_8_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_1/while/Mul_8_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/Mul_8_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_8_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Mul_8_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_8_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/Mul_8_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Mul_8_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_8_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/Mul_8_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_8_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/Mul_8_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_1/while/Mul_8_grad/Shape_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/Mul_8_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_8_grad/Mul"
  op: "Mul"
  input: "gradients/sequential/lstm_1/while/Add_7_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_1/while/Mul_8_grad/Mul/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_8_grad/Mul/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_8_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/Mul_8_grad/Mul"
  input: "gradients/sequential/lstm_1/while/Mul_8_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_8_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/Mul_8_grad/Sum"
  input: "gradients/sequential/lstm_1/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_8_grad/Mul_1"
  op: "Mul"
  input: "gradients/sequential/lstm_1/while/Mul_8_grad/Mul_1/StackPopV2"
  input: "gradients/sequential/lstm_1/while/Add_7_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_8_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/add_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_8_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/Mul_8_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/add_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_8_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/Mul_8_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_8_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/Mul_8_grad/Mul_1/Enter"
  input: "sequential/lstm_1/while/add_6"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_8_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/Mul_8_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_8_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/Mul_8_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_8_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/Mul_8_grad/Mul_1"
  input: "gradients/sequential/lstm_1/while/Mul_8_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_8_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/Mul_8_grad/Sum_1"
  input: "gradients/sequential/lstm_1/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_8_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/Mul_8_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/Mul_8_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_8_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/Mul_8_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/Mul_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Mul_8_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_8_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/Mul_8_grad/Reshape_1"
  input: "^gradients/sequential/lstm_1/while/Mul_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Mul_8_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_1/while/clip_by_value_1/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/Shape_2"
  op: "Shape"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/zeros"
  op: "Fill"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/Shape_2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/GreaterEqual/StackPopV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/GreaterEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/GreaterEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/GreaterEqual/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/GreaterEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/GreaterEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/GreaterEqual/Enter"
  input: "sequential/lstm_1/while/clip_by_value_1/Minimum"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/GreaterEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/GreaterEqual/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/GreaterEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/GreaterEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/clip_by_value_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/clip_by_value_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/Select"
  op: "Select"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/Select"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/Sum"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/Select_1"
  op: "Select"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/zeros"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/Select_1"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/Sum_1"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_1_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_1_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/clip_by_value_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/Reshape_1"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/clip_by_value_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_1/while/clip_by_value/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_grad/Shape_2"
  op: "Shape"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_grad/zeros"
  op: "Fill"
  input: "gradients/sequential/lstm_1/while/clip_by_value_grad/Shape_2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/sequential/lstm_1/while/clip_by_value_grad/GreaterEqual/StackPopV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_grad/GreaterEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_grad/GreaterEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_grad/GreaterEqual/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_grad/GreaterEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_grad/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/clip_by_value_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_grad/GreaterEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_grad/GreaterEqual/Enter"
  input: "sequential/lstm_1/while/clip_by_value/Minimum"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_grad/GreaterEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_grad/GreaterEqual/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_grad/GreaterEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/clip_by_value_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_grad/GreaterEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_1/while/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/clip_by_value_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/clip_by_value_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_1/while/clip_by_value_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_grad/Select"
  op: "Select"
  input: "gradients/sequential/lstm_1/while/clip_by_value_grad/GreaterEqual"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_1/while/clip_by_value_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/clip_by_value_grad/Select"
  input: "gradients/sequential/lstm_1/while/clip_by_value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/clip_by_value_grad/Sum"
  input: "gradients/sequential/lstm_1/while/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_grad/Select_1"
  op: "Select"
  input: "gradients/sequential/lstm_1/while/clip_by_value_grad/GreaterEqual"
  input: "gradients/sequential/lstm_1/while/clip_by_value_grad/zeros"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/clip_by_value_grad/Select_1"
  input: "gradients/sequential/lstm_1/while/clip_by_value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/clip_by_value_grad/Sum_1"
  input: "gradients/sequential/lstm_1/while/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/clip_by_value_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/clip_by_value_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/clip_by_value_grad/Reshape_1"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/clip_by_value_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/Mul/StackPopV2"
  input: "gradients/sequential/lstm_1/while/mul_7_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_6_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_1/while/BiasAdd_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_6_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_1/while/MatMul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_1/while/add_6_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_1/while/add_6_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_6_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/add_6_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_6_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/add_6_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/add_6_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_6_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/add_6_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_6_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/add_6_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_1/while/add_6_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_6_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/add_6_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_6_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/add_6_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_6_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/add_6_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_6_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/add_6_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/add_6_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_6_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/add_6_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_6_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/add_6_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_1/while/add_6_grad/Shape_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_6_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/add_6_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_6_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/add_6_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_6_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/Mul_8_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_1/while/add_6_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_6_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/add_6_grad/Sum"
  input: "gradients/sequential/lstm_1/while/add_6_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_6_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/Mul_8_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_1/while/add_6_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_6_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/add_6_grad/Sum_1"
  input: "gradients/sequential/lstm_1/while/add_6_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/add_6_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/add_6_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_1/while/add_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/add_6_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/add_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/add_6_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/add_6_grad/Reshape_1"
  input: "^gradients/sequential/lstm_1/while/add_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/add_6_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_1/while/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/Shape_2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/LessEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/LessEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/Add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/LessEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/Add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/LessEqual/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/LessEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/LessEqual/Enter"
  input: "sequential/lstm_1/while/Add_3"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/LessEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/Select"
  op: "Select"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/Select"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/Sum"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/zeros"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/Select_1"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/Sum_1"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/Reshape_1"
  input: "^gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/sequential/lstm_1/while/mul_6_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_1/while/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/sequential/lstm_1/while/clip_by_value_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/Shape_2"
  input: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/LessEqual/StackPopV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/LessEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/LessEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/Add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/LessEqual/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/LessEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/Add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/LessEqual/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/LessEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/LessEqual/Enter"
  input: "sequential/lstm_1/while/Add_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/LessEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/LessEqual/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/LessEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/LessEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/Select"
  op: "Select"
  input: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/sequential/lstm_1/while/clip_by_value_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/Select"
  input: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/Sum"
  input: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/zeros"
  input: "gradients/sequential/lstm_1/while/clip_by_value_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/Select_1"
  input: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/Sum_1"
  input: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/Reshape_1"
  input: "^gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_4_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_1/while/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_4_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_1/while/MatMul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_1/while/add_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_1/while/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_4_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/add_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_4_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/add_4_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/add_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_4_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/add_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_4_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/add_4_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_1/while/add_4_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_4_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/add_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/add_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_4_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/add_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_4_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/add_4_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/add_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_4_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/add_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_4_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/add_4_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_1/while/add_4_grad/Shape_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/add_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/add_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_4_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/Tanh_grad/TanhGrad"
  input: "gradients/sequential/lstm_1/while/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/add_4_grad/Sum"
  input: "gradients/sequential/lstm_1/while/add_4_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/Tanh_grad/TanhGrad"
  input: "gradients/sequential/lstm_1/while/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/add_4_grad/Sum_1"
  input: "gradients/sequential/lstm_1/while/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/add_4_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/add_4_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_1/while/add_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/add_4_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/add_4_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/add_4_grad/Reshape_1"
  input: "^gradients/sequential/lstm_1/while/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/add_4_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/BiasAdd_3_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/sequential/lstm_1/while/add_6_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/BiasAdd_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/BiasAdd_3_grad/BiasAddGrad"
  input: "^gradients/sequential/lstm_1/while/add_6_grad/tuple/control_dependency"
}
node {
  name: "gradients/sequential/lstm_1/while/BiasAdd_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/add_6_grad/tuple/control_dependency"
  input: "^gradients/sequential/lstm_1/while/BiasAdd_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/add_6_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/BiasAdd_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/BiasAdd_3_grad/BiasAddGrad"
  input: "^gradients/sequential/lstm_1/while/BiasAdd_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/BiasAdd_3_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul"
  op: "MatMul"
  input: "gradients/sequential/lstm_1/while/add_6_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/strided_slice_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/strided_slice_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul/Enter"
  input: "sequential/lstm_1/while/strided_slice_3"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul_1/StackPopV2"
  input: "gradients/sequential/lstm_1/while/add_6_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul_1/Enter"
  input: "sequential/lstm_1/while/Identity_2"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul"
  input: "^gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul_1"
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul"
  input: "^gradients/sequential/lstm_1/while/MatMul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul_1"
  input: "^gradients/sequential/lstm_1/while/MatMul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_3_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_1/while/Mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_3_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_1/while/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_1/while/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_1/while/Add_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_3_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Add_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_3_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/Add_3_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Add_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_3_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/Add_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_3_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/Add_3_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_1/while/Add_3_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/Add_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/Add_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_3_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Add_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_3_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/Add_3_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Add_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_3_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/Add_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_3_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/Add_3_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_1/while/Add_3_grad/Shape_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_3_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/Add_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/Add_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_3_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_1/while/Add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/Add_3_grad/Sum"
  input: "gradients/sequential/lstm_1/while/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/clip_by_value_1/Minimum_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_1/while/Add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/Add_3_grad/Sum_1"
  input: "gradients/sequential/lstm_1/while/Add_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/Add_3_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/Add_3_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_1/while/Add_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/Add_3_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/Add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Add_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/Add_3_grad/Reshape_1"
  input: "^gradients/sequential/lstm_1/while/Add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Add_3_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_1_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_1/while/Mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_1_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_1/while/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_1/while/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_1/while/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/Add_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/Add_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_1/while/Add_1_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/Add_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/Add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/Add_1_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_1/while/Add_1_grad/Shape_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/Add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/Add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_1_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_1/while/Add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/Add_1_grad/Sum"
  input: "gradients/sequential/lstm_1/while/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/clip_by_value/Minimum_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_1/while/Add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/Add_1_grad/Sum_1"
  input: "gradients/sequential/lstm_1/while/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/Add_1_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/Add_1_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_1/while/Add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/Add_1_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/Add_1_grad/Reshape_1"
  input: "^gradients/sequential/lstm_1/while/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/BiasAdd_2_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/sequential/lstm_1/while/add_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/BiasAdd_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/BiasAdd_2_grad/BiasAddGrad"
  input: "^gradients/sequential/lstm_1/while/add_4_grad/tuple/control_dependency"
}
node {
  name: "gradients/sequential/lstm_1/while/BiasAdd_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/add_4_grad/tuple/control_dependency"
  input: "^gradients/sequential/lstm_1/while/BiasAdd_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/add_4_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/BiasAdd_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/BiasAdd_2_grad/BiasAddGrad"
  input: "^gradients/sequential/lstm_1/while/BiasAdd_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/BiasAdd_2_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_6_grad/MatMul"
  op: "MatMul"
  input: "gradients/sequential/lstm_1/while/add_4_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_1/while/MatMul_6_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_6_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/strided_slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_6_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/MatMul_6_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/strided_slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_6_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/MatMul_6_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_6_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/MatMul_6_grad/MatMul/Enter"
  input: "sequential/lstm_1/while/strided_slice_2"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_6_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/MatMul_6_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_6_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/MatMul_6_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_6_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul_1/StackPopV2"
  input: "gradients/sequential/lstm_1/while/add_4_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/MatMul_6_grad/MatMul"
  input: "^gradients/sequential/lstm_1/while/MatMul_6_grad/MatMul_1"
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/MatMul_6_grad/MatMul"
  input: "^gradients/sequential/lstm_1/while/MatMul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/MatMul_6_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/MatMul_6_grad/MatMul_1"
  input: "^gradients/sequential/lstm_1/while/MatMul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/MatMul_6_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_3_grad/MatMul"
  op: "MatMul"
  input: "gradients/sequential/lstm_1/while/BiasAdd_3_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_1/while/MatMul_3_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_3_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_3_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/MatMul_3_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_3_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/MatMul_3_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_3_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/MatMul_3_grad/MatMul/Enter"
  input: "sequential/lstm_1/while/split:3"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_3_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/MatMul_3_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_3_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/MatMul_3_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_3_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/sequential/lstm_1/while/MatMul_3_grad/MatMul_1/StackPopV2"
  input: "gradients/sequential/lstm_1/while/BiasAdd_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_3_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/mul_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_3_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/MatMul_3_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/mul_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_3_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/MatMul_3_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_3_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/MatMul_3_grad/MatMul_1/Enter"
  input: "sequential/lstm_1/while/mul_3"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_3_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/MatMul_3_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_3_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/MatMul_3_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/MatMul_3_grad/MatMul"
  input: "^gradients/sequential/lstm_1/while/MatMul_3_grad/MatMul_1"
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/MatMul_3_grad/MatMul"
  input: "^gradients/sequential/lstm_1/while/MatMul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/MatMul_3_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/MatMul_3_grad/MatMul_1"
  input: "^gradients/sequential/lstm_1/while/MatMul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/MatMul_3_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/strided_slice_3_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/strided_slice_3_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/sequential/lstm_1/while/strided_slice_3_grad/Shape"
  input: "gradients/sequential/lstm_1/while/strided_slice_3_grad/StridedSliceGrad/Const"
  input: "gradients/sequential/lstm_1/while/strided_slice_3_grad/StridedSliceGrad/Const_1"
  input: "gradients/sequential/lstm_1/while/strided_slice_3_grad/StridedSliceGrad/Const_2"
  input: "gradients/sequential/lstm_1/while/MatMul_7_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/strided_slice_3_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\211\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/strided_slice_3_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/strided_slice_3_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_5_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_1/while/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_5_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_1/while/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_1/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_1/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_5_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Mul_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_5_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/Mul_5_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Mul_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_5_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/Mul_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_5_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/Mul_5_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_1/while/Mul_5_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/Mul_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_5_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Mul_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_5_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/Mul_5_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Mul_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_5_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/Mul_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_5_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/Mul_5_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_1/while/Mul_5_grad/Shape_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/Mul_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_5_grad/Mul"
  op: "Mul"
  input: "gradients/sequential/lstm_1/while/Add_3_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_1/while/Mul_5_grad/Mul/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_5_grad/Mul/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_5_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/Mul_5_grad/Mul"
  input: "gradients/sequential/lstm_1/while/Mul_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/Mul_5_grad/Sum"
  input: "gradients/sequential/lstm_1/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_5_grad/Mul_1"
  op: "Mul"
  input: "gradients/sequential/lstm_1/while/Mul_5_grad/Mul_1/StackPopV2"
  input: "gradients/sequential/lstm_1/while/Add_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_5_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_5_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/Mul_5_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_5_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/Mul_5_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_5_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/Mul_5_grad/Mul_1/Enter"
  input: "sequential/lstm_1/while/add_2"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_5_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/Mul_5_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_5_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/Mul_5_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/Mul_5_grad/Mul_1"
  input: "gradients/sequential/lstm_1/while/Mul_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/Mul_5_grad/Sum_1"
  input: "gradients/sequential/lstm_1/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/Mul_5_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/Mul_5_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/Mul_5_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/Mul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Mul_5_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/Mul_5_grad/Reshape_1"
  input: "^gradients/sequential/lstm_1/while/Mul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Mul_5_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_4_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_1/while/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_4_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_1/while/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_1/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_1/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_4_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Mul_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_4_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/Mul_4_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Mul_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_4_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/Mul_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_4_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/Mul_4_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_1/while/Mul_4_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/Mul_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_4_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Mul_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_4_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/Mul_4_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Mul_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_4_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/Mul_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_4_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/Mul_4_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_1/while/Mul_4_grad/Shape_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/Mul_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_4_grad/Mul"
  op: "Mul"
  input: "gradients/sequential/lstm_1/while/Add_1_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_1/while/Mul_4_grad/Mul/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_4_grad/Mul/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_4_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/Mul_4_grad/Mul"
  input: "gradients/sequential/lstm_1/while/Mul_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/Mul_4_grad/Sum"
  input: "gradients/sequential/lstm_1/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_4_grad/Mul_1"
  op: "Mul"
  input: "gradients/sequential/lstm_1/while/Mul_4_grad/Mul_1/StackPopV2"
  input: "gradients/sequential/lstm_1/while/Add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_4_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_4_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/Mul_4_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_4_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/Mul_4_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_4_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/Mul_4_grad/Mul_1/Enter"
  input: "sequential/lstm_1/while/add"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_4_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/Mul_4_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_4_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/Mul_4_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/Mul_4_grad/Mul_1"
  input: "gradients/sequential/lstm_1/while/Mul_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/Mul_4_grad/Sum_1"
  input: "gradients/sequential/lstm_1/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/Mul_4_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/Mul_4_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/Mul_4_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/Mul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Mul_4_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Mul_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/Mul_4_grad/Reshape_1"
  input: "^gradients/sequential/lstm_1/while/Mul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/Mul_4_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_2_grad/MatMul"
  op: "MatMul"
  input: "gradients/sequential/lstm_1/while/BiasAdd_2_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_1/while/MatMul_2_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_2_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_2_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/MatMul_2_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_2_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/MatMul_2_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_2_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/MatMul_2_grad/MatMul/Enter"
  input: "sequential/lstm_1/while/split:2"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_2_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/MatMul_2_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_2_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/MatMul_2_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_2_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/sequential/lstm_1/while/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "gradients/sequential/lstm_1/while/BiasAdd_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_2_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_2_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/MatMul_2_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_2_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/MatMul_2_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_2_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/MatMul_2_grad/MatMul_1/Enter"
  input: "sequential/lstm_1/while/mul_2"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_2_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/MatMul_2_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_2_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/MatMul_2_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/MatMul_2_grad/MatMul"
  input: "^gradients/sequential/lstm_1/while/MatMul_2_grad/MatMul_1"
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/MatMul_2_grad/MatMul"
  input: "^gradients/sequential/lstm_1/while/MatMul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/MatMul_2_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/MatMul_2_grad/MatMul_1"
  input: "^gradients/sequential/lstm_1/while/MatMul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/MatMul_2_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/strided_slice_2_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/strided_slice_2_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/sequential/lstm_1/while/strided_slice_2_grad/Shape"
  input: "gradients/sequential/lstm_1/while/strided_slice_2_grad/StridedSliceGrad/Const"
  input: "gradients/sequential/lstm_1/while/strided_slice_2_grad/StridedSliceGrad/Const_1"
  input: "gradients/sequential/lstm_1/while/strided_slice_2_grad/StridedSliceGrad/Const_2"
  input: "gradients/sequential/lstm_1/while/MatMul_6_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/strided_slice_2_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\006\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/strided_slice_2_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\211\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/strided_slice_2_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_3_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_1/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_3_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_1/while/mul_3/Enter"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_1/while/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_1/while/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_3_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_3_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/mul_3_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_3_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_3_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/mul_3_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_1/while/mul_3_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/mul_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_3_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/mul_3_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_3_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_3_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/mul_3_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_1/while/mul_3_grad/Shape_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/mul_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_3_grad/Mul"
  op: "Mul"
  input: "gradients/sequential/lstm_1/while/MatMul_3_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_1/while/mul_3_grad/Mul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_3_grad/Mul/Enter"
  op: "Enter"
  input: "sequential/lstm_1/cond_3/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_3_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/mul_3_grad/Mul"
  input: "gradients/sequential/lstm_1/while/mul_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/mul_3_grad/Sum"
  input: "gradients/sequential/lstm_1/while/mul_3_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_3_grad/Mul_1"
  op: "Mul"
  input: "gradients/sequential/lstm_1/while/mul_3_grad/Mul_1/StackPopV2"
  input: "gradients/sequential/lstm_1/while/MatMul_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_3_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_3_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/mul_3_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_3_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_3_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_3_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/mul_3_grad/Mul_1/Enter"
  input: "sequential/lstm_1/while/TensorArrayReadV3"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_3_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/mul_3_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_3_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_3_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/mul_3_grad/Mul_1"
  input: "gradients/sequential/lstm_1/while/mul_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/mul_3_grad/Sum_1"
  input: "gradients/sequential/lstm_1/while/mul_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/mul_3_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/mul_3_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_1/while/mul_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/mul_3_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/mul_3_grad/Reshape_1"
  input: "^gradients/sequential/lstm_1/while/mul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_3_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_2_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_1/while/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_2_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_1/while/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_1/while/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_1/while/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/add_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/add_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_1/while/add_2_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/add_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/add_2_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_1/while/add_2_grad/Shape_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/Mul_5_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_1/while/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/add_2_grad/Sum"
  input: "gradients/sequential/lstm_1/while/add_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/Mul_5_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_1/while/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/add_2_grad/Sum_1"
  input: "gradients/sequential/lstm_1/while/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/add_2_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/add_2_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_1/while/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/add_2_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/add_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/add_2_grad/Reshape_1"
  input: "^gradients/sequential/lstm_1/while/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/add_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_1/while/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_1/while/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_1/while/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_1/while/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/add_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_1/while/add_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/add_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/add_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_1/while/add_grad/Shape_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/Mul_4_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_1/while/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/add_grad/Sum"
  input: "gradients/sequential/lstm_1/while/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/Mul_4_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_1/while/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/add_grad/Sum_1"
  input: "gradients/sequential/lstm_1/while/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/add_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/add_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_1/while/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/add_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/add_grad/Reshape_1"
  input: "^gradients/sequential/lstm_1/while/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_2_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_1/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_2_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_1/while/mul_2/Enter"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_1/while/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_1/while/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/mul_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/mul_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_1/while/mul_2_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/mul_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/mul_2_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_1/while/mul_2_grad/Shape_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_2_grad/Mul"
  op: "Mul"
  input: "gradients/sequential/lstm_1/while/MatMul_2_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_1/while/mul_2_grad/Mul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_2_grad/Mul/Enter"
  op: "Enter"
  input: "sequential/lstm_1/cond_2/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_2_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/mul_2_grad/Mul"
  input: "gradients/sequential/lstm_1/while/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/mul_2_grad/Sum"
  input: "gradients/sequential/lstm_1/while/mul_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_2_grad/Mul_1"
  op: "Mul"
  input: "gradients/sequential/lstm_1/while/mul_3_grad/Mul_1/StackPopV2"
  input: "gradients/sequential/lstm_1/while/MatMul_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/mul_2_grad/Mul_1"
  input: "gradients/sequential/lstm_1/while/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/mul_2_grad/Sum_1"
  input: "gradients/sequential/lstm_1/while/mul_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/mul_2_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/mul_2_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_1/while/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/mul_2_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/mul_2_grad/Reshape_1"
  input: "^gradients/sequential/lstm_1/while/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/sequential/lstm_1/while/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/BiasAdd_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/BiasAdd_1_grad/BiasAddGrad"
  input: "^gradients/sequential/lstm_1/while/add_2_grad/tuple/control_dependency"
}
node {
  name: "gradients/sequential/lstm_1/while/BiasAdd_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/add_2_grad/tuple/control_dependency"
  input: "^gradients/sequential/lstm_1/while/BiasAdd_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/add_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/BiasAdd_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/BiasAdd_1_grad/BiasAddGrad"
  input: "^gradients/sequential/lstm_1/while/BiasAdd_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/BiasAdd_1_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_5_grad/MatMul"
  op: "MatMul"
  input: "gradients/sequential/lstm_1/while/add_2_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_1/while/MatMul_5_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_5_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/strided_slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_5_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/MatMul_5_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/strided_slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_5_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/MatMul_5_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_5_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/MatMul_5_grad/MatMul/Enter"
  input: "sequential/lstm_1/while/strided_slice_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_5_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/MatMul_5_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_5_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/MatMul_5_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_5_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul_1/StackPopV2"
  input: "gradients/sequential/lstm_1/while/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/MatMul_5_grad/MatMul"
  input: "^gradients/sequential/lstm_1/while/MatMul_5_grad/MatMul_1"
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/MatMul_5_grad/MatMul"
  input: "^gradients/sequential/lstm_1/while/MatMul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/MatMul_5_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/MatMul_5_grad/MatMul_1"
  input: "^gradients/sequential/lstm_1/while/MatMul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/MatMul_5_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/sequential/lstm_1/while/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/sequential/lstm_1/while/add_grad/tuple/control_dependency"
}
node {
  name: "gradients/sequential/lstm_1/while/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/add_grad/tuple/control_dependency"
  input: "^gradients/sequential/lstm_1/while/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/sequential/lstm_1/while/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_4_grad/MatMul"
  op: "MatMul"
  input: "gradients/sequential/lstm_1/while/add_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_1/while/MatMul_4_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_4_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_4_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/MatMul_4_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_4_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/MatMul_4_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_4_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/MatMul_4_grad/MatMul/Enter"
  input: "sequential/lstm_1/while/strided_slice"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_4_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/MatMul_4_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_4_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/MatMul_4_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_4_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul_1/StackPopV2"
  input: "gradients/sequential/lstm_1/while/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/MatMul_4_grad/MatMul"
  input: "^gradients/sequential/lstm_1/while/MatMul_4_grad/MatMul_1"
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/MatMul_4_grad/MatMul"
  input: "^gradients/sequential/lstm_1/while/MatMul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/MatMul_4_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/MatMul_4_grad/MatMul_1"
  input: "^gradients/sequential/lstm_1/while/MatMul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/MatMul_4_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/sequential/lstm_1/while/BiasAdd_1_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_1/while/MatMul_1_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_1_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_1_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/MatMul_1_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/MatMul_1_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_1_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/MatMul_1_grad/MatMul/Enter"
  input: "sequential/lstm_1/while/split:1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_1_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/MatMul_1_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_1_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/MatMul_1_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/sequential/lstm_1/while/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "gradients/sequential/lstm_1/while/BiasAdd_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_1_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_1_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/MatMul_1_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_1_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_1_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/MatMul_1_grad/MatMul_1/Enter"
  input: "sequential/lstm_1/while/mul_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_1_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/MatMul_1_grad/MatMul"
  input: "^gradients/sequential/lstm_1/while/MatMul_1_grad/MatMul_1"
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/MatMul_1_grad/MatMul"
  input: "^gradients/sequential/lstm_1/while/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/MatMul_1_grad/MatMul_1"
  input: "^gradients/sequential/lstm_1/while/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/MatMul_1_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/strided_slice_1_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/sequential/lstm_1/while/strided_slice_1_grad/Shape"
  input: "gradients/sequential/lstm_1/while/strided_slice_1_grad/StridedSliceGrad/Const"
  input: "gradients/sequential/lstm_1/while/strided_slice_1_grad/StridedSliceGrad/Const_1"
  input: "gradients/sequential/lstm_1/while/strided_slice_1_grad/StridedSliceGrad/Const_2"
  input: "gradients/sequential/lstm_1/while/MatMul_5_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/strided_slice_1_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\203\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/strided_slice_1_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\006\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/strided_slice_1_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/sequential/lstm_1/while/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_1/while/MatMul_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/MatMul_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/MatMul_grad/MatMul/Enter"
  input: "sequential/lstm_1/while/split"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/MatMul_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/sequential/lstm_1/while/MatMul_grad/MatMul_1/StackPopV2"
  input: "gradients/sequential/lstm_1/while/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/MatMul_grad/MatMul_1/Enter"
  input: "sequential/lstm_1/while/mul"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/MatMul_grad/MatMul"
  input: "^gradients/sequential/lstm_1/while/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/MatMul_grad/MatMul"
  input: "^gradients/sequential/lstm_1/while/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/MatMul_grad/MatMul_1"
  input: "^gradients/sequential/lstm_1/while/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/split_1_grad/concat"
  op: "ConcatV2"
  input: "gradients/sequential/lstm_1/while/BiasAdd_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_1/while/BiasAdd_1_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_1/while/BiasAdd_2_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_1/while/BiasAdd_3_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_1/while/split_1_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/split_1_grad/concat/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AddN_13"
  op: "AddN"
  input: "gradients/sequential/lstm_1/while/MatMul_7_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_1/while/MatMul_6_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_1/while/MatMul_5_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_1/while/MatMul_4_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/MatMul_7_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/strided_slice_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/sequential/lstm_1/while/strided_slice_grad/Shape"
  input: "gradients/sequential/lstm_1/while/strided_slice_grad/StridedSliceGrad/Const"
  input: "gradients/sequential/lstm_1/while/strided_slice_grad/StridedSliceGrad/Const_1"
  input: "gradients/sequential/lstm_1/while/strided_slice_grad/StridedSliceGrad/Const_2"
  input: "gradients/sequential/lstm_1/while/MatMul_4_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/strided_slice_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/strided_slice_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\203\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/strided_slice_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_1_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_1/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_1_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_1/while/mul_1/Enter"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_1/while/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_1/while/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/mul_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/mul_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_1/while/mul_1_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/mul_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/mul_1_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_1/while/mul_1_grad/Shape_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_1_grad/Mul"
  op: "Mul"
  input: "gradients/sequential/lstm_1/while/MatMul_1_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_1/while/mul_1_grad/Mul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_1_grad/Mul/Enter"
  op: "Enter"
  input: "sequential/lstm_1/cond_1/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_1_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/mul_1_grad/Mul"
  input: "gradients/sequential/lstm_1/while/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/mul_1_grad/Sum"
  input: "gradients/sequential/lstm_1/while/mul_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_1_grad/Mul_1"
  op: "Mul"
  input: "gradients/sequential/lstm_1/while/mul_3_grad/Mul_1/StackPopV2"
  input: "gradients/sequential/lstm_1/while/MatMul_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/mul_1_grad/Mul_1"
  input: "gradients/sequential/lstm_1/while/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/mul_1_grad/Sum_1"
  input: "gradients/sequential/lstm_1/while/mul_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/mul_1_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/mul_1_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_1/while/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/mul_1_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/mul_1_grad/Reshape_1"
  input: "^gradients/sequential/lstm_1/while/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_grad/Shape"
  op: "Shape"
  input: "sequential/lstm_1/while/TensorArrayReadV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm_1/while/mul/Enter"
  input: "^sequential/lstm_1/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm_1/while/mul_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm_1/while/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/mul_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/mul_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm_1/while/mul_grad/Shape"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm_1/while/mul_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm_1/while/mul_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm_1/while/mul_grad/Shape_1"
  input: "^gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm_1/while/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_grad/Mul"
  op: "Mul"
  input: "gradients/sequential/lstm_1/while/MatMul_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_1/while/mul_grad/Mul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_grad/Mul/Enter"
  op: "Enter"
  input: "sequential/lstm_1/cond/Merge"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/mul_grad/Mul"
  input: "gradients/sequential/lstm_1/while/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/mul_grad/Sum"
  input: "gradients/sequential/lstm_1/while/mul_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_grad/Mul_1"
  op: "Mul"
  input: "gradients/sequential/lstm_1/while/mul_3_grad/Mul_1/StackPopV2"
  input: "gradients/sequential/lstm_1/while/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm_1/while/mul_grad/Mul_1"
  input: "gradients/sequential/lstm_1/while/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm_1/while/mul_grad/Sum_1"
  input: "gradients/sequential/lstm_1/while/mul_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/while/mul_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/mul_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm_1/while/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/mul_grad/Reshape"
  input: "^gradients/sequential/lstm_1/while/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/mul_grad/Reshape_1"
  input: "^gradients/sequential/lstm_1/while/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/sequential/lstm_1/while/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_1/while/MatMul_1_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_1/while/MatMul_2_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_1/while/MatMul_3_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm_1/while/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/split_grad/concat/Const"
  op: "Const"
  input: "^gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_14"
  op: "AddN"
  input: "gradients/sequential/lstm_1/while/mul_3_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_1/while/mul_2_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_1/while/mul_1_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_1/while/mul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/mul_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/sequential/lstm_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients/sequential/lstm_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "sequential/lstm_1/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "sequential/lstm_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^gradients/sequential/lstm_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "gradients/sequential/lstm_1/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/sequential/lstm_1/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "gradients/AddN_14"
  input: "gradients/sequential/lstm_1/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/split_1/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 524
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/split_1/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/split_1/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/split_1/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/sequential/lstm_1/while/split_1/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/sequential/lstm_1/while/split_1/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/split_1/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/sequential/lstm_1/while/split_1/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/split_1/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/sequential/lstm_1/while/split_1/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/sequential/lstm_1/while/split_1_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/split_1/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/sequential/lstm_1/while/split_1/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/split_1/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/sequential/lstm_1/while/split_1/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_15"
  op: "AddN"
  input: "gradients/sequential/lstm_1/while/strided_slice_3_grad/StridedSliceGrad"
  input: "gradients/sequential/lstm_1/while/strided_slice_2_grad/StridedSliceGrad"
  input: "gradients/sequential/lstm_1/while/strided_slice_1_grad/StridedSliceGrad"
  input: "gradients/sequential/lstm_1/while/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/strided_slice_3_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/sequential/lstm_1/while/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/sequential/lstm_1/while/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/sequential/lstm_1/while/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/sequential/lstm_1/while/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/AddN_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/sequential/lstm_1/while/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/sequential/lstm_1/while/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "gradients/sequential/lstm_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "gradients/sequential/lstm_1/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "gradients/sequential/lstm_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "gradients/sequential/lstm_1/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "gradients/sequential/lstm_1/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/sequential/lstm_1/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "gradients/sequential/lstm_1/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/split/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/split/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/sequential/lstm_1/while/split/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm_1/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/split/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/sequential/lstm_1/while/split/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/sequential/lstm_1/while/split/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/split/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/sequential/lstm_1/while/split/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/split/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/sequential/lstm_1/while/split/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/sequential/lstm_1/while/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/split/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/sequential/lstm_1/while/split/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/while/split/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/sequential/lstm_1/while/split/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "sequential/lstm_1/TensorArray"
  input: "gradients/sequential/lstm_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^gradients/sequential/lstm_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "gradients/sequential/lstm_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "sequential/lstm_1/TensorArrayUnstack/range"
  input: "gradients/sequential/lstm_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^gradients/sequential/lstm_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
}
node {
  name: "gradients/sequential/lstm_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^gradients/sequential/lstm_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^gradients/sequential/lstm_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm_1/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "sequential/lstm_1/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm_1/transpose_grad/transpose"
  op: "Transpose"
  input: "gradients/sequential/lstm_1/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm_1/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 5
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "sequential/lstm/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/transpose_1_grad/transpose"
  op: "Transpose"
  input: "gradients/sequential/lstm_1/transpose_grad/transpose"
  input: "gradients/sequential/lstm/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "sequential/lstm/TensorArray_1"
  input: "sequential/lstm/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/sequential/lstm/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "sequential/lstm/while/Exit_1"
  input: "^gradients/sequential/lstm/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "gradients/sequential/lstm/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "sequential/lstm/TensorArrayStack/range"
  input: "gradients/sequential/lstm/transpose_1_grad/transpose"
  input: "gradients/sequential/lstm/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_6"
  op: "ZerosLike"
  input: "sequential/lstm/while/Exit_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like_7"
  op: "ZerosLike"
  input: "sequential/lstm/while/Exit_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Exit_1_grad/b_exit"
  op: "Enter"
  input: "gradients/sequential/lstm/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "gradients/zeros_like_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "gradients/zeros_like_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Switch_1_grad/b_switch"
  op: "Merge"
  input: "gradients/sequential/lstm/while/Exit_1_grad/b_exit"
  input: "gradients/sequential/lstm/while/Switch_1_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "gradients/sequential/lstm/while/Exit_2_grad/b_exit"
  input: "gradients/sequential/lstm/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Switch_3_grad/b_switch"
  op: "Merge"
  input: "gradients/sequential/lstm/while/Exit_3_grad/b_exit"
  input: "gradients/sequential/lstm/while/Switch_3_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Merge_1_grad/Switch"
  op: "Switch"
  input: "gradients/sequential/lstm/while/Switch_1_grad/b_switch"
  input: "gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm/while/Merge_1_grad/Switch"
}
node {
  name: "gradients/sequential/lstm/while/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm/while/Merge_1_grad/Switch"
  input: "^gradients/sequential/lstm/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm/while/Merge_1_grad/Switch:1"
  input: "^gradients/sequential/lstm/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "gradients/sequential/lstm/while/Switch_2_grad/b_switch"
  input: "gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm/while/Merge_2_grad/Switch"
}
node {
  name: "gradients/sequential/lstm/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm/while/Merge_2_grad/Switch"
  input: "^gradients/sequential/lstm/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm/while/Merge_2_grad/Switch:1"
  input: "^gradients/sequential/lstm/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Merge_3_grad/Switch"
  op: "Switch"
  input: "gradients/sequential/lstm/while/Switch_3_grad/b_switch"
  input: "gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Merge_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm/while/Merge_3_grad/Switch"
}
node {
  name: "gradients/sequential/lstm/while/Merge_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm/while/Merge_3_grad/Switch"
  input: "^gradients/sequential/lstm/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Merge_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm/while/Merge_3_grad/Switch:1"
  input: "^gradients/sequential/lstm/while/Merge_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Enter_1_grad/Exit"
  op: "Exit"
  input: "gradients/sequential/lstm/while/Merge_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "gradients/sequential/lstm/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Enter_3_grad/Exit"
  op: "Exit"
  input: "gradients/sequential/lstm/while/Merge_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "gradients/sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "gradients/sequential/lstm/while/Merge_1_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/mul_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "gradients"
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "sequential/lstm/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/mul_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "gradients/sequential/lstm/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^gradients/sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/mul_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "gradients/sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "gradients/sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "gradients/sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/Enter"
  input: "sequential/lstm/while/Identity"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^gradients/sequential/lstm/while/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm/while/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm/while/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm/while/Add_3_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm/while/Add_7_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm/while/Add_7_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm/while/MatMul_1_grad/MatMul/StackPopV2"
  input: "^gradients/sequential/lstm/while/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "^gradients/sequential/lstm/while/MatMul_2_grad/MatMul/StackPopV2"
  input: "^gradients/sequential/lstm/while/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "^gradients/sequential/lstm/while/MatMul_3_grad/MatMul/StackPopV2"
  input: "^gradients/sequential/lstm/while/MatMul_3_grad/MatMul_1/StackPopV2"
  input: "^gradients/sequential/lstm/while/MatMul_4_grad/MatMul/StackPopV2"
  input: "^gradients/sequential/lstm/while/MatMul_5_grad/MatMul/StackPopV2"
  input: "^gradients/sequential/lstm/while/MatMul_6_grad/MatMul/StackPopV2"
  input: "^gradients/sequential/lstm/while/MatMul_7_grad/MatMul/StackPopV2"
  input: "^gradients/sequential/lstm/while/MatMul_7_grad/MatMul_1/StackPopV2"
  input: "^gradients/sequential/lstm/while/MatMul_grad/MatMul/StackPopV2"
  input: "^gradients/sequential/lstm/while/MatMul_grad/MatMul_1/StackPopV2"
  input: "^gradients/sequential/lstm/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm/while/Mul_4_grad/Mul_1/StackPopV2"
  input: "^gradients/sequential/lstm/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm/while/Mul_5_grad/Mul_1/StackPopV2"
  input: "^gradients/sequential/lstm/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm/while/Mul_8_grad/Mul_1/StackPopV2"
  input: "^gradients/sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPopV2"
  input: "^gradients/sequential/lstm/while/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm/while/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm/while/add_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm/while/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm/while/add_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm/while/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm/while/add_6_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm/while/add_6_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm/while/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm/while/add_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm/while/clip_by_value/Minimum_grad/LessEqual/StackPopV2"
  input: "^gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2"
  input: "^gradients/sequential/lstm/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm/while/clip_by_value_1_grad/GreaterEqual/StackPopV2"
  input: "^gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/LessEqual/StackPopV2"
  input: "^gradients/sequential/lstm/while/clip_by_value_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm/while/clip_by_value_2_grad/GreaterEqual/StackPopV2"
  input: "^gradients/sequential/lstm/while/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm/while/clip_by_value_grad/GreaterEqual/StackPopV2"
  input: "^gradients/sequential/lstm/while/mul_6_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm/while/mul_6_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm/while/mul_6_grad/Mul/StackPopV2"
  input: "^gradients/sequential/lstm/while/mul_6_grad/Mul_1/StackPopV2"
  input: "^gradients/sequential/lstm/while/mul_7_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm/while/mul_7_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm/while/mul_7_grad/Mul/StackPopV2"
  input: "^gradients/sequential/lstm/while/mul_7_grad/Mul_1/StackPopV2"
  input: "^gradients/sequential/lstm/while/mul_9_grad/BroadcastGradientArgs/StackPopV2"
  input: "^gradients/sequential/lstm/while/mul_9_grad/BroadcastGradientArgs/StackPopV2_1"
  input: "^gradients/sequential/lstm/while/mul_9_grad/Mul/StackPopV2"
  input: "^gradients/sequential/lstm/while/mul_9_grad/Mul_1/StackPopV2"
}
node {
  name: "gradients/sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^gradients/sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "gradients/sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^gradients/sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^gradients/sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_16"
  op: "AddN"
  input: "gradients/sequential/lstm/while/Merge_2_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_9_grad/Shape"
  op: "Shape"
  input: "sequential/lstm/while/clip_by_value_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_9_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm/while/Tanh_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_9_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm/while/mul_9_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm/while/mul_9_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_9_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/mul_9_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_9_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/mul_9_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/mul_9_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_9_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/mul_9_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_9_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/mul_9_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm/while/mul_9_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_9_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/mul_9_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_9_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/mul_9_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_9_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/mul_9_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_9_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/mul_9_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/mul_9_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_9_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm/while/mul_9_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_9_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/mul_9_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm/while/mul_9_grad/Shape_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_9_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/mul_9_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_9_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/mul_9_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_9_grad/Mul"
  op: "Mul"
  input: "gradients/AddN_16"
  input: "gradients/sequential/lstm/while/mul_9_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_9_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_9_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/mul_9_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/Tanh_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_9_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/mul_9_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_9_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/mul_9_grad/Mul/Enter"
  input: "sequential/lstm/while/Tanh_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_9_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/mul_9_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_9_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/mul_9_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_9_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm/while/mul_9_grad/Mul"
  input: "gradients/sequential/lstm/while/mul_9_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_9_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/mul_9_grad/Sum"
  input: "gradients/sequential/lstm/while/mul_9_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_9_grad/Mul_1"
  op: "Mul"
  input: "gradients/sequential/lstm/while/mul_9_grad/Mul_1/StackPopV2"
  input: "gradients/AddN_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_9_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/clip_by_value_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_9_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/mul_9_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/clip_by_value_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_9_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/mul_9_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_9_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/mul_9_grad/Mul_1/Enter"
  input: "sequential/lstm/while/clip_by_value_2"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_9_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/mul_9_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_9_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/mul_9_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_9_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm/while/mul_9_grad/Mul_1"
  input: "gradients/sequential/lstm/while/mul_9_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_9_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/mul_9_grad/Sum_1"
  input: "gradients/sequential/lstm/while/mul_9_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_9_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm/while/mul_9_grad/Reshape"
  input: "^gradients/sequential/lstm/while/mul_9_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm/while/mul_9_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm/while/mul_9_grad/Reshape"
  input: "^gradients/sequential/lstm/while/mul_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/mul_9_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_9_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm/while/mul_9_grad/Reshape_1"
  input: "^gradients/sequential/lstm/while/mul_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/mul_9_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2_grad/Shape"
  op: "Shape"
  input: "sequential/lstm/while/clip_by_value_2/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2_grad/Shape_2"
  op: "Shape"
  input: "gradients/sequential/lstm/while/mul_9_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2_grad/zeros"
  op: "Fill"
  input: "gradients/sequential/lstm/while/clip_by_value_2_grad/Shape_2"
  input: "gradients/sequential/lstm/while/clip_by_value_2_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/sequential/lstm/while/clip_by_value_2_grad/GreaterEqual/StackPopV2"
  input: "gradients/sequential/lstm/while/clip_by_value_2_grad/GreaterEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2_grad/GreaterEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/clip_by_value_2/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2_grad/GreaterEqual/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/clip_by_value_2_grad/GreaterEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/clip_by_value_2/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2_grad/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/clip_by_value_2_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2_grad/GreaterEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/clip_by_value_2_grad/GreaterEqual/Enter"
  input: "sequential/lstm/while/clip_by_value_2/Minimum"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2_grad/GreaterEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/clip_by_value_2_grad/GreaterEqual/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2_grad/GreaterEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/clip_by_value_2_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2_grad/GreaterEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm/while/clip_by_value_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm/while/clip_by_value_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/clip_by_value_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/clip_by_value_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/clip_by_value_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/clip_by_value_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/clip_by_value_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm/while/clip_by_value_2_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/clip_by_value_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/clip_by_value_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2_grad/Select"
  op: "Select"
  input: "gradients/sequential/lstm/while/clip_by_value_2_grad/GreaterEqual"
  input: "gradients/sequential/lstm/while/mul_9_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm/while/clip_by_value_2_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm/while/clip_by_value_2_grad/Select"
  input: "gradients/sequential/lstm/while/clip_by_value_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/clip_by_value_2_grad/Sum"
  input: "gradients/sequential/lstm/while/clip_by_value_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2_grad/Select_1"
  op: "Select"
  input: "gradients/sequential/lstm/while/clip_by_value_2_grad/GreaterEqual"
  input: "gradients/sequential/lstm/while/clip_by_value_2_grad/zeros"
  input: "gradients/sequential/lstm/while/mul_9_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm/while/clip_by_value_2_grad/Select_1"
  input: "gradients/sequential/lstm/while/clip_by_value_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/clip_by_value_2_grad/Sum_1"
  input: "gradients/sequential/lstm/while/clip_by_value_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm/while/clip_by_value_2_grad/Reshape"
  input: "^gradients/sequential/lstm/while/clip_by_value_2_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm/while/clip_by_value_2_grad/Reshape"
  input: "^gradients/sequential/lstm/while/clip_by_value_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/clip_by_value_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm/while/clip_by_value_2_grad/Reshape_1"
  input: "^gradients/sequential/lstm/while/clip_by_value_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/clip_by_value_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/sequential/lstm/while/mul_9_grad/Mul/StackPopV2"
  input: "gradients/sequential/lstm/while/mul_9_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Switch_1_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/sequential/lstm/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/Shape"
  op: "Shape"
  input: "sequential/lstm/while/Add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/sequential/lstm/while/clip_by_value_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/Shape_2"
  input: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/LessEqual/StackPopV2"
  input: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/LessEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/LessEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/Add_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/LessEqual/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/LessEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/Add_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/LessEqual/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/LessEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/LessEqual/Enter"
  input: "sequential/lstm/while/Add_7"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/LessEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/LessEqual/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/LessEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/LessEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/Select"
  op: "Select"
  input: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/LessEqual"
  input: "gradients/sequential/lstm/while/clip_by_value_2_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/Select"
  input: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/Sum"
  input: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/LessEqual"
  input: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/zeros"
  input: "gradients/sequential/lstm/while/clip_by_value_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/Select_1"
  input: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/Sum_1"
  input: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/Reshape"
  input: "^gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/Reshape"
  input: "^gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/Reshape_1"
  input: "^gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_17"
  op: "AddN"
  input: "gradients/sequential/lstm/while/Merge_3_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm/while/Tanh_1_grad/TanhGrad"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Switch_3_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_5_grad/Shape"
  op: "Shape"
  input: "sequential/lstm/while/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_5_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm/while/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm/while/add_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm/while/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_5_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/add_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_5_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/add_5_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/add_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_5_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/add_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_5_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/add_5_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm/while/add_5_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_5_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/add_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/add_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_5_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/add_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_5_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/add_5_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/add_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_5_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm/while/add_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_5_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/add_5_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm/while/add_5_grad/Shape_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/add_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/add_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_5_grad/Sum"
  op: "Sum"
  input: "gradients/AddN_17"
  input: "gradients/sequential/lstm/while/add_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/add_5_grad/Sum"
  input: "gradients/sequential/lstm/while/add_5_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/AddN_17"
  input: "gradients/sequential/lstm/while/add_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/add_5_grad/Sum_1"
  input: "gradients/sequential/lstm/while/add_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm/while/add_5_grad/Reshape"
  input: "^gradients/sequential/lstm/while/add_5_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm/while/add_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm/while/add_5_grad/Reshape"
  input: "^gradients/sequential/lstm/while/add_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/add_5_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm/while/add_5_grad/Reshape_1"
  input: "^gradients/sequential/lstm/while/add_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/add_5_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_7_grad/Shape"
  op: "Shape"
  input: "sequential/lstm/while/Mul_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_7_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm/while/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm/while/Add_7_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm/while/Add_7_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_7_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Add_7_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_7_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/Add_7_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Add_7_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_7_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/Add_7_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_7_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/Add_7_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm/while/Add_7_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_7_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/Add_7_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_7_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/Add_7_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_7_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Add_7_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_7_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/Add_7_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Add_7_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_7_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm/while/Add_7_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_7_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/Add_7_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm/while/Add_7_grad/Shape_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_7_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/Add_7_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_7_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/Add_7_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_7_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm/while/Add_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_7_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/Add_7_grad/Sum"
  input: "gradients/sequential/lstm/while/Add_7_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_7_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm/while/clip_by_value_2/Minimum_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm/while/Add_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_7_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/Add_7_grad/Sum_1"
  input: "gradients/sequential/lstm/while/Add_7_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm/while/Add_7_grad/Reshape"
  input: "^gradients/sequential/lstm/while/Add_7_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm/while/Add_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm/while/Add_7_grad/Reshape"
  input: "^gradients/sequential/lstm/while/Add_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Add_7_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm/while/Add_7_grad/Reshape_1"
  input: "^gradients/sequential/lstm/while/Add_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Add_7_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_6_grad/Shape"
  op: "Shape"
  input: "sequential/lstm/while/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_6_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm/while/mul_6_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm/while/mul_6_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_6_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/mul_6_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_6_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/mul_6_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/mul_6_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_6_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/mul_6_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_6_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/mul_6_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm/while/mul_6_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_6_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/mul_6_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_6_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/mul_6_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_6_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/mul_6_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_6_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/mul_6_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/mul_6_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_6_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm/while/mul_6_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_6_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/mul_6_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm/while/mul_6_grad/Shape_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_6_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/mul_6_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_6_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/mul_6_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_6_grad/Mul"
  op: "Mul"
  input: "gradients/sequential/lstm/while/add_5_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm/while/mul_6_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_6_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_6_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/mul_6_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/Identity_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_6_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/mul_6_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_6_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/mul_6_grad/Mul/Enter"
  input: "sequential/lstm/while/Identity_3"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_6_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/mul_6_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_6_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/mul_6_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_6_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm/while/mul_6_grad/Mul"
  input: "gradients/sequential/lstm/while/mul_6_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_6_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/mul_6_grad/Sum"
  input: "gradients/sequential/lstm/while/mul_6_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_6_grad/Mul_1"
  op: "Mul"
  input: "gradients/sequential/lstm/while/mul_6_grad/Mul_1/StackPopV2"
  input: "gradients/sequential/lstm/while/add_5_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_6_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/clip_by_value_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_6_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/mul_6_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/clip_by_value_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_6_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/mul_6_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_6_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/mul_6_grad/Mul_1/Enter"
  input: "sequential/lstm/while/clip_by_value_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_6_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/mul_6_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_6_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/mul_6_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_6_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm/while/mul_6_grad/Mul_1"
  input: "gradients/sequential/lstm/while/mul_6_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_6_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/mul_6_grad/Sum_1"
  input: "gradients/sequential/lstm/while/mul_6_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm/while/mul_6_grad/Reshape"
  input: "^gradients/sequential/lstm/while/mul_6_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm/while/mul_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm/while/mul_6_grad/Reshape"
  input: "^gradients/sequential/lstm/while/mul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/mul_6_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm/while/mul_6_grad/Reshape_1"
  input: "^gradients/sequential/lstm/while/mul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/mul_6_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_7_grad/Shape"
  op: "Shape"
  input: "sequential/lstm/while/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_7_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm/while/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm/while/mul_7_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm/while/mul_7_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_7_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/mul_7_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_7_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/mul_7_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/mul_7_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_7_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/mul_7_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_7_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/mul_7_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm/while/mul_7_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_7_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/mul_7_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_7_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/mul_7_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_7_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/mul_7_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_7_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/mul_7_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/mul_7_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_7_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm/while/mul_7_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_7_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/mul_7_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm/while/mul_7_grad/Shape_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_7_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/mul_7_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_7_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/mul_7_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_7_grad/Mul"
  op: "Mul"
  input: "gradients/sequential/lstm/while/add_5_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm/while/mul_7_grad/Mul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_7_grad/Mul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_7_grad/Mul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/mul_7_grad/Mul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_7_grad/Mul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/mul_7_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_7_grad/Mul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/mul_7_grad/Mul/Enter"
  input: "sequential/lstm/while/Tanh"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_7_grad/Mul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/mul_7_grad/Mul/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_7_grad/Mul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/mul_7_grad/Mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_7_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm/while/mul_7_grad/Mul"
  input: "gradients/sequential/lstm/while/mul_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_7_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/mul_7_grad/Sum"
  input: "gradients/sequential/lstm/while/mul_7_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_7_grad/Mul_1"
  op: "Mul"
  input: "gradients/sequential/lstm/while/mul_7_grad/Mul_1/StackPopV2"
  input: "gradients/sequential/lstm/while/add_5_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_7_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/clip_by_value"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_7_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/mul_7_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/clip_by_value"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_7_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/mul_7_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_7_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/mul_7_grad/Mul_1/Enter"
  input: "sequential/lstm/while/clip_by_value"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_7_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/mul_7_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_7_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/mul_7_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_7_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm/while/mul_7_grad/Mul_1"
  input: "gradients/sequential/lstm/while/mul_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_7_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/mul_7_grad/Sum_1"
  input: "gradients/sequential/lstm/while/mul_7_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm/while/mul_7_grad/Reshape"
  input: "^gradients/sequential/lstm/while/mul_7_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm/while/mul_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm/while/mul_7_grad/Reshape"
  input: "^gradients/sequential/lstm/while/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/mul_7_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/mul_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm/while/mul_7_grad/Reshape_1"
  input: "^gradients/sequential/lstm/while/mul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/mul_7_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_8_grad/Shape"
  op: "Shape"
  input: "sequential/lstm/while/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_8_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm/while/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_8_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_8_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Mul_8_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_8_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/Mul_8_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Mul_8_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_8_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/Mul_8_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_8_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/Mul_8_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm/while/Mul_8_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/Mul_8_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_8_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Mul_8_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_8_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/Mul_8_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Mul_8_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_8_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm/while/Mul_8_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_8_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/Mul_8_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm/while/Mul_8_grad/Shape_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/Mul_8_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_8_grad/Mul"
  op: "Mul"
  input: "gradients/sequential/lstm/while/Add_7_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm/while/Mul_8_grad/Mul/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_8_grad/Mul/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_8_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm/while/Mul_8_grad/Mul"
  input: "gradients/sequential/lstm/while/Mul_8_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_8_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/Mul_8_grad/Sum"
  input: "gradients/sequential/lstm/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_8_grad/Mul_1"
  op: "Mul"
  input: "gradients/sequential/lstm/while/Mul_8_grad/Mul_1/StackPopV2"
  input: "gradients/sequential/lstm/while/Add_7_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_8_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/add_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_8_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/Mul_8_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/add_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_8_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/Mul_8_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_8_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/Mul_8_grad/Mul_1/Enter"
  input: "sequential/lstm/while/add_6"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_8_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/Mul_8_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_8_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/Mul_8_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_8_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm/while/Mul_8_grad/Mul_1"
  input: "gradients/sequential/lstm/while/Mul_8_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_8_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/Mul_8_grad/Sum_1"
  input: "gradients/sequential/lstm/while/Mul_8_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_8_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm/while/Mul_8_grad/Reshape"
  input: "^gradients/sequential/lstm/while/Mul_8_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm/while/Mul_8_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm/while/Mul_8_grad/Reshape"
  input: "^gradients/sequential/lstm/while/Mul_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Mul_8_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_8_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm/while/Mul_8_grad/Reshape_1"
  input: "^gradients/sequential/lstm/while/Mul_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Mul_8_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1_grad/Shape"
  op: "Shape"
  input: "sequential/lstm/while/clip_by_value_1/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1_grad/Shape_2"
  op: "Shape"
  input: "gradients/sequential/lstm/while/mul_6_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1_grad/zeros"
  op: "Fill"
  input: "gradients/sequential/lstm/while/clip_by_value_1_grad/Shape_2"
  input: "gradients/sequential/lstm/while/clip_by_value_1_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/sequential/lstm/while/clip_by_value_1_grad/GreaterEqual/StackPopV2"
  input: "gradients/sequential/lstm/while/clip_by_value_1_grad/GreaterEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1_grad/GreaterEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1_grad/GreaterEqual/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/clip_by_value_1_grad/GreaterEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/clip_by_value_1/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1_grad/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/clip_by_value_1_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1_grad/GreaterEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/clip_by_value_1_grad/GreaterEqual/Enter"
  input: "sequential/lstm/while/clip_by_value_1/Minimum"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1_grad/GreaterEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/clip_by_value_1_grad/GreaterEqual/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1_grad/GreaterEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/clip_by_value_1_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1_grad/GreaterEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm/while/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/clip_by_value_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/clip_by_value_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/clip_by_value_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/clip_by_value_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm/while/clip_by_value_1_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/clip_by_value_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1_grad/Select"
  op: "Select"
  input: "gradients/sequential/lstm/while/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/sequential/lstm/while/mul_6_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm/while/clip_by_value_1_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm/while/clip_by_value_1_grad/Select"
  input: "gradients/sequential/lstm/while/clip_by_value_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/clip_by_value_1_grad/Sum"
  input: "gradients/sequential/lstm/while/clip_by_value_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1_grad/Select_1"
  op: "Select"
  input: "gradients/sequential/lstm/while/clip_by_value_1_grad/GreaterEqual"
  input: "gradients/sequential/lstm/while/clip_by_value_1_grad/zeros"
  input: "gradients/sequential/lstm/while/mul_6_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm/while/clip_by_value_1_grad/Select_1"
  input: "gradients/sequential/lstm/while/clip_by_value_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/clip_by_value_1_grad/Sum_1"
  input: "gradients/sequential/lstm/while/clip_by_value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm/while/clip_by_value_1_grad/Reshape"
  input: "^gradients/sequential/lstm/while/clip_by_value_1_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm/while/clip_by_value_1_grad/Reshape"
  input: "^gradients/sequential/lstm/while/clip_by_value_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/clip_by_value_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm/while/clip_by_value_1_grad/Reshape_1"
  input: "^gradients/sequential/lstm/while/clip_by_value_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/clip_by_value_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_grad/Shape"
  op: "Shape"
  input: "sequential/lstm/while/clip_by_value/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_grad/Shape_2"
  op: "Shape"
  input: "gradients/sequential/lstm/while/mul_7_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_grad/zeros"
  op: "Fill"
  input: "gradients/sequential/lstm/while/clip_by_value_grad/Shape_2"
  input: "gradients/sequential/lstm/while/clip_by_value_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_grad/GreaterEqual"
  op: "GreaterEqual"
  input: "gradients/sequential/lstm/while/clip_by_value_grad/GreaterEqual/StackPopV2"
  input: "gradients/sequential/lstm/while/clip_by_value_grad/GreaterEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_grad/GreaterEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_grad/GreaterEqual/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/clip_by_value_grad/GreaterEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/clip_by_value/Minimum"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_grad/GreaterEqual/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/clip_by_value_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_grad/GreaterEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/clip_by_value_grad/GreaterEqual/Enter"
  input: "sequential/lstm/while/clip_by_value/Minimum"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_grad/GreaterEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/clip_by_value_grad/GreaterEqual/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_grad/GreaterEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/clip_by_value_grad/GreaterEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_grad/GreaterEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm/while/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm/while/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/clip_by_value_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/clip_by_value_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/clip_by_value_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/clip_by_value_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm/while/clip_by_value_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/clip_by_value_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/clip_by_value_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_grad/Select"
  op: "Select"
  input: "gradients/sequential/lstm/while/clip_by_value_grad/GreaterEqual"
  input: "gradients/sequential/lstm/while/mul_7_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm/while/clip_by_value_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm/while/clip_by_value_grad/Select"
  input: "gradients/sequential/lstm/while/clip_by_value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/clip_by_value_grad/Sum"
  input: "gradients/sequential/lstm/while/clip_by_value_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_grad/Select_1"
  op: "Select"
  input: "gradients/sequential/lstm/while/clip_by_value_grad/GreaterEqual"
  input: "gradients/sequential/lstm/while/clip_by_value_grad/zeros"
  input: "gradients/sequential/lstm/while/mul_7_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm/while/clip_by_value_grad/Select_1"
  input: "gradients/sequential/lstm/while/clip_by_value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/clip_by_value_grad/Sum_1"
  input: "gradients/sequential/lstm/while/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm/while/clip_by_value_grad/Reshape"
  input: "^gradients/sequential/lstm/while/clip_by_value_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm/while/clip_by_value_grad/Reshape"
  input: "^gradients/sequential/lstm/while/clip_by_value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/clip_by_value_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm/while/clip_by_value_grad/Reshape_1"
  input: "^gradients/sequential/lstm/while/clip_by_value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/clip_by_value_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "gradients/sequential/lstm/while/mul_7_grad/Mul/StackPopV2"
  input: "gradients/sequential/lstm/while/mul_7_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_6_grad/Shape"
  op: "Shape"
  input: "sequential/lstm/while/BiasAdd_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_6_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm/while/MatMul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_6_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm/while/add_6_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm/while/add_6_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_6_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/add_6_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_6_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/add_6_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/add_6_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_6_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/add_6_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_6_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/add_6_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm/while/add_6_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_6_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/add_6_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_6_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/add_6_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_6_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/add_6_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_6_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/add_6_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/add_6_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_6_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm/while/add_6_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_6_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/add_6_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm/while/add_6_grad/Shape_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_6_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/add_6_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_6_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/add_6_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_6_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm/while/Mul_8_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm/while/add_6_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_6_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/add_6_grad/Sum"
  input: "gradients/sequential/lstm/while/add_6_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_6_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm/while/Mul_8_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm/while/add_6_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_6_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/add_6_grad/Sum_1"
  input: "gradients/sequential/lstm/while/add_6_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm/while/add_6_grad/Reshape"
  input: "^gradients/sequential/lstm/while/add_6_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm/while/add_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm/while/add_6_grad/Reshape"
  input: "^gradients/sequential/lstm/while/add_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/add_6_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm/while/add_6_grad/Reshape_1"
  input: "^gradients/sequential/lstm/while/add_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/add_6_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/Shape"
  op: "Shape"
  input: "sequential/lstm/while/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/sequential/lstm/while/clip_by_value_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/Shape_2"
  input: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2"
  input: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/LessEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/LessEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/Add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/LessEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/Add_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/LessEqual/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/LessEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/LessEqual/Enter"
  input: "sequential/lstm/while/Add_3"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/LessEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/LessEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/Select"
  op: "Select"
  input: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/sequential/lstm/while/clip_by_value_1_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/Select"
  input: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/Sum"
  input: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/LessEqual"
  input: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/zeros"
  input: "gradients/sequential/lstm/while/clip_by_value_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/Select_1"
  input: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/Sum_1"
  input: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/Reshape"
  input: "^gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/Reshape"
  input: "^gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/Reshape_1"
  input: "^gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Switch_3_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/sequential/lstm/while/mul_6_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/Shape"
  op: "Shape"
  input: "sequential/lstm/while/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/Shape_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/Shape_2"
  op: "Shape"
  input: "gradients/sequential/lstm/while/clip_by_value_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/zeros/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/zeros"
  op: "Fill"
  input: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/Shape_2"
  input: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/LessEqual"
  op: "LessEqual"
  input: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/LessEqual/StackPopV2"
  input: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/LessEqual/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/LessEqual/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/Add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/LessEqual/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/LessEqual/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/Add_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/LessEqual/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/LessEqual/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/LessEqual/Enter"
  input: "sequential/lstm/while/Add_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/LessEqual/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/LessEqual/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/LessEqual/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/LessEqual/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/LessEqual/Const_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/clip_by_value/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/clip_by_value/Minimum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/Select"
  op: "Select"
  input: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/sequential/lstm/while/clip_by_value_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/Select"
  input: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/Sum"
  input: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/Select_1"
  op: "Select"
  input: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/LessEqual"
  input: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/zeros"
  input: "gradients/sequential/lstm/while/clip_by_value_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/Select_1"
  input: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/Sum_1"
  input: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm/while/clip_by_value/Minimum_grad/Reshape"
  input: "^gradients/sequential/lstm/while/clip_by_value/Minimum_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/Reshape"
  input: "^gradients/sequential/lstm/while/clip_by_value/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/clip_by_value/Minimum_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/Reshape_1"
  input: "^gradients/sequential/lstm/while/clip_by_value/Minimum_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/clip_by_value/Minimum_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_4_grad/Shape"
  op: "Shape"
  input: "sequential/lstm/while/BiasAdd_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_4_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm/while/MatMul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm/while/add_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm/while/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_4_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/add_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_4_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/add_4_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/add_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_4_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/add_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_4_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/add_4_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm/while/add_4_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_4_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/add_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/add_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_4_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/add_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_4_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/add_4_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/add_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_4_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm/while/add_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_4_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/add_4_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm/while/add_4_grad/Shape_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/add_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/add_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_4_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm/while/Tanh_grad/TanhGrad"
  input: "gradients/sequential/lstm/while/add_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/add_4_grad/Sum"
  input: "gradients/sequential/lstm/while/add_4_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm/while/Tanh_grad/TanhGrad"
  input: "gradients/sequential/lstm/while/add_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/add_4_grad/Sum_1"
  input: "gradients/sequential/lstm/while/add_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm/while/add_4_grad/Reshape"
  input: "^gradients/sequential/lstm/while/add_4_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm/while/add_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm/while/add_4_grad/Reshape"
  input: "^gradients/sequential/lstm/while/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/add_4_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm/while/add_4_grad/Reshape_1"
  input: "^gradients/sequential/lstm/while/add_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/add_4_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/BiasAdd_3_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/sequential/lstm/while/add_6_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/BiasAdd_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm/while/BiasAdd_3_grad/BiasAddGrad"
  input: "^gradients/sequential/lstm/while/add_6_grad/tuple/control_dependency"
}
node {
  name: "gradients/sequential/lstm/while/BiasAdd_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm/while/add_6_grad/tuple/control_dependency"
  input: "^gradients/sequential/lstm/while/BiasAdd_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/add_6_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/BiasAdd_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm/while/BiasAdd_3_grad/BiasAddGrad"
  input: "^gradients/sequential/lstm/while/BiasAdd_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/BiasAdd_3_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_7_grad/MatMul"
  op: "MatMul"
  input: "gradients/sequential/lstm/while/add_6_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm/while/MatMul_7_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_7_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/strided_slice_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_7_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/MatMul_7_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/strided_slice_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_7_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/MatMul_7_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_7_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/MatMul_7_grad/MatMul/Enter"
  input: "sequential/lstm/while/strided_slice_3"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_7_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/MatMul_7_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_7_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/MatMul_7_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_7_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/sequential/lstm/while/MatMul_7_grad/MatMul_1/StackPopV2"
  input: "gradients/sequential/lstm/while/add_6_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_7_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_7_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/MatMul_7_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_7_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/MatMul_7_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_7_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/MatMul_7_grad/MatMul_1/Enter"
  input: "sequential/lstm/while/Identity_2"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_7_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/MatMul_7_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_7_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/MatMul_7_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm/while/MatMul_7_grad/MatMul"
  input: "^gradients/sequential/lstm/while/MatMul_7_grad/MatMul_1"
}
node {
  name: "gradients/sequential/lstm/while/MatMul_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm/while/MatMul_7_grad/MatMul"
  input: "^gradients/sequential/lstm/while/MatMul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/MatMul_7_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm/while/MatMul_7_grad/MatMul_1"
  input: "^gradients/sequential/lstm/while/MatMul_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/MatMul_7_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_3_grad/Shape"
  op: "Shape"
  input: "sequential/lstm/while/Mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_3_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm/while/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm/while/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm/while/Add_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_3_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Add_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_3_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/Add_3_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Add_3_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_3_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/Add_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_3_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/Add_3_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm/while/Add_3_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/Add_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_3_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/Add_3_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_3_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Add_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_3_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/Add_3_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Add_3_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_3_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm/while/Add_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_3_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/Add_3_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm/while/Add_3_grad/Shape_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_3_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/Add_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_3_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/Add_3_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_3_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm/while/Add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/Add_3_grad/Sum"
  input: "gradients/sequential/lstm/while/Add_3_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm/while/clip_by_value_1/Minimum_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm/while/Add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/Add_3_grad/Sum_1"
  input: "gradients/sequential/lstm/while/Add_3_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm/while/Add_3_grad/Reshape"
  input: "^gradients/sequential/lstm/while/Add_3_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm/while/Add_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm/while/Add_3_grad/Reshape"
  input: "^gradients/sequential/lstm/while/Add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Add_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm/while/Add_3_grad/Reshape_1"
  input: "^gradients/sequential/lstm/while/Add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Add_3_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_1_grad/Shape"
  op: "Shape"
  input: "sequential/lstm/while/Mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_1_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm/while/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm/while/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm/while/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_1_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_1_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/Add_1_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Add_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_1_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_1_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/Add_1_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm/while/Add_1_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_1_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/Add_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_1_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_1_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/Add_1_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Add_1_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_1_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm/while/Add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_1_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/Add_1_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm/while/Add_1_grad/Shape_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/Add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_1_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/Add_1_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_1_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm/while/Add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/Add_1_grad/Sum"
  input: "gradients/sequential/lstm/while/Add_1_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm/while/clip_by_value/Minimum_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm/while/Add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/Add_1_grad/Sum_1"
  input: "gradients/sequential/lstm/while/Add_1_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm/while/Add_1_grad/Reshape"
  input: "^gradients/sequential/lstm/while/Add_1_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm/while/Add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm/while/Add_1_grad/Reshape"
  input: "^gradients/sequential/lstm/while/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm/while/Add_1_grad/Reshape_1"
  input: "^gradients/sequential/lstm/while/Add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/BiasAdd_2_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/sequential/lstm/while/add_4_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/BiasAdd_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm/while/BiasAdd_2_grad/BiasAddGrad"
  input: "^gradients/sequential/lstm/while/add_4_grad/tuple/control_dependency"
}
node {
  name: "gradients/sequential/lstm/while/BiasAdd_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm/while/add_4_grad/tuple/control_dependency"
  input: "^gradients/sequential/lstm/while/BiasAdd_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/add_4_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/BiasAdd_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm/while/BiasAdd_2_grad/BiasAddGrad"
  input: "^gradients/sequential/lstm/while/BiasAdd_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/BiasAdd_2_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_6_grad/MatMul"
  op: "MatMul"
  input: "gradients/sequential/lstm/while/add_4_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm/while/MatMul_6_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_6_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/strided_slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_6_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/MatMul_6_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/strided_slice_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_6_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/MatMul_6_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_6_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/MatMul_6_grad/MatMul/Enter"
  input: "sequential/lstm/while/strided_slice_2"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_6_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/MatMul_6_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_6_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/MatMul_6_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_6_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/sequential/lstm/while/MatMul_7_grad/MatMul_1/StackPopV2"
  input: "gradients/sequential/lstm/while/add_4_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm/while/MatMul_6_grad/MatMul"
  input: "^gradients/sequential/lstm/while/MatMul_6_grad/MatMul_1"
}
node {
  name: "gradients/sequential/lstm/while/MatMul_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm/while/MatMul_6_grad/MatMul"
  input: "^gradients/sequential/lstm/while/MatMul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/MatMul_6_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm/while/MatMul_6_grad/MatMul_1"
  input: "^gradients/sequential/lstm/while/MatMul_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/MatMul_6_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_3_grad/MatMul"
  op: "MatMul"
  input: "gradients/sequential/lstm/while/BiasAdd_3_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm/while/MatMul_3_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_3_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_3_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/MatMul_3_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_3_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/MatMul_3_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_3_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/MatMul_3_grad/MatMul/Enter"
  input: "sequential/lstm/while/split:3"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_3_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/MatMul_3_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_3_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/MatMul_3_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_3_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/sequential/lstm/while/MatMul_3_grad/MatMul_1/StackPopV2"
  input: "gradients/sequential/lstm/while/BiasAdd_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_3_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/mul_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_3_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/MatMul_3_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/mul_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_3_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/MatMul_3_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_3_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/MatMul_3_grad/MatMul_1/Enter"
  input: "sequential/lstm/while/mul_3"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_3_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/MatMul_3_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_3_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/MatMul_3_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm/while/MatMul_3_grad/MatMul"
  input: "^gradients/sequential/lstm/while/MatMul_3_grad/MatMul_1"
}
node {
  name: "gradients/sequential/lstm/while/MatMul_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm/while/MatMul_3_grad/MatMul"
  input: "^gradients/sequential/lstm/while/MatMul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/MatMul_3_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm/while/MatMul_3_grad/MatMul_1"
  input: "^gradients/sequential/lstm/while/MatMul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/MatMul_3_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/strided_slice_3_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/strided_slice_3_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/sequential/lstm/while/strided_slice_3_grad/Shape"
  input: "gradients/sequential/lstm/while/strided_slice_3_grad/StridedSliceGrad/Const"
  input: "gradients/sequential/lstm/while/strided_slice_3_grad/StridedSliceGrad/Const_1"
  input: "gradients/sequential/lstm/while/strided_slice_3_grad/StridedSliceGrad/Const_2"
  input: "gradients/sequential/lstm/while/MatMul_7_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/strided_slice_3_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\211\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/strided_slice_3_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/strided_slice_3_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_5_grad/Shape"
  op: "Shape"
  input: "sequential/lstm/while/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_5_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm/while/Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_5_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_5_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Mul_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_5_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/Mul_5_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Mul_5_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_5_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/Mul_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_5_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/Mul_5_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm/while/Mul_5_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/Mul_5_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_5_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Mul_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_5_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/Mul_5_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Mul_5_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_5_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm/while/Mul_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_5_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/Mul_5_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm/while/Mul_5_grad/Shape_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/Mul_5_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_5_grad/Mul"
  op: "Mul"
  input: "gradients/sequential/lstm/while/Add_3_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm/while/Mul_5_grad/Mul/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_5_grad/Mul/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_5_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm/while/Mul_5_grad/Mul"
  input: "gradients/sequential/lstm/while/Mul_5_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_5_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/Mul_5_grad/Sum"
  input: "gradients/sequential/lstm/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_5_grad/Mul_1"
  op: "Mul"
  input: "gradients/sequential/lstm/while/Mul_5_grad/Mul_1/StackPopV2"
  input: "gradients/sequential/lstm/while/Add_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_5_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_5_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/Mul_5_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/add_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_5_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/Mul_5_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_5_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/Mul_5_grad/Mul_1/Enter"
  input: "sequential/lstm/while/add_2"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_5_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/Mul_5_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_5_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/Mul_5_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_5_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm/while/Mul_5_grad/Mul_1"
  input: "gradients/sequential/lstm/while/Mul_5_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_5_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/Mul_5_grad/Sum_1"
  input: "gradients/sequential/lstm/while/Mul_5_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm/while/Mul_5_grad/Reshape"
  input: "^gradients/sequential/lstm/while/Mul_5_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm/while/Mul_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm/while/Mul_5_grad/Reshape"
  input: "^gradients/sequential/lstm/while/Mul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Mul_5_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm/while/Mul_5_grad/Reshape_1"
  input: "^gradients/sequential/lstm/while/Mul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Mul_5_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_4_grad/Shape"
  op: "Shape"
  input: "sequential/lstm/while/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_4_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm/while/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_4_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_4_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Mul_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_4_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/Mul_4_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Mul_4_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_4_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/Mul_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_4_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/Mul_4_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm/while/Mul_4_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/Mul_4_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_4_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Mul_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_4_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/Mul_4_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Mul_4_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_4_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm/while/Mul_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_4_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/Mul_4_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm/while/Mul_4_grad/Shape_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/Mul_4_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_4_grad/Mul"
  op: "Mul"
  input: "gradients/sequential/lstm/while/Add_1_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm/while/Mul_4_grad/Mul/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_4_grad/Mul/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298023224
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_4_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm/while/Mul_4_grad/Mul"
  input: "gradients/sequential/lstm/while/Mul_4_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_4_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/Mul_4_grad/Sum"
  input: "gradients/sequential/lstm/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_4_grad/Mul_1"
  op: "Mul"
  input: "gradients/sequential/lstm/while/Mul_4_grad/Mul_1/StackPopV2"
  input: "gradients/sequential/lstm/while/Add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_4_grad/Mul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_4_grad/Mul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/Mul_4_grad/Mul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_4_grad/Mul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/Mul_4_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_4_grad/Mul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/Mul_4_grad/Mul_1/Enter"
  input: "sequential/lstm/while/add"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_4_grad/Mul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/Mul_4_grad/Mul_1/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_4_grad/Mul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/Mul_4_grad/Mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_4_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm/while/Mul_4_grad/Mul_1"
  input: "gradients/sequential/lstm/while/Mul_4_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_4_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/Mul_4_grad/Sum_1"
  input: "gradients/sequential/lstm/while/Mul_4_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm/while/Mul_4_grad/Reshape"
  input: "^gradients/sequential/lstm/while/Mul_4_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm/while/Mul_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm/while/Mul_4_grad/Reshape"
  input: "^gradients/sequential/lstm/while/Mul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Mul_4_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Mul_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm/while/Mul_4_grad/Reshape_1"
  input: "^gradients/sequential/lstm/while/Mul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/Mul_4_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_2_grad/MatMul"
  op: "MatMul"
  input: "gradients/sequential/lstm/while/BiasAdd_2_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm/while/MatMul_2_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_2_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_2_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/MatMul_2_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_2_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/MatMul_2_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_2_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/MatMul_2_grad/MatMul/Enter"
  input: "sequential/lstm/while/split:2"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_2_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/MatMul_2_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_2_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/MatMul_2_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_2_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/sequential/lstm/while/MatMul_2_grad/MatMul_1/StackPopV2"
  input: "gradients/sequential/lstm/while/BiasAdd_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_2_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_2_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/MatMul_2_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/mul_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_2_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/MatMul_2_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_2_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/MatMul_2_grad/MatMul_1/Enter"
  input: "sequential/lstm/while/mul_2"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_2_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/MatMul_2_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_2_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/MatMul_2_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm/while/MatMul_2_grad/MatMul"
  input: "^gradients/sequential/lstm/while/MatMul_2_grad/MatMul_1"
}
node {
  name: "gradients/sequential/lstm/while/MatMul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm/while/MatMul_2_grad/MatMul"
  input: "^gradients/sequential/lstm/while/MatMul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/MatMul_2_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm/while/MatMul_2_grad/MatMul_1"
  input: "^gradients/sequential/lstm/while/MatMul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/MatMul_2_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/strided_slice_2_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/strided_slice_2_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/sequential/lstm/while/strided_slice_2_grad/Shape"
  input: "gradients/sequential/lstm/while/strided_slice_2_grad/StridedSliceGrad/Const"
  input: "gradients/sequential/lstm/while/strided_slice_2_grad/StridedSliceGrad/Const_1"
  input: "gradients/sequential/lstm/while/strided_slice_2_grad/StridedSliceGrad/Const_2"
  input: "gradients/sequential/lstm/while/MatMul_6_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/strided_slice_2_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\006\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/strided_slice_2_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\211\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/strided_slice_2_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_2_grad/Shape"
  op: "Shape"
  input: "sequential/lstm/while/BiasAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_2_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm/while/MatMul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm/while/add_2_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm/while/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_2_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_2_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/add_2_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/add_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_2_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_2_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/add_2_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm/while/add_2_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_2_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_2_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/add_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_2_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/add_2_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/add_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_2_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm/while/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_2_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/add_2_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm/while/add_2_grad/Shape_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_2_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/add_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm/while/Mul_5_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm/while/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/add_2_grad/Sum"
  input: "gradients/sequential/lstm/while/add_2_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm/while/Mul_5_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm/while/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/add_2_grad/Sum_1"
  input: "gradients/sequential/lstm/while/add_2_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm/while/add_2_grad/Reshape"
  input: "^gradients/sequential/lstm/while/add_2_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm/while/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm/while/add_2_grad/Reshape"
  input: "^gradients/sequential/lstm/while/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/add_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm/while/add_2_grad/Reshape_1"
  input: "^gradients/sequential/lstm/while/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/add_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_grad/Shape"
  op: "Shape"
  input: "sequential/lstm/while/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_grad/Shape_1"
  op: "Shape"
  input: "sequential/lstm/while/MatMul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/sequential/lstm/while/add_grad/BroadcastGradientArgs/StackPopV2"
  input: "gradients/sequential/lstm/while/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_grad/BroadcastGradientArgs/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_grad/BroadcastGradientArgs/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/add_grad/BroadcastGradientArgs/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_grad/BroadcastGradientArgs/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_grad/BroadcastGradientArgs/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/add_grad/BroadcastGradientArgs/Enter"
  input: "gradients/sequential/lstm/while/add_grad/Shape"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_grad/BroadcastGradientArgs/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_grad/BroadcastGradientArgs/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_grad/BroadcastGradientArgs/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_grad/BroadcastGradientArgs/f_acc_1"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/add_grad/BroadcastGradientArgs/Const_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_grad/BroadcastGradientArgs/Enter_1"
  op: "Enter"
  input: "gradients/sequential/lstm/while/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_grad/BroadcastGradientArgs/StackPushV2_1"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/add_grad/BroadcastGradientArgs/Enter_1"
  input: "gradients/sequential/lstm/while/add_grad/Shape_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_grad/BroadcastGradientArgs/StackPopV2_1"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_grad/BroadcastGradientArgs/StackPopV2_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_grad/Sum"
  op: "Sum"
  input: "gradients/sequential/lstm/while/Mul_4_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm/while/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/add_grad/Sum"
  input: "gradients/sequential/lstm/while/add_grad/BroadcastGradientArgs/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/sequential/lstm/while/Mul_4_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm/while/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/sequential/lstm/while/add_grad/Sum_1"
  input: "gradients/sequential/lstm/while/add_grad/BroadcastGradientArgs/StackPopV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm/while/add_grad/Reshape"
  input: "^gradients/sequential/lstm/while/add_grad/Reshape_1"
}
node {
  name: "gradients/sequential/lstm/while/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm/while/add_grad/Reshape"
  input: "^gradients/sequential/lstm/while/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm/while/add_grad/Reshape_1"
  input: "^gradients/sequential/lstm/while/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/BiasAdd_1_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/sequential/lstm/while/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/BiasAdd_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm/while/BiasAdd_1_grad/BiasAddGrad"
  input: "^gradients/sequential/lstm/while/add_2_grad/tuple/control_dependency"
}
node {
  name: "gradients/sequential/lstm/while/BiasAdd_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm/while/add_2_grad/tuple/control_dependency"
  input: "^gradients/sequential/lstm/while/BiasAdd_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/add_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/BiasAdd_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm/while/BiasAdd_1_grad/BiasAddGrad"
  input: "^gradients/sequential/lstm/while/BiasAdd_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/BiasAdd_1_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_5_grad/MatMul"
  op: "MatMul"
  input: "gradients/sequential/lstm/while/add_2_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm/while/MatMul_5_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_5_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/strided_slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_5_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/MatMul_5_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/strided_slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_5_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/MatMul_5_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_5_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/MatMul_5_grad/MatMul/Enter"
  input: "sequential/lstm/while/strided_slice_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_5_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/MatMul_5_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_5_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/MatMul_5_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_5_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/sequential/lstm/while/MatMul_7_grad/MatMul_1/StackPopV2"
  input: "gradients/sequential/lstm/while/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_5_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm/while/MatMul_5_grad/MatMul"
  input: "^gradients/sequential/lstm/while/MatMul_5_grad/MatMul_1"
}
node {
  name: "gradients/sequential/lstm/while/MatMul_5_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm/while/MatMul_5_grad/MatMul"
  input: "^gradients/sequential/lstm/while/MatMul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/MatMul_5_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_5_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm/while/MatMul_5_grad/MatMul_1"
  input: "^gradients/sequential/lstm/while/MatMul_5_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/MatMul_5_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/sequential/lstm/while/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm/while/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/sequential/lstm/while/add_grad/tuple/control_dependency"
}
node {
  name: "gradients/sequential/lstm/while/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm/while/add_grad/tuple/control_dependency"
  input: "^gradients/sequential/lstm/while/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm/while/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/sequential/lstm/while/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_4_grad/MatMul"
  op: "MatMul"
  input: "gradients/sequential/lstm/while/add_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm/while/MatMul_4_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_4_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_4_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/MatMul_4_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/strided_slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_4_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/MatMul_4_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_4_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/MatMul_4_grad/MatMul/Enter"
  input: "sequential/lstm/while/strided_slice"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_4_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/MatMul_4_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_4_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/MatMul_4_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_4_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/sequential/lstm/while/MatMul_7_grad/MatMul_1/StackPopV2"
  input: "gradients/sequential/lstm/while/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_4_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm/while/MatMul_4_grad/MatMul"
  input: "^gradients/sequential/lstm/while/MatMul_4_grad/MatMul_1"
}
node {
  name: "gradients/sequential/lstm/while/MatMul_4_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm/while/MatMul_4_grad/MatMul"
  input: "^gradients/sequential/lstm/while/MatMul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/MatMul_4_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_4_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm/while/MatMul_4_grad/MatMul_1"
  input: "^gradients/sequential/lstm/while/MatMul_4_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/MatMul_4_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/sequential/lstm/while/BiasAdd_1_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm/while/MatMul_1_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_1_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_1_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/MatMul_1_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_1_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/MatMul_1_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_1_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/MatMul_1_grad/MatMul/Enter"
  input: "sequential/lstm/while/split:1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_1_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/MatMul_1_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_1_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/MatMul_1_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/sequential/lstm/while/MatMul_1_grad/MatMul_1/StackPopV2"
  input: "gradients/sequential/lstm/while/BiasAdd_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_1_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_1_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/MatMul_1_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_1_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_1_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/MatMul_1_grad/MatMul_1/Enter"
  input: "sequential/lstm/while/mul_1"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_1_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/MatMul_1_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm/while/MatMul_1_grad/MatMul"
  input: "^gradients/sequential/lstm/while/MatMul_1_grad/MatMul_1"
}
node {
  name: "gradients/sequential/lstm/while/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm/while/MatMul_1_grad/MatMul"
  input: "^gradients/sequential/lstm/while/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm/while/MatMul_1_grad/MatMul_1"
  input: "^gradients/sequential/lstm/while/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/MatMul_1_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/strided_slice_1_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/sequential/lstm/while/strided_slice_1_grad/Shape"
  input: "gradients/sequential/lstm/while/strided_slice_1_grad/StridedSliceGrad/Const"
  input: "gradients/sequential/lstm/while/strided_slice_1_grad/StridedSliceGrad/Const_1"
  input: "gradients/sequential/lstm/while/strided_slice_1_grad/StridedSliceGrad/Const_2"
  input: "gradients/sequential/lstm/while/MatMul_5_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/strided_slice_1_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\203\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/strided_slice_1_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\006\001\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/strided_slice_1_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/sequential/lstm/while/BiasAdd_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm/while/MatMul_grad/MatMul/StackPopV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_grad/MatMul/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_grad/MatMul/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/MatMul_grad/MatMul/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_grad/MatMul/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/MatMul_grad/MatMul/Enter"
  input: "sequential/lstm/while/split"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_grad/MatMul/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/MatMul_grad/MatMul/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_grad/MatMul/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "gradients/sequential/lstm/while/MatMul_grad/MatMul_1/StackPopV2"
  input: "gradients/sequential/lstm/while/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_grad/MatMul_1/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_grad/MatMul_1/f_acc"
  op: "StackV2"
  input: "gradients/sequential/lstm/while/MatMul_grad/MatMul_1/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/while/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_grad/MatMul_1/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_grad/MatMul_1/StackPushV2"
  op: "StackPushV2"
  input: "gradients/sequential/lstm/while/MatMul_grad/MatMul_1/Enter"
  input: "sequential/lstm/while/mul"
  input: "^gradients/Add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_grad/MatMul_1/StackPopV2"
  op: "StackPopV2"
  input: "gradients/sequential/lstm/while/MatMul_grad/MatMul_1/StackPopV2/Enter"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_grad/MatMul_1/StackPopV2/Enter"
  op: "Enter"
  input: "gradients/sequential/lstm/while/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/sequential/lstm/while/MatMul_grad/MatMul"
  input: "^gradients/sequential/lstm/while/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/sequential/lstm/while/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/sequential/lstm/while/MatMul_grad/MatMul"
  input: "^gradients/sequential/lstm/while/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/sequential/lstm/while/MatMul_grad/MatMul_1"
  input: "^gradients/sequential/lstm/while/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/split_1_grad/concat"
  op: "ConcatV2"
  input: "gradients/sequential/lstm/while/BiasAdd_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm/while/BiasAdd_1_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm/while/BiasAdd_2_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm/while/BiasAdd_3_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm/while/split_1_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/split_1_grad/concat/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/AddN_18"
  op: "AddN"
  input: "gradients/sequential/lstm/while/MatMul_7_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm/while/MatMul_6_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm/while/MatMul_5_grad/tuple/control_dependency"
  input: "gradients/sequential/lstm/while/MatMul_4_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/MatMul_7_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/strided_slice_grad/Shape"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/strided_slice_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "gradients/sequential/lstm/while/strided_slice_grad/Shape"
  input: "gradients/sequential/lstm/while/strided_slice_grad/StridedSliceGrad/Const"
  input: "gradients/sequential/lstm/while/strided_slice_grad/StridedSliceGrad/Const_1"
  input: "gradients/sequential/lstm/while/strided_slice_grad/StridedSliceGrad/Const_2"
  input: "gradients/sequential/lstm/while/MatMul_4_grad/tuple/control_dependency_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/strided_slice_grad/StridedSliceGrad/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/strided_slice_grad/StridedSliceGrad/Const_1"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\203\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/strided_slice_grad/StridedSliceGrad/Const_2"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/split_grad/concat"
  op: "ConcatV2"
  input: "gradients/sequential/lstm/while/MatMul_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm/while/MatMul_1_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm/while/MatMul_2_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm/while/MatMul_3_grad/tuple/control_dependency_1"
  input: "gradients/sequential/lstm/while/split_grad/concat/Const"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/split_grad/concat/Const"
  op: "Const"
  input: "^gradients/Sub_3"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "gradients/AddN_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 131
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/split_1/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 524
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/split_1/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/sequential/lstm/while/split_1/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/split_1/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/sequential/lstm/while/split_1/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/sequential/lstm/while/split_1/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/split_1/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/sequential/lstm/while/split_1/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/split_1/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/sequential/lstm/while/split_1/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/sequential/lstm/while/split_1_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/split_1/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/sequential/lstm/while/split_1/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/split_1/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/sequential/lstm/while/split_1/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/AddN_19"
  op: "AddN"
  input: "gradients/sequential/lstm/while/strided_slice_3_grad/StridedSliceGrad"
  input: "gradients/sequential/lstm/while/strided_slice_2_grad/StridedSliceGrad"
  input: "gradients/sequential/lstm/while/strided_slice_1_grad/StridedSliceGrad"
  input: "gradients/sequential/lstm/while/strided_slice_grad/StridedSliceGrad"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/sequential/lstm/while/strided_slice_3_grad/StridedSliceGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/sequential/lstm/while/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/sequential/lstm/while/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/sequential/lstm/while/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/sequential/lstm/while/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/sequential/lstm/while/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/AddN_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/sequential/lstm/while/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/sequential/lstm/while/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/split/ReadVariableOp/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 524
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/split/ReadVariableOp/Enter_grad/b_acc_1"
  op: "Enter"
  input: "gradients/sequential/lstm/while/split/ReadVariableOp/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "gradients/sequential/lstm/while/while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/split/ReadVariableOp/Enter_grad/b_acc_2"
  op: "Merge"
  input: "gradients/sequential/lstm/while/split/ReadVariableOp/Enter_grad/b_acc_1"
  input: "gradients/sequential/lstm/while/split/ReadVariableOp/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 524
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/split/ReadVariableOp/Enter_grad/Switch"
  op: "Switch"
  input: "gradients/sequential/lstm/while/split/ReadVariableOp/Enter_grad/b_acc_2"
  input: "gradients/b_count_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 524
          }
        }
        shape {
          dim {
            size: 1
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/split/ReadVariableOp/Enter_grad/Add"
  op: "Add"
  input: "gradients/sequential/lstm/while/split/ReadVariableOp/Enter_grad/Switch:1"
  input: "gradients/sequential/lstm/while/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/split/ReadVariableOp/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "gradients/sequential/lstm/while/split/ReadVariableOp/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "gradients/sequential/lstm/while/split/ReadVariableOp/Enter_grad/b_acc_3"
  op: "Exit"
  input: "gradients/sequential/lstm/while/split/ReadVariableOp/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
}
node {
  name: "beta1_power/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "beta1_power"
    }
  }
}
node {
  name: "beta1_power/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "AssignVariableOp"
  input: "beta1_power"
  input: "beta1_power/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta1_power/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "beta2_power"
    }
  }
}
node {
  name: "beta2_power/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "AssignVariableOp"
  input: "beta2_power"
  input: "beta2_power/Initializer/initial_value"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta2_power/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 524
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 524
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/lstm/kernel/Adam"
    }
  }
}
node {
  name: "sequential/lstm/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "sequential/lstm/kernel/Adam"
  input: "sequential/lstm/kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 524
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 524
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/lstm/kernel/Adam_1"
    }
  }
}
node {
  name: "sequential/lstm/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "sequential/lstm/kernel/Adam_1"
  input: "sequential/lstm/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm/recurrent_kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm/recurrent_kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm/recurrent_kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "sequential/lstm/recurrent_kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "sequential/lstm/recurrent_kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm/recurrent_kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 131
        }
        dim {
          size: 524
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/lstm/recurrent_kernel/Adam"
    }
  }
}
node {
  name: "sequential/lstm/recurrent_kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm/recurrent_kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/recurrent_kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "sequential/lstm/recurrent_kernel/Adam"
  input: "sequential/lstm/recurrent_kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm/recurrent_kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm/recurrent_kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm/recurrent_kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm/recurrent_kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm/recurrent_kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "sequential/lstm/recurrent_kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "sequential/lstm/recurrent_kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm/recurrent_kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 131
        }
        dim {
          size: 524
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/lstm/recurrent_kernel/Adam_1"
    }
  }
}
node {
  name: "sequential/lstm/recurrent_kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm/recurrent_kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/recurrent_kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "sequential/lstm/recurrent_kernel/Adam_1"
  input: "sequential/lstm/recurrent_kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm/recurrent_kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm/recurrent_kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 524
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 524
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/lstm/bias/Adam"
    }
  }
}
node {
  name: "sequential/lstm/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "sequential/lstm/bias/Adam"
  input: "sequential/lstm/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 524
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 524
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/lstm/bias/Adam_1"
    }
  }
}
node {
  name: "sequential/lstm/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "sequential/lstm/bias/Adam_1"
  input: "sequential/lstm/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "sequential/lstm_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "sequential/lstm_1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_1/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 131
        }
        dim {
          size: 524
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/lstm_1/kernel/Adam"
    }
  }
}
node {
  name: "sequential/lstm_1/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "sequential/lstm_1/kernel/Adam"
  input: "sequential/lstm_1/kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_1/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "sequential/lstm_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "sequential/lstm_1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_1/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 131
        }
        dim {
          size: 524
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/lstm_1/kernel/Adam_1"
    }
  }
}
node {
  name: "sequential/lstm_1/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "sequential/lstm_1/kernel/Adam_1"
  input: "sequential/lstm_1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_1/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_1/recurrent_kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_1/recurrent_kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/recurrent_kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "sequential/lstm_1/recurrent_kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "sequential/lstm_1/recurrent_kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_1/recurrent_kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 131
        }
        dim {
          size: 524
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/lstm_1/recurrent_kernel/Adam"
    }
  }
}
node {
  name: "sequential/lstm_1/recurrent_kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_1/recurrent_kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/recurrent_kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "sequential/lstm_1/recurrent_kernel/Adam"
  input: "sequential/lstm_1/recurrent_kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_1/recurrent_kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_1/recurrent_kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_1/recurrent_kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_1/recurrent_kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/recurrent_kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "sequential/lstm_1/recurrent_kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "sequential/lstm_1/recurrent_kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_1/recurrent_kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 131
        }
        dim {
          size: 524
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/lstm_1/recurrent_kernel/Adam_1"
    }
  }
}
node {
  name: "sequential/lstm_1/recurrent_kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_1/recurrent_kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/recurrent_kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "sequential/lstm_1/recurrent_kernel/Adam_1"
  input: "sequential/lstm_1/recurrent_kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_1/recurrent_kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_1/recurrent_kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 524
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 524
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/lstm_1/bias/Adam"
    }
  }
}
node {
  name: "sequential/lstm_1/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "sequential/lstm_1/bias/Adam"
  input: "sequential/lstm_1/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_1/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 524
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_1/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 524
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/lstm_1/bias/Adam_1"
    }
  }
}
node {
  name: "sequential/lstm_1/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_1/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "sequential/lstm_1/bias/Adam_1"
  input: "sequential/lstm_1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_1/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "sequential/lstm_2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "sequential/lstm_2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_2/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 131
        }
        dim {
          size: 524
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/lstm_2/kernel/Adam"
    }
  }
}
node {
  name: "sequential/lstm_2/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "sequential/lstm_2/kernel/Adam"
  input: "sequential/lstm_2/kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_2/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "sequential/lstm_2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "sequential/lstm_2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_2/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 131
        }
        dim {
          size: 524
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/lstm_2/kernel/Adam_1"
    }
  }
}
node {
  name: "sequential/lstm_2/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "sequential/lstm_2/kernel/Adam_1"
  input: "sequential/lstm_2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_2/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_2/recurrent_kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_2/recurrent_kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/recurrent_kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "sequential/lstm_2/recurrent_kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "sequential/lstm_2/recurrent_kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_2/recurrent_kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 131
        }
        dim {
          size: 524
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/lstm_2/recurrent_kernel/Adam"
    }
  }
}
node {
  name: "sequential/lstm_2/recurrent_kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_2/recurrent_kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/recurrent_kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "sequential/lstm_2/recurrent_kernel/Adam"
  input: "sequential/lstm_2/recurrent_kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_2/recurrent_kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_2/recurrent_kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_2/recurrent_kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_2/recurrent_kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/recurrent_kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "sequential/lstm_2/recurrent_kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "sequential/lstm_2/recurrent_kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_2/recurrent_kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 131
        }
        dim {
          size: 524
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/lstm_2/recurrent_kernel/Adam_1"
    }
  }
}
node {
  name: "sequential/lstm_2/recurrent_kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_2/recurrent_kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/recurrent_kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "sequential/lstm_2/recurrent_kernel/Adam_1"
  input: "sequential/lstm_2/recurrent_kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_2/recurrent_kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_2/recurrent_kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 524
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 524
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/lstm_2/bias/Adam"
    }
  }
}
node {
  name: "sequential/lstm_2/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "sequential/lstm_2/bias/Adam"
  input: "sequential/lstm_2/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_2/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 524
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_2/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 524
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/lstm_2/bias/Adam_1"
    }
  }
}
node {
  name: "sequential/lstm_2/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_2/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "sequential/lstm_2/bias/Adam_1"
  input: "sequential/lstm_2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_2/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_3/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_3/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "sequential/lstm_3/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "sequential/lstm_3/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_3/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 131
        }
        dim {
          size: 524
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/lstm_3/kernel/Adam"
    }
  }
}
node {
  name: "sequential/lstm_3/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_3/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "sequential/lstm_3/kernel/Adam"
  input: "sequential/lstm_3/kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_3/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_3/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_3/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_3/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "sequential/lstm_3/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "sequential/lstm_3/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_3/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 131
        }
        dim {
          size: 524
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/lstm_3/kernel/Adam_1"
    }
  }
}
node {
  name: "sequential/lstm_3/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_3/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "sequential/lstm_3/kernel/Adam_1"
  input: "sequential/lstm_3/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_3/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_3/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_3/recurrent_kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_3/recurrent_kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/recurrent_kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "sequential/lstm_3/recurrent_kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "sequential/lstm_3/recurrent_kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_3/recurrent_kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 131
        }
        dim {
          size: 524
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/lstm_3/recurrent_kernel/Adam"
    }
  }
}
node {
  name: "sequential/lstm_3/recurrent_kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_3/recurrent_kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/recurrent_kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "sequential/lstm_3/recurrent_kernel/Adam"
  input: "sequential/lstm_3/recurrent_kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_3/recurrent_kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_3/recurrent_kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_3/recurrent_kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\203\000\000\000\014\002\000\000"
      }
    }
  }
}
node {
  name: "sequential/lstm_3/recurrent_kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/recurrent_kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "sequential/lstm_3/recurrent_kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "sequential/lstm_3/recurrent_kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/lstm_3/recurrent_kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 131
        }
        dim {
          size: 524
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/lstm_3/recurrent_kernel/Adam_1"
    }
  }
}
node {
  name: "sequential/lstm_3/recurrent_kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_3/recurrent_kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/recurrent_kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "sequential/lstm_3/recurrent_kernel/Adam_1"
  input: "sequential/lstm_3/recurrent_kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_3/recurrent_kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_3/recurrent_kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/recurrent_kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 131
          }
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_3/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 524
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 524
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/lstm_3/bias/Adam"
    }
  }
}
node {
  name: "sequential/lstm_3/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_3/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "sequential/lstm_3/bias/Adam"
  input: "sequential/lstm_3/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_3/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_3/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_3/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 524
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/lstm_3/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 524
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/lstm_3/bias/Adam_1"
    }
  }
}
node {
  name: "sequential/lstm_3/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_3/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/lstm_3/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "sequential/lstm_3/bias/Adam_1"
  input: "sequential/lstm_3/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/lstm_3/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/lstm_3/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 524
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/dense/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\217\002\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/dense/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/dense/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "sequential/dense/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "sequential/dense/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 655
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/dense/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 655
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/dense/kernel/Adam"
    }
  }
}
node {
  name: "sequential/dense/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/dense/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/dense/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "sequential/dense/kernel/Adam"
  input: "sequential/dense/kernel/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/dense/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/dense/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 655
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/dense/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\217\002\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "sequential/dense/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/dense/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "sequential/dense/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "sequential/dense/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 655
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential/dense/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 655
        }
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/dense/kernel/Adam_1"
    }
  }
}
node {
  name: "sequential/dense/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/dense/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/dense/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "sequential/dense/kernel/Adam_1"
  input: "sequential/dense/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/dense/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/dense/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 655
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/dense/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/dense/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/dense/bias/Adam"
    }
  }
}
node {
  name: "sequential/dense/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/dense/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/dense/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "sequential/dense/bias/Adam"
  input: "sequential/dense/bias/Adam/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/dense/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/dense/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/dense/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 8
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "sequential/dense/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 8
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "sequential/dense/bias/Adam_1"
    }
  }
}
node {
  name: "sequential/dense/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/dense/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "sequential/dense/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "sequential/dense/bias/Adam_1"
  input: "sequential/dense/bias/Adam_1/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "sequential/dense/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "sequential/dense/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 8.172899833880365e-05
      }
    }
  }
}
node {
  name: "Adam/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Adam/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "Adam/update_sequential/lstm/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_sequential/lstm/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_sequential/lstm/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "sequential/lstm/kernel"
  input: "sequential/lstm/kernel/Adam"
  input: "sequential/lstm/kernel/Adam_1"
  input: "Adam/update_sequential/lstm/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_sequential/lstm/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/sequential/lstm/while/split/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_sequential/lstm/recurrent_kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_sequential/lstm/recurrent_kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_sequential/lstm/recurrent_kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "sequential/lstm/recurrent_kernel"
  input: "sequential/lstm/recurrent_kernel/Adam"
  input: "sequential/lstm/recurrent_kernel/Adam_1"
  input: "Adam/update_sequential/lstm/recurrent_kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_sequential/lstm/recurrent_kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/sequential/lstm/while/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/recurrent_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_sequential/lstm/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_sequential/lstm/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_sequential/lstm/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "sequential/lstm/bias"
  input: "sequential/lstm/bias/Adam"
  input: "sequential/lstm/bias/Adam_1"
  input: "Adam/update_sequential/lstm/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_sequential/lstm/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/sequential/lstm/while/split_1/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_sequential/lstm_1/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_sequential/lstm_1/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_sequential/lstm_1/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "sequential/lstm_1/kernel"
  input: "sequential/lstm_1/kernel/Adam"
  input: "sequential/lstm_1/kernel/Adam_1"
  input: "Adam/update_sequential/lstm_1/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_sequential/lstm_1/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/sequential/lstm_1/while/split/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_sequential/lstm_1/recurrent_kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_sequential/lstm_1/recurrent_kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_sequential/lstm_1/recurrent_kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "sequential/lstm_1/recurrent_kernel"
  input: "sequential/lstm_1/recurrent_kernel/Adam"
  input: "sequential/lstm_1/recurrent_kernel/Adam_1"
  input: "Adam/update_sequential/lstm_1/recurrent_kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_sequential/lstm_1/recurrent_kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/sequential/lstm_1/while/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/recurrent_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_sequential/lstm_1/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_sequential/lstm_1/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_sequential/lstm_1/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "sequential/lstm_1/bias"
  input: "sequential/lstm_1/bias/Adam"
  input: "sequential/lstm_1/bias/Adam_1"
  input: "Adam/update_sequential/lstm_1/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_sequential/lstm_1/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/sequential/lstm_1/while/split_1/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_sequential/lstm_2/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_sequential/lstm_2/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_sequential/lstm_2/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "sequential/lstm_2/kernel"
  input: "sequential/lstm_2/kernel/Adam"
  input: "sequential/lstm_2/kernel/Adam_1"
  input: "Adam/update_sequential/lstm_2/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_sequential/lstm_2/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/sequential/lstm_2/while/split/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_sequential/lstm_2/recurrent_kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_sequential/lstm_2/recurrent_kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_sequential/lstm_2/recurrent_kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "sequential/lstm_2/recurrent_kernel"
  input: "sequential/lstm_2/recurrent_kernel/Adam"
  input: "sequential/lstm_2/recurrent_kernel/Adam_1"
  input: "Adam/update_sequential/lstm_2/recurrent_kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_sequential/lstm_2/recurrent_kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/sequential/lstm_2/while/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/recurrent_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_sequential/lstm_2/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_sequential/lstm_2/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_sequential/lstm_2/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "sequential/lstm_2/bias"
  input: "sequential/lstm_2/bias/Adam"
  input: "sequential/lstm_2/bias/Adam_1"
  input: "Adam/update_sequential/lstm_2/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_sequential/lstm_2/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/sequential/lstm_2/while/split_1/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_sequential/lstm_3/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_sequential/lstm_3/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_sequential/lstm_3/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "sequential/lstm_3/kernel"
  input: "sequential/lstm_3/kernel/Adam"
  input: "sequential/lstm_3/kernel/Adam_1"
  input: "Adam/update_sequential/lstm_3/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_sequential/lstm_3/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/sequential/lstm_3/while/split/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_sequential/lstm_3/recurrent_kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_sequential/lstm_3/recurrent_kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_sequential/lstm_3/recurrent_kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "sequential/lstm_3/recurrent_kernel"
  input: "sequential/lstm_3/recurrent_kernel/Adam"
  input: "sequential/lstm_3/recurrent_kernel/Adam_1"
  input: "Adam/update_sequential/lstm_3/recurrent_kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_sequential/lstm_3/recurrent_kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/sequential/lstm_3/while/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/recurrent_kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_sequential/lstm_3/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_sequential/lstm_3/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_sequential/lstm_3/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "sequential/lstm_3/bias"
  input: "sequential/lstm_3/bias/Adam"
  input: "sequential/lstm_3/bias/Adam_1"
  input: "Adam/update_sequential/lstm_3/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_sequential/lstm_3/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/sequential/lstm_3/while/split_1/ReadVariableOp/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/lstm_3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_sequential/dense/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_sequential/dense/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_sequential/dense/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "sequential/dense/kernel"
  input: "sequential/dense/kernel/Adam"
  input: "sequential/dense/kernel/Adam_1"
  input: "Adam/update_sequential/dense/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_sequential/dense/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/sequential/dense/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_sequential/dense/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_sequential/dense/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update_sequential/dense/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "sequential/dense/bias"
  input: "sequential/dense/bias/Adam"
  input: "sequential/dense/bias/Adam_1"
  input: "Adam/update_sequential/dense/bias/ResourceApplyAdam/ReadVariableOp"
  input: "Adam/update_sequential/dense/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/sequential/dense/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^Adam/update_sequential/dense/bias/ResourceApplyAdam"
  input: "^Adam/update_sequential/dense/kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm/bias/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm/kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm/recurrent_kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_1/bias/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_1/kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_1/recurrent_kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_2/bias/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_2/kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_2/recurrent_kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_3/bias/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_3/kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_3/recurrent_kernel/ResourceApplyAdam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/mul"
  op: "Mul"
  input: "Adam/ReadVariableOp"
  input: "Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/AssignVariableOp"
  op: "AssignVariableOp"
  input: "beta1_power"
  input: "Adam/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "beta1_power"
  input: "^Adam/AssignVariableOp"
  input: "^Adam/update_sequential/dense/bias/ResourceApplyAdam"
  input: "^Adam/update_sequential/dense/kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm/bias/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm/kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm/recurrent_kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_1/bias/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_1/kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_1/recurrent_kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_2/bias/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_2/kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_2/recurrent_kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_3/bias/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_3/kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_3/recurrent_kernel/ResourceApplyAdam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^Adam/update_sequential/dense/bias/ResourceApplyAdam"
  input: "^Adam/update_sequential/dense/kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm/bias/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm/kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm/recurrent_kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_1/bias/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_1/kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_1/recurrent_kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_2/bias/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_2/kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_2/recurrent_kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_3/bias/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_3/kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_3/recurrent_kernel/ResourceApplyAdam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/mul_1"
  op: "Mul"
  input: "Adam/ReadVariableOp_2"
  input: "Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "beta2_power"
  input: "Adam/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "beta2_power"
  input: "^Adam/AssignVariableOp_1"
  input: "^Adam/update_sequential/dense/bias/ResourceApplyAdam"
  input: "^Adam/update_sequential/dense/kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm/bias/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm/kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm/recurrent_kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_1/bias/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_1/kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_1/recurrent_kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_2/bias/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_2/kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_2/recurrent_kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_3/bias/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_3/kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_3/recurrent_kernel/ResourceApplyAdam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@sequential/dense/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Adam/update"
  op: "NoOp"
  input: "^Adam/AssignVariableOp"
  input: "^Adam/AssignVariableOp_1"
  input: "^Adam/update_sequential/dense/bias/ResourceApplyAdam"
  input: "^Adam/update_sequential/dense/kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm/bias/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm/kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm/recurrent_kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_1/bias/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_1/kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_1/recurrent_kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_2/bias/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_2/kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_2/recurrent_kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_3/bias/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_3/kernel/ResourceApplyAdam"
  input: "^Adam/update_sequential/lstm_3/recurrent_kernel/ResourceApplyAdam"
}
node {
  name: "Adam/value"
  op: "Const"
  input: "^Adam/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "Adam"
  op: "AssignAdd"
  input: "global_step"
  input: "Adam/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "loss"
  op: "ScalarSummary"
  input: "loss/tags"
  input: "sigmoid_cross_entropy_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^global_step/Assign"
  input: "^sequential/dense/bias/Adam/Assign"
  input: "^sequential/dense/bias/Adam_1/Assign"
  input: "^sequential/dense/bias/Assign"
  input: "^sequential/dense/kernel/Adam/Assign"
  input: "^sequential/dense/kernel/Adam_1/Assign"
  input: "^sequential/dense/kernel/Assign"
  input: "^sequential/lstm/bias/Adam/Assign"
  input: "^sequential/lstm/bias/Adam_1/Assign"
  input: "^sequential/lstm/bias/Assign"
  input: "^sequential/lstm/kernel/Adam/Assign"
  input: "^sequential/lstm/kernel/Adam_1/Assign"
  input: "^sequential/lstm/kernel/Assign"
  input: "^sequential/lstm/recurrent_kernel/Adam/Assign"
  input: "^sequential/lstm/recurrent_kernel/Adam_1/Assign"
  input: "^sequential/lstm/recurrent_kernel/Assign"
  input: "^sequential/lstm_1/bias/Adam/Assign"
  input: "^sequential/lstm_1/bias/Adam_1/Assign"
  input: "^sequential/lstm_1/bias/Assign"
  input: "^sequential/lstm_1/kernel/Adam/Assign"
  input: "^sequential/lstm_1/kernel/Adam_1/Assign"
  input: "^sequential/lstm_1/kernel/Assign"
  input: "^sequential/lstm_1/recurrent_kernel/Adam/Assign"
  input: "^sequential/lstm_1/recurrent_kernel/Adam_1/Assign"
  input: "^sequential/lstm_1/recurrent_kernel/Assign"
  input: "^sequential/lstm_2/bias/Adam/Assign"
  input: "^sequential/lstm_2/bias/Adam_1/Assign"
  input: "^sequential/lstm_2/bias/Assign"
  input: "^sequential/lstm_2/kernel/Adam/Assign"
  input: "^sequential/lstm_2/kernel/Adam_1/Assign"
  input: "^sequential/lstm_2/kernel/Assign"
  input: "^sequential/lstm_2/recurrent_kernel/Adam/Assign"
  input: "^sequential/lstm_2/recurrent_kernel/Adam_1/Assign"
  input: "^sequential/lstm_2/recurrent_kernel/Assign"
  input: "^sequential/lstm_3/bias/Adam/Assign"
  input: "^sequential/lstm_3/bias/Adam_1/Assign"
  input: "^sequential/lstm_3/bias/Assign"
  input: "^sequential/lstm_3/kernel/Adam/Assign"
  input: "^sequential/lstm_3/kernel/Adam_1/Assign"
  input: "^sequential/lstm_3/kernel/Assign"
  input: "^sequential/lstm_3/recurrent_kernel/Adam/Assign"
  input: "^sequential/lstm_3/recurrent_kernel/Adam_1/Assign"
  input: "^sequential/lstm_3/recurrent_kernel/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "sequential/lstm/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "sequential/lstm/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_1/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_2/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_3/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "sequential/dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "sequential/dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "sequential/lstm/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "sequential/lstm/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "sequential/lstm/recurrent_kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "sequential/lstm/recurrent_kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "sequential/lstm/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "sequential/lstm/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_1/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_1/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_1/recurrent_kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_1/recurrent_kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_2/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_2/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_2/recurrent_kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_31"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_2/recurrent_kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_32"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_33"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_34"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_3/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_35"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_3/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_36"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_3/recurrent_kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_37"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_3/recurrent_kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_38"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_3/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_39"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_3/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_40"
  op: "VarIsInitializedOp"
  input: "sequential/dense/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_41"
  op: "VarIsInitializedOp"
  input: "sequential/dense/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_42"
  op: "VarIsInitializedOp"
  input: "sequential/dense/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_43"
  op: "VarIsInitializedOp"
  input: "sequential/dense/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "precision/true_positives/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@precision/true_positives/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "precision/false_positives/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@precision/false_positives/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "recall/true_positives/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recall/true_positives/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "recall/false_negatives/count"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@recall/false_negatives/count"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "f1/true_positives"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@f1/true_positives"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "f1/false_negatives"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@f1/false_negatives"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "f1/false_positives"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@f1/false_positives"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/VarIsInitializedOp"
  input: "report_uninitialized_variables/VarIsInitializedOp_1"
  input: "report_uninitialized_variables/VarIsInitializedOp_2"
  input: "report_uninitialized_variables/VarIsInitializedOp_3"
  input: "report_uninitialized_variables/VarIsInitializedOp_4"
  input: "report_uninitialized_variables/VarIsInitializedOp_5"
  input: "report_uninitialized_variables/VarIsInitializedOp_6"
  input: "report_uninitialized_variables/VarIsInitializedOp_7"
  input: "report_uninitialized_variables/VarIsInitializedOp_8"
  input: "report_uninitialized_variables/VarIsInitializedOp_9"
  input: "report_uninitialized_variables/VarIsInitializedOp_10"
  input: "report_uninitialized_variables/VarIsInitializedOp_11"
  input: "report_uninitialized_variables/VarIsInitializedOp_12"
  input: "report_uninitialized_variables/VarIsInitializedOp_13"
  input: "report_uninitialized_variables/VarIsInitializedOp_14"
  input: "report_uninitialized_variables/VarIsInitializedOp_15"
  input: "report_uninitialized_variables/VarIsInitializedOp_16"
  input: "report_uninitialized_variables/VarIsInitializedOp_17"
  input: "report_uninitialized_variables/VarIsInitializedOp_18"
  input: "report_uninitialized_variables/VarIsInitializedOp_19"
  input: "report_uninitialized_variables/VarIsInitializedOp_20"
  input: "report_uninitialized_variables/VarIsInitializedOp_21"
  input: "report_uninitialized_variables/VarIsInitializedOp_22"
  input: "report_uninitialized_variables/VarIsInitializedOp_23"
  input: "report_uninitialized_variables/VarIsInitializedOp_24"
  input: "report_uninitialized_variables/VarIsInitializedOp_25"
  input: "report_uninitialized_variables/VarIsInitializedOp_26"
  input: "report_uninitialized_variables/VarIsInitializedOp_27"
  input: "report_uninitialized_variables/VarIsInitializedOp_28"
  input: "report_uninitialized_variables/VarIsInitializedOp_29"
  input: "report_uninitialized_variables/VarIsInitializedOp_30"
  input: "report_uninitialized_variables/VarIsInitializedOp_31"
  input: "report_uninitialized_variables/VarIsInitializedOp_32"
  input: "report_uninitialized_variables/VarIsInitializedOp_33"
  input: "report_uninitialized_variables/VarIsInitializedOp_34"
  input: "report_uninitialized_variables/VarIsInitializedOp_35"
  input: "report_uninitialized_variables/VarIsInitializedOp_36"
  input: "report_uninitialized_variables/VarIsInitializedOp_37"
  input: "report_uninitialized_variables/VarIsInitializedOp_38"
  input: "report_uninitialized_variables/VarIsInitializedOp_39"
  input: "report_uninitialized_variables/VarIsInitializedOp_40"
  input: "report_uninitialized_variables/VarIsInitializedOp_41"
  input: "report_uninitialized_variables/VarIsInitializedOp_42"
  input: "report_uninitialized_variables/VarIsInitializedOp_43"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 52
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 52
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 52
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 52
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 52
          }
        }
        string_val: "global_step"
        string_val: "sequential/lstm/kernel"
        string_val: "sequential/lstm/recurrent_kernel"
        string_val: "sequential/lstm/bias"
        string_val: "sequential/lstm_1/kernel"
        string_val: "sequential/lstm_1/recurrent_kernel"
        string_val: "sequential/lstm_1/bias"
        string_val: "sequential/lstm_2/kernel"
        string_val: "sequential/lstm_2/recurrent_kernel"
        string_val: "sequential/lstm_2/bias"
        string_val: "sequential/lstm_3/kernel"
        string_val: "sequential/lstm_3/recurrent_kernel"
        string_val: "sequential/lstm_3/bias"
        string_val: "sequential/dense/kernel"
        string_val: "sequential/dense/bias"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "sequential/lstm/kernel/Adam"
        string_val: "sequential/lstm/kernel/Adam_1"
        string_val: "sequential/lstm/recurrent_kernel/Adam"
        string_val: "sequential/lstm/recurrent_kernel/Adam_1"
        string_val: "sequential/lstm/bias/Adam"
        string_val: "sequential/lstm/bias/Adam_1"
        string_val: "sequential/lstm_1/kernel/Adam"
        string_val: "sequential/lstm_1/kernel/Adam_1"
        string_val: "sequential/lstm_1/recurrent_kernel/Adam"
        string_val: "sequential/lstm_1/recurrent_kernel/Adam_1"
        string_val: "sequential/lstm_1/bias/Adam"
        string_val: "sequential/lstm_1/bias/Adam_1"
        string_val: "sequential/lstm_2/kernel/Adam"
        string_val: "sequential/lstm_2/kernel/Adam_1"
        string_val: "sequential/lstm_2/recurrent_kernel/Adam"
        string_val: "sequential/lstm_2/recurrent_kernel/Adam_1"
        string_val: "sequential/lstm_2/bias/Adam"
        string_val: "sequential/lstm_2/bias/Adam_1"
        string_val: "sequential/lstm_3/kernel/Adam"
        string_val: "sequential/lstm_3/kernel/Adam_1"
        string_val: "sequential/lstm_3/recurrent_kernel/Adam"
        string_val: "sequential/lstm_3/recurrent_kernel/Adam_1"
        string_val: "sequential/lstm_3/bias/Adam"
        string_val: "sequential/lstm_3/bias/Adam_1"
        string_val: "sequential/dense/kernel/Adam"
        string_val: "sequential/dense/kernel/Adam_1"
        string_val: "sequential/dense/bias/Adam"
        string_val: "sequential/dense/bias/Adam_1"
        string_val: "precision/true_positives/count"
        string_val: "precision/false_positives/count"
        string_val: "recall/true_positives/count"
        string_val: "recall/false_negatives/count"
        string_val: "f1/true_positives"
        string_val: "f1/false_negatives"
        string_val: "f1/false_positives"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 52
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 52
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 52
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 52
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 52
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/GatherV2"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "sequential/lstm/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "sequential/lstm/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "sequential/lstm/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_1/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_2/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_3/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_3/recurrent_kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_3/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "sequential/dense/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "sequential/dense/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "sequential/lstm/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "sequential/lstm/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "sequential/lstm/recurrent_kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "sequential/lstm/recurrent_kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "sequential/lstm/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "sequential/lstm/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_1/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_1/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_1/recurrent_kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_1/recurrent_kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_2/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_2/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_30"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_2/recurrent_kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_31"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_2/recurrent_kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_32"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_33"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_34"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_3/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_35"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_3/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_36"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_3/recurrent_kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_37"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_3/recurrent_kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_38"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_3/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_39"
  op: "VarIsInitializedOp"
  input: "sequential/lstm_3/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_40"
  op: "VarIsInitializedOp"
  input: "sequential/dense/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_41"
  op: "VarIsInitializedOp"
  input: "sequential/dense/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_42"
  op: "VarIsInitializedOp"
  input: "sequential/dense/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_43"
  op: "VarIsInitializedOp"
  input: "sequential/dense/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/VarIsInitializedOp"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_12"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_13"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_14"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_15"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_16"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_17"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_18"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_19"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_20"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_21"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_22"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_23"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_24"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_25"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_26"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_27"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_28"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_29"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_30"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_31"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_32"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_33"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_34"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_35"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_36"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_37"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_38"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_39"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_40"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_41"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_42"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_43"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 45
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 45
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 45
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 45
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 45
          }
        }
        string_val: "global_step"
        string_val: "sequential/lstm/kernel"
        string_val: "sequential/lstm/recurrent_kernel"
        string_val: "sequential/lstm/bias"
        string_val: "sequential/lstm_1/kernel"
        string_val: "sequential/lstm_1/recurrent_kernel"
        string_val: "sequential/lstm_1/bias"
        string_val: "sequential/lstm_2/kernel"
        string_val: "sequential/lstm_2/recurrent_kernel"
        string_val: "sequential/lstm_2/bias"
        string_val: "sequential/lstm_3/kernel"
        string_val: "sequential/lstm_3/recurrent_kernel"
        string_val: "sequential/lstm_3/bias"
        string_val: "sequential/dense/kernel"
        string_val: "sequential/dense/bias"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "sequential/lstm/kernel/Adam"
        string_val: "sequential/lstm/kernel/Adam_1"
        string_val: "sequential/lstm/recurrent_kernel/Adam"
        string_val: "sequential/lstm/recurrent_kernel/Adam_1"
        string_val: "sequential/lstm/bias/Adam"
        string_val: "sequential/lstm/bias/Adam_1"
        string_val: "sequential/lstm_1/kernel/Adam"
        string_val: "sequential/lstm_1/kernel/Adam_1"
        string_val: "sequential/lstm_1/recurrent_kernel/Adam"
        string_val: "sequential/lstm_1/recurrent_kernel/Adam_1"
        string_val: "sequential/lstm_1/bias/Adam"
        string_val: "sequential/lstm_1/bias/Adam_1"
        string_val: "sequential/lstm_2/kernel/Adam"
        string_val: "sequential/lstm_2/kernel/Adam_1"
        string_val: "sequential/lstm_2/recurrent_kernel/Adam"
        string_val: "sequential/lstm_2/recurrent_kernel/Adam_1"
        string_val: "sequential/lstm_2/bias/Adam"
        string_val: "sequential/lstm_2/bias/Adam_1"
        string_val: "sequential/lstm_3/kernel/Adam"
        string_val: "sequential/lstm_3/kernel/Adam_1"
        string_val: "sequential/lstm_3/recurrent_kernel/Adam"
        string_val: "sequential/lstm_3/recurrent_kernel/Adam_1"
        string_val: "sequential/lstm_3/bias/Adam"
        string_val: "sequential/lstm_3/bias/Adam_1"
        string_val: "sequential/dense/kernel/Adam"
        string_val: "sequential/dense/kernel/Adam_1"
        string_val: "sequential/dense/bias/Adam"
        string_val: "sequential/dense/bias/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 45
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 45
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 45
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 45
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 45
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_resources_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_1"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  input: "report_uninitialized_resources_1/Const"
  input: "concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
  input: "^f1/false_negatives/Assign"
  input: "^f1/false_positives/Assign"
  input: "^f1/true_positives/Assign"
  input: "^precision/false_positives/count/Assign"
  input: "^precision/true_positives/count/Assign"
  input: "^recall/false_negatives/count/Assign"
  input: "^recall/true_positives/count/Assign"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "init_3"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_3"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_162ffac9bb5a430e9dd317f756887f37/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 45
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 45
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "global_step"
        string_val: "sequential/dense/bias"
        string_val: "sequential/dense/bias/Adam"
        string_val: "sequential/dense/bias/Adam_1"
        string_val: "sequential/dense/kernel"
        string_val: "sequential/dense/kernel/Adam"
        string_val: "sequential/dense/kernel/Adam_1"
        string_val: "sequential/lstm/bias"
        string_val: "sequential/lstm/bias/Adam"
        string_val: "sequential/lstm/bias/Adam_1"
        string_val: "sequential/lstm/kernel"
        string_val: "sequential/lstm/kernel/Adam"
        string_val: "sequential/lstm/kernel/Adam_1"
        string_val: "sequential/lstm/recurrent_kernel"
        string_val: "sequential/lstm/recurrent_kernel/Adam"
        string_val: "sequential/lstm/recurrent_kernel/Adam_1"
        string_val: "sequential/lstm_1/bias"
        string_val: "sequential/lstm_1/bias/Adam"
        string_val: "sequential/lstm_1/bias/Adam_1"
        string_val: "sequential/lstm_1/kernel"
        string_val: "sequential/lstm_1/kernel/Adam"
        string_val: "sequential/lstm_1/kernel/Adam_1"
        string_val: "sequential/lstm_1/recurrent_kernel"
        string_val: "sequential/lstm_1/recurrent_kernel/Adam"
        string_val: "sequential/lstm_1/recurrent_kernel/Adam_1"
        string_val: "sequential/lstm_2/bias"
        string_val: "sequential/lstm_2/bias/Adam"
        string_val: "sequential/lstm_2/bias/Adam_1"
        string_val: "sequential/lstm_2/kernel"
        string_val: "sequential/lstm_2/kernel/Adam"
        string_val: "sequential/lstm_2/kernel/Adam_1"
        string_val: "sequential/lstm_2/recurrent_kernel"
        string_val: "sequential/lstm_2/recurrent_kernel/Adam"
        string_val: "sequential/lstm_2/recurrent_kernel/Adam_1"
        string_val: "sequential/lstm_3/bias"
        string_val: "sequential/lstm_3/bias/Adam"
        string_val: "sequential/lstm_3/bias/Adam_1"
        string_val: "sequential/lstm_3/kernel"
        string_val: "sequential/lstm_3/kernel/Adam"
        string_val: "sequential/lstm_3/kernel/Adam_1"
        string_val: "sequential/lstm_3/recurrent_kernel"
        string_val: "sequential/lstm_3/recurrent_kernel/Adam"
        string_val: "sequential/lstm_3/recurrent_kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 45
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 45
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "beta1_power/Read/ReadVariableOp"
  input: "beta2_power/Read/ReadVariableOp"
  input: "global_step"
  input: "sequential/dense/bias/Read/ReadVariableOp"
  input: "sequential/dense/bias/Adam/Read/ReadVariableOp"
  input: "sequential/dense/bias/Adam_1/Read/ReadVariableOp"
  input: "sequential/dense/kernel/Read/ReadVariableOp"
  input: "sequential/dense/kernel/Adam/Read/ReadVariableOp"
  input: "sequential/dense/kernel/Adam_1/Read/ReadVariableOp"
  input: "sequential/lstm/bias/Read/ReadVariableOp"
  input: "sequential/lstm/bias/Adam/Read/ReadVariableOp"
  input: "sequential/lstm/bias/Adam_1/Read/ReadVariableOp"
  input: "sequential/lstm/kernel/Read/ReadVariableOp"
  input: "sequential/lstm/kernel/Adam/Read/ReadVariableOp"
  input: "sequential/lstm/kernel/Adam_1/Read/ReadVariableOp"
  input: "sequential/lstm/recurrent_kernel/Read/ReadVariableOp"
  input: "sequential/lstm/recurrent_kernel/Adam/Read/ReadVariableOp"
  input: "sequential/lstm/recurrent_kernel/Adam_1/Read/ReadVariableOp"
  input: "sequential/lstm_1/bias/Read/ReadVariableOp"
  input: "sequential/lstm_1/bias/Adam/Read/ReadVariableOp"
  input: "sequential/lstm_1/bias/Adam_1/Read/ReadVariableOp"
  input: "sequential/lstm_1/kernel/Read/ReadVariableOp"
  input: "sequential/lstm_1/kernel/Adam/Read/ReadVariableOp"
  input: "sequential/lstm_1/kernel/Adam_1/Read/ReadVariableOp"
  input: "sequential/lstm_1/recurrent_kernel/Read/ReadVariableOp"
  input: "sequential/lstm_1/recurrent_kernel/Adam/Read/ReadVariableOp"
  input: "sequential/lstm_1/recurrent_kernel/Adam_1/Read/ReadVariableOp"
  input: "sequential/lstm_2/bias/Read/ReadVariableOp"
  input: "sequential/lstm_2/bias/Adam/Read/ReadVariableOp"
  input: "sequential/lstm_2/bias/Adam_1/Read/ReadVariableOp"
  input: "sequential/lstm_2/kernel/Read/ReadVariableOp"
  input: "sequential/lstm_2/kernel/Adam/Read/ReadVariableOp"
  input: "sequential/lstm_2/kernel/Adam_1/Read/ReadVariableOp"
  input: "sequential/lstm_2/recurrent_kernel/Read/ReadVariableOp"
  input: "sequential/lstm_2/recurrent_kernel/Adam/Read/ReadVariableOp"
  input: "sequential/lstm_2/recurrent_kernel/Adam_1/Read/ReadVariableOp"
  input: "sequential/lstm_3/bias/Read/ReadVariableOp"
  input: "sequential/lstm_3/bias/Adam/Read/ReadVariableOp"
  input: "sequential/lstm_3/bias/Adam_1/Read/ReadVariableOp"
  input: "sequential/lstm_3/kernel/Read/ReadVariableOp"
  input: "sequential/lstm_3/kernel/Adam/Read/ReadVariableOp"
  input: "sequential/lstm_3/kernel/Adam_1/Read/ReadVariableOp"
  input: "sequential/lstm_3/recurrent_kernel/Read/ReadVariableOp"
  input: "sequential/lstm_3/recurrent_kernel/Adam/Read/ReadVariableOp"
  input: "sequential/lstm_3/recurrent_kernel/Adam_1/Read/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/MergeV2Checkpoints"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 45
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 45
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "global_step"
        string_val: "sequential/dense/bias"
        string_val: "sequential/dense/bias/Adam"
        string_val: "sequential/dense/bias/Adam_1"
        string_val: "sequential/dense/kernel"
        string_val: "sequential/dense/kernel/Adam"
        string_val: "sequential/dense/kernel/Adam_1"
        string_val: "sequential/lstm/bias"
        string_val: "sequential/lstm/bias/Adam"
        string_val: "sequential/lstm/bias/Adam_1"
        string_val: "sequential/lstm/kernel"
        string_val: "sequential/lstm/kernel/Adam"
        string_val: "sequential/lstm/kernel/Adam_1"
        string_val: "sequential/lstm/recurrent_kernel"
        string_val: "sequential/lstm/recurrent_kernel/Adam"
        string_val: "sequential/lstm/recurrent_kernel/Adam_1"
        string_val: "sequential/lstm_1/bias"
        string_val: "sequential/lstm_1/bias/Adam"
        string_val: "sequential/lstm_1/bias/Adam_1"
        string_val: "sequential/lstm_1/kernel"
        string_val: "sequential/lstm_1/kernel/Adam"
        string_val: "sequential/lstm_1/kernel/Adam_1"
        string_val: "sequential/lstm_1/recurrent_kernel"
        string_val: "sequential/lstm_1/recurrent_kernel/Adam"
        string_val: "sequential/lstm_1/recurrent_kernel/Adam_1"
        string_val: "sequential/lstm_2/bias"
        string_val: "sequential/lstm_2/bias/Adam"
        string_val: "sequential/lstm_2/bias/Adam_1"
        string_val: "sequential/lstm_2/kernel"
        string_val: "sequential/lstm_2/kernel/Adam"
        string_val: "sequential/lstm_2/kernel/Adam_1"
        string_val: "sequential/lstm_2/recurrent_kernel"
        string_val: "sequential/lstm_2/recurrent_kernel/Adam"
        string_val: "sequential/lstm_2/recurrent_kernel/Adam_1"
        string_val: "sequential/lstm_3/bias"
        string_val: "sequential/lstm_3/bias/Adam"
        string_val: "sequential/lstm_3/bias/Adam_1"
        string_val: "sequential/lstm_3/kernel"
        string_val: "sequential/lstm_3/kernel/Adam"
        string_val: "sequential/lstm_3/kernel/Adam_1"
        string_val: "sequential/lstm_3/recurrent_kernel"
        string_val: "sequential/lstm_3/recurrent_kernel/Adam"
        string_val: "sequential/lstm_3/recurrent_kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 45
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 45
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Identity_1"
  op: "Identity"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp"
  op: "AssignVariableOp"
  input: "beta1_power"
  input: "save/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_2"
  op: "Identity"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "beta2_power"
  input: "save/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity_3"
  op: "Identity"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "sequential/dense/bias"
  input: "save/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_4"
  op: "Identity"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "sequential/dense/bias/Adam"
  input: "save/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_5"
  op: "Identity"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "sequential/dense/bias/Adam_1"
  input: "save/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_6"
  op: "Identity"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "sequential/dense/kernel"
  input: "save/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_7"
  op: "Identity"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "sequential/dense/kernel/Adam"
  input: "save/Identity_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_8"
  op: "Identity"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "sequential/dense/kernel/Adam_1"
  input: "save/Identity_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_9"
  op: "Identity"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "sequential/lstm/bias"
  input: "save/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_10"
  op: "Identity"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "sequential/lstm/bias/Adam"
  input: "save/Identity_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_11"
  op: "Identity"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "sequential/lstm/bias/Adam_1"
  input: "save/Identity_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_12"
  op: "Identity"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "sequential/lstm/kernel"
  input: "save/Identity_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_13"
  op: "Identity"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "sequential/lstm/kernel/Adam"
  input: "save/Identity_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_14"
  op: "Identity"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "sequential/lstm/kernel/Adam_1"
  input: "save/Identity_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_15"
  op: "Identity"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "sequential/lstm/recurrent_kernel"
  input: "save/Identity_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_16"
  op: "Identity"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "sequential/lstm/recurrent_kernel/Adam"
  input: "save/Identity_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_17"
  op: "Identity"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "sequential/lstm/recurrent_kernel/Adam_1"
  input: "save/Identity_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_18"
  op: "Identity"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "sequential/lstm_1/bias"
  input: "save/Identity_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_19"
  op: "Identity"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "sequential/lstm_1/bias/Adam"
  input: "save/Identity_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_20"
  op: "Identity"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "sequential/lstm_1/bias/Adam_1"
  input: "save/Identity_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_21"
  op: "Identity"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "sequential/lstm_1/kernel"
  input: "save/Identity_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_22"
  op: "Identity"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "sequential/lstm_1/kernel/Adam"
  input: "save/Identity_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_23"
  op: "Identity"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "sequential/lstm_1/kernel/Adam_1"
  input: "save/Identity_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_24"
  op: "Identity"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_23"
  op: "AssignVariableOp"
  input: "sequential/lstm_1/recurrent_kernel"
  input: "save/Identity_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_25"
  op: "Identity"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_24"
  op: "AssignVariableOp"
  input: "sequential/lstm_1/recurrent_kernel/Adam"
  input: "save/Identity_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_26"
  op: "Identity"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_25"
  op: "AssignVariableOp"
  input: "sequential/lstm_1/recurrent_kernel/Adam_1"
  input: "save/Identity_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_27"
  op: "Identity"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_26"
  op: "AssignVariableOp"
  input: "sequential/lstm_2/bias"
  input: "save/Identity_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_28"
  op: "Identity"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_27"
  op: "AssignVariableOp"
  input: "sequential/lstm_2/bias/Adam"
  input: "save/Identity_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_29"
  op: "Identity"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_28"
  op: "AssignVariableOp"
  input: "sequential/lstm_2/bias/Adam_1"
  input: "save/Identity_29"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_30"
  op: "Identity"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_29"
  op: "AssignVariableOp"
  input: "sequential/lstm_2/kernel"
  input: "save/Identity_30"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_31"
  op: "Identity"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_30"
  op: "AssignVariableOp"
  input: "sequential/lstm_2/kernel/Adam"
  input: "save/Identity_31"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_32"
  op: "Identity"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_31"
  op: "AssignVariableOp"
  input: "sequential/lstm_2/kernel/Adam_1"
  input: "save/Identity_32"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_33"
  op: "Identity"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_32"
  op: "AssignVariableOp"
  input: "sequential/lstm_2/recurrent_kernel"
  input: "save/Identity_33"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_34"
  op: "Identity"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_33"
  op: "AssignVariableOp"
  input: "sequential/lstm_2/recurrent_kernel/Adam"
  input: "save/Identity_34"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_35"
  op: "Identity"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_34"
  op: "AssignVariableOp"
  input: "sequential/lstm_2/recurrent_kernel/Adam_1"
  input: "save/Identity_35"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_36"
  op: "Identity"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_35"
  op: "AssignVariableOp"
  input: "sequential/lstm_3/bias"
  input: "save/Identity_36"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_37"
  op: "Identity"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_36"
  op: "AssignVariableOp"
  input: "sequential/lstm_3/bias/Adam"
  input: "save/Identity_37"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_38"
  op: "Identity"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_37"
  op: "AssignVariableOp"
  input: "sequential/lstm_3/bias/Adam_1"
  input: "save/Identity_38"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_39"
  op: "Identity"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_38"
  op: "AssignVariableOp"
  input: "sequential/lstm_3/kernel"
  input: "save/Identity_39"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_40"
  op: "Identity"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_39"
  op: "AssignVariableOp"
  input: "sequential/lstm_3/kernel/Adam"
  input: "save/Identity_40"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_41"
  op: "Identity"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_40"
  op: "AssignVariableOp"
  input: "sequential/lstm_3/kernel/Adam_1"
  input: "save/Identity_41"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_42"
  op: "Identity"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_41"
  op: "AssignVariableOp"
  input: "sequential/lstm_3/recurrent_kernel"
  input: "save/Identity_42"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_43"
  op: "Identity"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_42"
  op: "AssignVariableOp"
  input: "sequential/lstm_3/recurrent_kernel/Adam"
  input: "save/Identity_43"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_44"
  op: "Identity"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_43"
  op: "AssignVariableOp"
  input: "sequential/lstm_3/recurrent_kernel/Adam_1"
  input: "save/Identity_44"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/AssignVariableOp"
  input: "^save/AssignVariableOp_1"
  input: "^save/AssignVariableOp_10"
  input: "^save/AssignVariableOp_11"
  input: "^save/AssignVariableOp_12"
  input: "^save/AssignVariableOp_13"
  input: "^save/AssignVariableOp_14"
  input: "^save/AssignVariableOp_15"
  input: "^save/AssignVariableOp_16"
  input: "^save/AssignVariableOp_17"
  input: "^save/AssignVariableOp_18"
  input: "^save/AssignVariableOp_19"
  input: "^save/AssignVariableOp_2"
  input: "^save/AssignVariableOp_20"
  input: "^save/AssignVariableOp_21"
  input: "^save/AssignVariableOp_22"
  input: "^save/AssignVariableOp_23"
  input: "^save/AssignVariableOp_24"
  input: "^save/AssignVariableOp_25"
  input: "^save/AssignVariableOp_26"
  input: "^save/AssignVariableOp_27"
  input: "^save/AssignVariableOp_28"
  input: "^save/AssignVariableOp_29"
  input: "^save/AssignVariableOp_3"
  input: "^save/AssignVariableOp_30"
  input: "^save/AssignVariableOp_31"
  input: "^save/AssignVariableOp_32"
  input: "^save/AssignVariableOp_33"
  input: "^save/AssignVariableOp_34"
  input: "^save/AssignVariableOp_35"
  input: "^save/AssignVariableOp_36"
  input: "^save/AssignVariableOp_37"
  input: "^save/AssignVariableOp_38"
  input: "^save/AssignVariableOp_39"
  input: "^save/AssignVariableOp_4"
  input: "^save/AssignVariableOp_40"
  input: "^save/AssignVariableOp_41"
  input: "^save/AssignVariableOp_42"
  input: "^save/AssignVariableOp_43"
  input: "^save/AssignVariableOp_5"
  input: "^save/AssignVariableOp_6"
  input: "^save/AssignVariableOp_7"
  input: "^save/AssignVariableOp_8"
  input: "^save/AssignVariableOp_9"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
library {
  function {
    signature {
      name: "_make_dataset_OMyCPSyA45M"
      output_arg {
        name: "modeldataset"
        type: DT_VARIANT
      }
      description: "Factory function for a dataset."
      is_stateful: true
    }
    node_def {
      name: "optimizations"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 3
              }
            }
            string_val: "map_and_batch_fusion"
            string_val: "noop_elimination"
            string_val: "shuffle_and_repeat_fusion"
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/filenames"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 1
              }
            }
            string_val: "gs://gcp_blog/e2e_demo/train.csv"
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/compression_type"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/buffer_size"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 4194304
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/header"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_BOOL
            tensor_shape {
            }
            bool_val: true
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/field_delim"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ","
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/use_quote_delim"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_BOOL
            tensor_shape {
            }
            bool_val: true
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/na_value"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/select_cols"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
                size: 9
              }
            }
            tensor_content: "\023\000\000\000\000\000\000\000\025\000\000\000\000\000\000\000\026\000\000\000\000\000\000\000\027\000\000\000\000\000\000\000\030\000\000\000\000\000\000\000\031\000\000\000\000\000\000\000\032\000\000\000\000\000\000\000\033\000\000\000\000\000\000\000\034\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/Const"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_DOUBLE
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/Const_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/Const_2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/Const_3"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/Const_4"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/Const_5"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/Const_6"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/Const_7"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/Const_8"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/CSVDataset"
      op: "CSVDataset"
      input: "OptimizeDataset/filenames:output:0"
      input: "OptimizeDataset/compression_type:output:0"
      input: "OptimizeDataset/buffer_size:output:0"
      input: "OptimizeDataset/header:output:0"
      input: "OptimizeDataset/field_delim:output:0"
      input: "OptimizeDataset/use_quote_delim:output:0"
      input: "OptimizeDataset/na_value:output:0"
      input: "OptimizeDataset/select_cols:output:0"
      input: "OptimizeDataset/Const:output:0"
      input: "OptimizeDataset/Const_1:output:0"
      input: "OptimizeDataset/Const_2:output:0"
      input: "OptimizeDataset/Const_3:output:0"
      input: "OptimizeDataset/Const_4:output:0"
      input: "OptimizeDataset/Const_5:output:0"
      input: "OptimizeDataset/Const_6:output:0"
      input: "OptimizeDataset/Const_7:output:0"
      input: "OptimizeDataset/Const_8:output:0"
      device: "/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_DOUBLE
            type: DT_INT32
            type: DT_INT32
            type: DT_INT32
            type: DT_INT32
            type: DT_INT32
            type: DT_INT32
            type: DT_INT32
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/window_stride"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 5
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/window_shift"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 1
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/window_stride_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 1
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/SlidingWindowDataset"
      op: "SlidingWindowDataset"
      input: "OptimizeDataset/CSVDataset:handle:0"
      input: "OptimizeDataset/window_stride:output:0"
      input: "OptimizeDataset/window_shift:output:0"
      input: "OptimizeDataset/window_stride_1:output:0"
      device: "/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_DOUBLE
            type: DT_INT32
            type: DT_INT32
            type: DT_INT32
            type: DT_INT32
            type: DT_INT32
            type: DT_INT32
            type: DT_INT32
            type: DT_INT32
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/MapDataset"
      op: "MapDataset"
      input: "OptimizeDataset/SlidingWindowDataset:handle:0"
      device: "/device:CPU:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "__inference_Dataset_map__mk_data_9011"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_UINT8
          }
        }
      }
      attr {
        key: "preserve_cardinality"
        value {
          b: false
        }
      }
      attr {
        key: "use_inter_op_parallelism"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "OptimizeDataset/FilterDataset"
      op: "FilterDataset"
      input: "OptimizeDataset/MapDataset:handle:0"
      device: "/device:CPU:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_UINT8
          }
        }
      }
      attr {
        key: "predicate"
        value {
          func {
            name: "__inference_Dataset_filter__filter_data_9036"
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/buffer_size_1"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 604800
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/seed"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/seed2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/ShuffleDataset"
      op: "ShuffleDataset"
      input: "OptimizeDataset/FilterDataset:handle:0"
      input: "OptimizeDataset/buffer_size_1:output:0"
      input: "OptimizeDataset/seed:output:0"
      input: "OptimizeDataset/seed2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_UINT8
          }
        }
      }
      attr {
        key: "reshuffle_each_iteration"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "OptimizeDataset/count"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 40
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/RepeatDataset"
      op: "RepeatDataset"
      input: "OptimizeDataset/ShuffleDataset:handle:0"
      input: "OptimizeDataset/count:output:0"
      device: "/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_UINT8
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/batch_size"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 64
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/drop_remainder"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_BOOL
            tensor_shape {
            }
            bool_val: false
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/BatchDatasetV2"
      op: "BatchDatasetV2"
      input: "OptimizeDataset/RepeatDataset:handle:0"
      input: "OptimizeDataset/batch_size:output:0"
      input: "OptimizeDataset/drop_remainder:output:0"
      device: "/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_UINT8
          }
        }
      }
      attr {
        key: "parallel_copy"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "OptimizeDataset/buffer_size_2"
      op: "Const"
      device: "/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 1
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset/PrefetchDataset"
      op: "PrefetchDataset"
      input: "OptimizeDataset/BatchDatasetV2:handle:0"
      input: "OptimizeDataset/buffer_size_2:output:0"
      device: "/device:CPU:0"
      attr {
        key: "legacy_autotune"
        value {
          b: true
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_UINT8
          }
        }
      }
      attr {
        key: "slack_period"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "OptimizeDataset"
      op: "OptimizeDataset"
      input: "OptimizeDataset/PrefetchDataset:handle:0"
      input: "optimizations:output:0"
      device: "/device:CPU:0"
      attr {
        key: "optimization_configs"
        value {
          list {
            s: "map_vectorization:use_choose_fastest:false"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_UINT8
          }
        }
      }
    }
    node_def {
      name: "ModelDataset"
      op: "ModelDataset"
      input: "OptimizeDataset:handle:0"
      device: "/device:CPU:0"
      attr {
        key: "algorithm"
        value {
          i: 0
        }
      }
      attr {
        key: "cpu_budget"
        value {
          i: 0
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_DOUBLE
            type: DT_UINT8
          }
        }
      }
    }
    ret {
      key: "modeldataset"
      value: "ModelDataset:handle:0"
    }
    attr {
      key: "_disable_call_shape_inference"
      value {
        b: true
      }
    }
  }
  function {
    signature {
      name: "__inference_Dataset_map__mk_data_9011"
      input_arg {
        name: "args_0"
        type: DT_DOUBLE
      }
      input_arg {
        name: "args_1"
        type: DT_INT32
      }
      input_arg {
        name: "args_2"
        type: DT_INT32
      }
      input_arg {
        name: "args_3"
        type: DT_INT32
      }
      input_arg {
        name: "args_4"
        type: DT_INT32
      }
      input_arg {
        name: "args_5"
        type: DT_INT32
      }
      input_arg {
        name: "args_6"
        type: DT_INT32
      }
      input_arg {
        name: "args_7"
        type: DT_INT32
      }
      input_arg {
        name: "args_8"
        type: DT_INT32
      }
      output_arg {
        name: "identity"
        type: DT_DOUBLE
      }
      output_arg {
        name: "identity_1"
        type: DT_DOUBLE
      }
      output_arg {
        name: "identity_2"
        type: DT_DOUBLE
      }
      output_arg {
        name: "identity_3"
        type: DT_DOUBLE
      }
      output_arg {
        name: "identity_4"
        type: DT_DOUBLE
      }
      output_arg {
        name: "identity_5"
        type: DT_UINT8
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 5
          }
        }
      }
    }
    node_def {
      name: "split/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "split"
      op: "Split"
      input: "split/split_dim:output:0"
      input: "args_0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 5
        }
      }
    }
    node_def {
      name: "Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 5
          }
        }
      }
    }
    node_def {
      name: "split_1/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "split_1"
      op: "Split"
      input: "split_1/split_dim:output:0"
      input: "args_1"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 5
        }
      }
    }
    node_def {
      name: "strided_slice/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "strided_slice/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice"
      op: "StridedSlice"
      input: "split_1:output:4"
      input: "strided_slice/stack:output:0"
      input: "strided_slice/stack_1:output:0"
      input: "strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "Const_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 5
          }
        }
      }
    }
    node_def {
      name: "split_2/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "split_2"
      op: "Split"
      input: "split_2/split_dim:output:0"
      input: "args_2"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 5
        }
      }
    }
    node_def {
      name: "strided_slice_1/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice_1"
      op: "StridedSlice"
      input: "split_2:output:4"
      input: "strided_slice_1/stack:output:0"
      input: "strided_slice_1/stack_1:output:0"
      input: "strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "Const_3"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 5
          }
        }
      }
    }
    node_def {
      name: "split_3/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "split_3"
      op: "Split"
      input: "split_3/split_dim:output:0"
      input: "args_3"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 5
        }
      }
    }
    node_def {
      name: "strided_slice_2/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice_2"
      op: "StridedSlice"
      input: "split_3:output:4"
      input: "strided_slice_2/stack:output:0"
      input: "strided_slice_2/stack_1:output:0"
      input: "strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "Const_4"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 5
          }
        }
      }
    }
    node_def {
      name: "split_4/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "split_4"
      op: "Split"
      input: "split_4/split_dim:output:0"
      input: "args_4"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 5
        }
      }
    }
    node_def {
      name: "strided_slice_3/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice_3"
      op: "StridedSlice"
      input: "split_4:output:4"
      input: "strided_slice_3/stack:output:0"
      input: "strided_slice_3/stack_1:output:0"
      input: "strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "Const_5"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 5
          }
        }
      }
    }
    node_def {
      name: "split_5/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "split_5"
      op: "Split"
      input: "split_5/split_dim:output:0"
      input: "args_5"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 5
        }
      }
    }
    node_def {
      name: "strided_slice_4/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "strided_slice_4/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice_4/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice_4"
      op: "StridedSlice"
      input: "split_5:output:4"
      input: "strided_slice_4/stack:output:0"
      input: "strided_slice_4/stack_1:output:0"
      input: "strided_slice_4/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "Const_6"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 5
          }
        }
      }
    }
    node_def {
      name: "split_6/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "split_6"
      op: "Split"
      input: "split_6/split_dim:output:0"
      input: "args_6"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 5
        }
      }
    }
    node_def {
      name: "strided_slice_5/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "strided_slice_5/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice_5/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice_5"
      op: "StridedSlice"
      input: "split_6:output:4"
      input: "strided_slice_5/stack:output:0"
      input: "strided_slice_5/stack_1:output:0"
      input: "strided_slice_5/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "Const_7"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 5
          }
        }
      }
    }
    node_def {
      name: "split_7/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "split_7"
      op: "Split"
      input: "split_7/split_dim:output:0"
      input: "args_7"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 5
        }
      }
    }
    node_def {
      name: "strided_slice_6/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "strided_slice_6/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice_6/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice_6"
      op: "StridedSlice"
      input: "split_7:output:4"
      input: "strided_slice_6/stack:output:0"
      input: "strided_slice_6/stack_1:output:0"
      input: "strided_slice_6/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "Const_8"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 5
          }
        }
      }
    }
    node_def {
      name: "split_8/split_dim"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "split_8"
      op: "Split"
      input: "split_8/split_dim:output:0"
      input: "args_8"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
      attr {
        key: "num_split"
        value {
          i: 5
        }
      }
    }
    node_def {
      name: "strided_slice_7/stack"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "strided_slice_7/stack_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice_7/stack_2"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "strided_slice_7"
      op: "StridedSlice"
      input: "split_8:output:4"
      input: "strided_slice_7/stack:output:0"
      input: "strided_slice_7/stack_1:output:0"
      input: "strided_slice_7/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "stack"
      op: "Pack"
      input: "strided_slice:output:0"
      input: "strided_slice_1:output:0"
      input: "strided_slice_2:output:0"
      input: "strided_slice_3:output:0"
      input: "strided_slice_4:output:0"
      input: "strided_slice_5:output:0"
      input: "strided_slice_6:output:0"
      input: "strided_slice_7:output:0"
      attr {
        key: "N"
        value {
          i: 8
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "Cast"
      op: "Cast"
      input: "stack:output:0"
      attr {
        key: "DstT"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "split:output:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_1"
      op: "Identity"
      input: "split:output:1"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_2"
      op: "Identity"
      input: "split:output:2"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_3"
      op: "Identity"
      input: "split:output:3"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_4"
      op: "Identity"
      input: "split:output:4"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: -1
              }
            }
          }
        }
      }
    }
    node_def {
      name: "Identity_5"
      op: "Identity"
      input: "Cast:y:0"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 8
              }
            }
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    ret {
      key: "identity_1"
      value: "Identity_1:output:0"
    }
    ret {
      key: "identity_2"
      value: "Identity_2:output:0"
    }
    ret {
      key: "identity_3"
      value: "Identity_3:output:0"
    }
    ret {
      key: "identity_4"
      value: "Identity_4:output:0"
    }
    ret {
      key: "identity_5"
      value: "Identity_5:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "args_0"
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "args_1"
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "args_2"
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "args_3"
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "args_4"
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "args_5"
          }
        }
      }
    }
    arg_attr {
      key: 6
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "args_6"
          }
        }
      }
    }
    arg_attr {
      key: 7
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "args_7"
          }
        }
      }
    }
    arg_attr {
      key: 8
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "args_8"
          }
        }
      }
    }
  }
  function {
    signature {
      name: "__inference_Dataset_filter__filter_data_9036"
      input_arg {
        name: "args_0"
        type: DT_DOUBLE
      }
      input_arg {
        name: "args_1"
        type: DT_DOUBLE
      }
      input_arg {
        name: "args_2"
        type: DT_DOUBLE
      }
      input_arg {
        name: "args_3"
        type: DT_DOUBLE
      }
      input_arg {
        name: "args_4"
        type: DT_DOUBLE
      }
      input_arg {
        name: "args_5"
        type: DT_UINT8
      }
      output_arg {
        name: "identity"
        type: DT_BOOL
      }
      is_stateful: true
    }
    node_def {
      name: "random_uniform/shape"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "random_uniform/min"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_DOUBLE
            tensor_shape {
            }
            double_val: 0.0
          }
        }
      }
    }
    node_def {
      name: "random_uniform/max"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_DOUBLE
            tensor_shape {
            }
            double_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "random_uniform/RandomUniform"
      op: "RandomUniform"
      input: "random_uniform/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "seed"
        value {
          i: 0
        }
      }
      attr {
        key: "seed2"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "random_uniform/sub"
      op: "Sub"
      input: "random_uniform/max:output:0"
      input: "random_uniform/min:output:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "random_uniform/mul"
      op: "Mul"
      input: "random_uniform/RandomUniform:output:0"
      input: "random_uniform/sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "random_uniform"
      op: "Add"
      input: "random_uniform/mul:z:0"
      input: "random_uniform/min:output:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "Const"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_DOUBLE
            tensor_shape {
            }
            double_val: 0.6827
          }
        }
      }
    }
    node_def {
      name: "Const_1"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
              dim {
                size: 1
              }
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "Sum"
      op: "Sum"
      input: "args_5"
      input: "Const_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "Equal/y"
      op: "Const"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "dtype"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_UINT8
            tensor_shape {
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "Equal"
      op: "Equal"
      input: "Sum:output:0"
      input: "Equal/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_UINT8
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "incompatible_shape_error"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "LogicalNot"
      op: "LogicalNot"
      input: "Equal:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "Less"
      op: "Less"
      input: "random_uniform:z:0"
      input: "Const:output:0"
      attr {
        key: "T"
        value {
          type: DT_DOUBLE
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "LogicalOr"
      op: "LogicalOr"
      input: "LogicalNot:y:0"
      input: "Less:z:0"
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "LogicalOr:z:0"
      attr {
        key: "T"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "_output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    attr {
      key: "_input_shapes"
      value {
        list {
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: -1
            }
          }
          shape {
            dim {
              size: 8
            }
          }
        }
      }
    }
    arg_attr {
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "args_0"
          }
        }
      }
    }
    arg_attr {
      key: 1
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "args_1"
          }
        }
      }
    }
    arg_attr {
      key: 2
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "args_2"
          }
        }
      }
    }
    arg_attr {
      key: 3
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "args_3"
          }
        }
      }
    }
    arg_attr {
      key: 4
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "args_4"
          }
        }
      }
    }
    arg_attr {
      key: 5
      value {
        attr {
          key: "_user_specified_name"
          value {
            s: "args_5"
          }
        }
      }
    }
  }
}
versions {
  producer: 134
  min_consumer: 12
}
